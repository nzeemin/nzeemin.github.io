var Module;if(typeof Module==="undefined")Module={};if(!Module.expectedDataFileDownloads){Module.expectedDataFileDownloads=0;Module.finishedDataFileDownloads=0}Module.expectedDataFileDownloads++;((function(){var loadPackage=(function(metadata){function runWithFS(){var fileData0=[];fileData0.push.apply(fileData0,[119,9,198,17,10,128,106,14,135,0,10,0,193,255,0,0,0,0,7,0,1,0,1,0,7,0,0,0,0,0,193,255,223,11,120,38,253,2,230,23,62,5,223,21,186,9,62,5,197,21,236,37,247,9,80,16,119,9,170,10,200,142,44,18,247,9,232,7,31,10,154,14,159,17,98,14,42,136,91,143,36,136,91,132,192,21,4,0,55,9,38,2,164,131,13,129,250,9,104,128,10,129,246,1,122,128,220,128,250,128,26,129,62,129,94,129,126,129,152,129,216,129,23,32,250,255,33,3,198,23,98,14,42,136,84,143,42,136,98,143,223,11,102,14,4,2,119,9,106,10,200,142,44,18,247,9,230,15,159,21,62,5,31,10,56,14,223,11,58,14,10,2,223,21,2,0,152,14,223,21,2,0,102,37,223,21,2,0,34,14,4,137,135,0,192,21,12,0,34,136,230,21,80,128,159,17,100,14,95,0,126,225,250,9,230,128,192,21,4,0,55,9,162,1,186,131,248,3,135,0,122,229,184,151,202,151,128,16,128,12,192,10,247,9,76,28,192,21,2,0,55,9,132,1,196,131,245,3,135,0,128,16,128,12,192,10,102,17,197,21,174,37,247,9,22,27,133,21,192,21,2,0,55,9,100,1,210,131,241,3,135,0,128,16,192,229,2,0,0,28,74,151,102,17,197,21,174,37,247,9,32,27,133,21,192,21,2,0,55,9,64,1,232,131,239,3,135,0,128,16,128,12,192,10,102,17,197,21,174,37,247,9,32,27,133,21,192,21,2,0,55,9,32,1,254,131,241,3,135,0,128,16,128,12,192,10,102,17,197,21,174,37,247,9,30,27,133,21,192,21,2,0,55,9,0,1,20,132,241,3,135,0,102,17,197,21,174,37,250,9,160,129,133,21,192,21,2,0,55,9,230,0,42,132,244,3,135,0,168,129,174,129,188,129,31,10,94,14,3,1,223,21,2,0,94,14,245,21,2,0,60,0,135,0,53,10,60,0,135,0,223,85,0,2,44,254,194,229,2,0,3,2,223,69,0,2,44,254,192,21,2,0,55,9,166,0,54,132,241,3,135,0,31,10,34,14,38,10,192,21,12,0,34,136,14,10,55,9,154,1,2,5,223,21,250,255,104,14,31,10,116,38,36,136,76,134,192,21,4,0,55,9,118,0,64,132,239,3,42,129,135,96,236,1,6,1,20,1,244,1,243,1,242,1,241,1,240,1,55,9,102,1,4,28,18,136,23,32,27,0,24,3,34,136,192,229,48,0,218,129,23,32,3,0,215,130,14,1,55,9,72,1,5,28,18,136,23,32,27,0,9,3,34,136,192,229,49,0,203,129,23,32,1,0,200,130,14,16,209,1,18,136,193,1,192,21,12,0,34,136,247,9,60,254,128,16,247,9,250,5,128,149,247,9,244,5,31,10,58,14,135,0,223,21,250,255,104,14,38,16,247,9,152,0,135,101,68,1,0,1,0,19,3,28,2,0,195,10,247,9,212,0,3,19,18,136,192,11,59,3,23,32,27,0,12,3,192,229,48,0,5,129,54,3,11,32,244,130,2,16,35,1,192,101,35,0,47,3,31,1,18,136,192,229,126,0,234,129,23,32,6,0,231,134,192,12,7,96,5,1,33,1,10,1,13,1,30,1,29,1,195,21,16,0,247,9,136,0,36,136,6,135,209,1,194,10,7,6,194,18,5,1,130,10,139,32,2,131,194,21,1,0,187,16,4,0,251,10,4,0,0,10,212,11,31,10,104,14,194,12,192,11,132,0,192,21,8,0,192,229,5,0,192,10,244,1,31,10,116,38,2,19,166,20,131,20,206,96,166,22,206,96,192,11,4,2,247,9,54,0,36,136,244,134,247,9,46,0,206,32,2,2,36,136,84,132,129,20,38,136,206,32,2,2,36,136,87,132,131,10,246,32,2,0,240,135,150,37,0,19,2,30,4,0,130,10,223,21,2,0,116,38,135,0,197,23,104,38,192,144,247,9,82,24,195,0,192,144,247,9,52,24,195,0,159,10,54,14,135,0,197,23,104,38,0,149,247,9,56,24,0,149,247,9,28,24,159,10,54,14,132,0,8,0,4,0,106,14,117,132,137,132,157,132,177,132,197,132,217,132,237,132,1,133,2,0,4,24,108,14,21,133,37,133,4,0,4,24,110,14,53,133,63,133,73,133,83,133,8,0,4,24,112,14,93,133,114,133,135,133,156,133,177,133,198,133,219,133,240,133,8,0,4,24,114,14,93,133,114,133,135,133,156,133,177,133,198,133,219,133,240,133,8,0,4,24,116,14,93,133,114,133,135,133,156,133,177,133,198,133,219,133,240,133,8,0,4,24,118,14,93,133,114,133,135,133,156,133,177,133,198,133,219,133,240,133,3,0,4,24,120,14,5,134,20,134,35,134,2,0,4,24,122,14,50,134,63,134,7,0,4,2,124,14,125,134,142,134,159,134,176,134,193,134,210,134,227,134,27,163,0,27,191,163,0,12,10,32,27,164,245,243,244,225,238,239,247,235,225,32,242,229,246,233,237,239,247,27,191,164,0,49,32,45,32,211,201,211,212,197,205,193,32,203,207,205,193,206,196,32,0,50,32,45,32,198,207,210,205,193,212,32,220,203,210,193,206,193,32,32,0,51,32,45,32,195,215,197,212,32,211,201,205,215,207,204,193,32,32,32,0,52,32,45,32,195,215,197,212,32,218,206,193,203,207,205,197,211,212,193,0,53,32,45,32,195,215,197,212,32,220,203,210,193,206,193,32,32,32,32,0,54,32,45,32,195,215,197,212,32,203,213,210,211,207,210,193,32,32,32,0,55,32,45,32,210,213,204,207,206,32,32,32,32,32,32,32,32,32,32,0,56,32,45,32,212,193,202,205,197,210,32,32,32,32,32,32,32,32,32,0,49,32,45,32,86,84,45,53,50,32,32,32,32,32,32,0,50,32,45,32,49,53,233,252,45,48,48,45,48,49,51,0,49,32,45,32,56,48,144,50,52,0,50,32,45,32,52,48,144,50,52,0,51,32,45,32,50,48,144,50,52,0,52,32,45,32,49,48,144,50,52,0,49,32,45,32,27,160,48,27,161,48,159,159,159,159,27,191,160,27,191,161,0,50,32,45,32,27,160,49,27,161,49,159,159,159,159,27,191,160,27,191,161,0,51,32,45,32,27,160,50,27,161,50,159,159,159,159,27,191,160,27,191,161,0,52,32,45,32,27,160,51,27,161,51,159,159,159,159,27,191,160,27,191,161,0,53,32,45,32,27,160,52,27,161,52,159,159,159,159,27,191,160,27,191,161,0,54,32,45,32,27,160,53,27,161,53,159,159,159,159,27,191,160,27,191,161,0,55,32,45,32,27,160,54,27,161,54,159,159,159,159,27,191,160,27,191,161,0,56,32,45,32,27,160,55,27,161,55,159,159,159,159,27,191,160,27,191,161,0,49,32,45,32,208,204,193,215,206,217,202,32,32,32,0,50,32,45,32,196,201,211,203,210,197,212,206,217,202,0,51,32,45,32,215,217,203,204,192,222,197,206,32,32,0,49,32,45,32,215,203,204,192,222,197,206,32,0,50,32,45,32,215,217,203,204,192,222,197,206,0,27,164,250,225,231,242,245,250,235,225,27,191,164,10,10,25,25,25,25,25,25,25,25,40,48,145,51,41,58,32,48,10,26,26,26,26,26,26,26,26,40,49,44,50,41,58,32,49,0,49,32,45,32,196,201,211,203,32,32,32,32,32,32,32,32,0,50,32,45,32,203,193,211,211,197,212,193,32,240,250,245,32,0,51,32,45,32,211,197,212,216,32,32,32,32,32,32,32,32,0,52,32,45,32,211,212,217,203,32,243,50,32,32,32,32,32,0,53,32,45,32,205,193,199,206,201,212,207,198,207,206,32,32,0,54,32,45,32,207,212,204,193,196,203,193,32,32,32,32,32,0,55,32,45,32,212,197,211,212,201,210,207,215,193,206,201,197,0,31,29,31,29,31,29,31,29,31,29,31,29,31,29,31,29,31,0,49,145,57,44,128,44,129,32,45,32,215,217,194,207,210,32,220,204,197,205,197,206,212,193,13,10,32,32,131,32,32,32,32,32,45,32,211,204,197,196,213,192,221,201,202,32,213,210,207,215,197,206,216,13,10,32,32,130,32,32,32,32,32,45,32,208,210,197,196,217,196,213,221,201,202,32,213,210,207,215,197,206,216,13,10,48,44,148,44,233,243,240,32,45,32,215,217,200,207,196,0,0,119,9,104,112,126,14,242,3,223,11,194,255,223,21,10,251,192,0,223,21,128,0,194,0,223,21,64,0,192,255,223,21,96,251,212,0,223,21,128,0,214,0,223,85,1,0,62,254,247,9,148,0,223,21,96,18,96,22,223,21,156,14,140,14,223,21,156,14,142,14,223,149,32,0,145,14,223,149,14,0,146,14,223,149,15,0,147,14,193,21,80,139,192,21,156,14,196,21,5,0,194,21,88,0,3,16,83,148,19,138,131,126,194,21,0,1,67,148,7,3,4,129,195,10,195,12,3,96,139,16,130,10,247,1,67,148,7,3,195,10,195,12,3,96,75,16,209,139,254,2,247,1,192,101,176,0,29,127,247,9,170,15,223,149,2,0,150,14,135,0,31,10,192,255,223,139,192,255,253,128,223,139,194,255,250,129,223,21,64,0,192,255,119,9,168,111,160,4,12,0,223,21,176,4,126,14,223,21,176,4,128,14,223,21,160,4,130,14,223,21,160,4,132,14,223,21,128,4,134,14,223,21,128,4,136,14,135,0,2,137,199,103,152,14,4,1,31,10,152,14,0,137,248,1,54,16,2,0,135,0,63,16,20,134,223,101,2,0,136,14,223,69,32,0,136,14,199,103,152,14,135,0,2,137,135,0,31,10,48,14,31,138,151,14,199,103,152,14,135,0,2,137,135,0,255,139,226,133,244,3,223,139,151,14,245,2,195,23,130,14,192,148,23,2,195,69,16,0,223,32,132,14,249,2,223,151,150,14,151,14,223,10,48,14,230,1,193,23,126,14,64,146,231,3,223,10,48,14,17,138,193,69,8,0,95,16,126,14,3,10,2,16,54,129,23,118,60,0,1,156,72,139,128,16,64,224,192,12,192,103,140,14,0,18,1,16,193,0,6,3,129,140,14,2,0,144,192,12,120,0,204,137,223,11,154,14,29,2,192,139,5,129,23,32,64,0,2,135,192,215,144,14,195,11,13,2,255,139,94,133,3,2,223,149,25,0,151,14,191,144,84,133,159,10,132,14,223,69,16,0,132,14,193,23,136,14,17,16,193,69,32,0,95,16,136,14,195,11,178,2,188,1,192,23,138,14,28,3,128,160,4,3,192,0,254,3,128,160,22,2,0,138,192,0,31,16,138,14,0,10,151,160,133,0,6,3,192,151,148,14,5,3,31,138,148,14,2,1,223,0,144,14,223,23,142,14,140,14,192,11,216,2,157,1,194,69,240,255,193,23,130,14,64,148,6,3,192,69,240,255,2,32,16,3,131,16,145,3,193,69,16,0,195,11,2,2,95,16,130,14,95,32,132,14,239,2,223,149,2,0,150,14,119,0,6,255,49,138,255,255,2,10,195,11,249,2,236,1,246,137,36,138,78,138,104,138,112,138,220,137,156,138,230,137,31,10,34,14,159,10,56,14,179,1,247,9,218,49,223,23,142,14,140,14,31,10,138,14,171,1,255,139,136,132,4,3,247,21,1,1,148,132,164,1,193,21,133,0,223,21,76,15,140,14,223,0,144,14,223,0,138,14,95,144,138,14,215,167,139,14,135,0,48,3,148,1,192,151,146,14,223,151,147,14,148,14,223,0,138,14,223,149,134,0,138,14,215,167,139,14,135,0,5,2,31,138,148,14,223,23,142,14,140,14,119,0,236,254,223,21,252,15,140,14,193,21,134,0,223,39,140,14,142,14,217,2,223,21,156,14,140,14,213,1,223,21,172,16,140,14,242,1,193,21,135,0,223,11,138,14,4,2,223,21,92,17,140,14,235,1,215,39,140,14,76,15,194,3,223,139,148,14,2,3,31,138,148,14,223,23,140,14,142,14,187,1,95,138,106,37,3,3,42,136,161,143,2,1,42,136,154,143,119,0,22,254,192,23,110,37,223,21,128,0,110,37,223,21,15,14,146,14,42,136,217,143,9,1,192,23,110,37,31,10,110,37,223,21,14,15,146,14,42,136,222,143,31,32,110,37,2,3,223,0,144,14,135,0,135,0,64,21,65,21,201,11,8,2,145,10,4,1,145,28,154,14,50,20,154,14,2,20,250,2,133,0,64,21,65,21,201,11,7,3,17,10,3,1,114,20,154,14,208,11,2,20,251,2,133,0,64,21,19,1,223,11,44,18,14,3,194,21,196,142,194,101,4,0,131,18,8,3,193,32,250,2,194,229,200,142,130,12,50,20,46,18,2,1,49,20,154,14,1,20,235,2,133,0,5,10,15,20,25,30,35,40,44,27,59,0,0,0,52,0,0,55,56,45,9,74,49,50,51,69,53,54,91,93,0,0,70,67,85,75,80,78,71,76,68,0,0,81,89,87,65,73,82,79,66,64,0,0,0,94,83,77,32,84,88,0,44,55,48,49,52,43,127,0,0,46,92,86,56,46,50,53,0,0,13,0,95,72,90,57,13,51,54,12,10,47,58,45,48,57,45,46,35,24,47,72,0,71,27,127,0,83,27,126,0,4,0,5,0,6,0,8,0,9,0,0,44,27,43,0,0,0,36,0,0,39,40,47,9,74,33,34,35,69,37,38,91,93,0,0,70,67,85,75,80,78,71,76,68,0,0,81,89,87,65,73,82,79,66,64,0,0,0,94,83,77,32,84,88,0,60,55,48,49,52,42,127,0,0,62,92,86,56,46,50,53,0,0,10,0,95,72,90,57,13,51,54,12,10,63,42,61,48,41,45,46,35,24,47,72,0,71,27,127,0,83,27,126,0,4,0,5,0,6,0,8,0,9,0,0,44,27,59,0,0,0,52,0,0,55,56,45,9,170,49,50,51,165,53,54,187,189,0,0,166,163,181,171,176,174,167,172,164,0,0,177,185,183,161,169,178,175,162,160,0,0,0,190,179,173,32,180,184,0,44,55,48,49,52,43,127,0,0,46,188,182,56,46,50,53,0,0,0,0,191,168,186,57,13,51,54,12,10,47,58,45,48,57,45,46,35,24,47,72,0,54,27,68,0,62,27,67,0,74,27,65,0,63,27,66,0,73,13,10,0,4,0,5,0,6,0,8,0,9,0,0,0,27,59,0,0,0,52,0,0,55,56,0,9,10,49,50,51,5,53,54,27,29,0,0,6,3,21,11,16,14,7,12,4,0,0,17,25,23,1,9,18,15,2,0,0,0,0,30,19,13,32,20,24,0,44,55,48,49,52,0,127,0,0,46,28,22,56,46,50,53,0,0,0,0,31,8,26,57,13,51,54,12,10,47,58,45,48,57,45,46,35,24,47,72,83,71,0,60,27,80,0,12,27,81,0,1,27,82,0,4,0,5,0,6,0,8,0,9,0,0,44,27,59,0,0,0,52,0,0,55,56,45,9,74,49,50,51,69,53,54,91,93,0,0,70,67,85,75,80,78,71,76,68,0,0,81,89,87,65,73,82,79,66,64,0,0,0,94,83,77,32,84,88,0,44,55,48,49,52,43,127,0,0,46,92,86,56,46,50,53,0,0,0,0,95,72,90,57,13,51,54,12,10,47,58,45,48,57,45,46,35,24,47,72,0,71,27,127,0,83,27,126,0,4,0,5,0,6,0,8,0,9,0,0,148,0,234,141,126,0,237,141,108,0,240,141,124,0,243,141,68,1,234,141,46,1,237,141,28,1,240,141,44,1,243,141,164,2,234,141,142,2,249,141,124,2,240,141,140,2,246,141,84,3,234,141,62,3,237,141,44,3,240,141,60,3,243,141,164,0,252,141,84,1,249,141,162,2,255,141,0,0,27,65,0,27,66,0,27,68,0,27,67,0,27,75,0,27,74,0,27,72,0,13,10,0,148,0,28,0,126,0,29,0,108,0,26,0,124,0,25,0,68,1,18,0,46,1,22,0,28,1,20,0,44,1,19,0,164,2,28,0,142,2,31,0,124,2,26,0,140,2,11,0,84,3,28,0,62,3,29,0,44,3,26,0,60,3,25,0,164,0,8,0,84,1,12,0,162,2,21,0,0,0,158,0,142,142,136,0,146,142,114,0,150,142,116,0,154,142,138,0,158,142,160,0,162,142,118,0,166,142,140,0,170,142,162,0,174,142,112,0,178,142,134,0,182,142,156,0,186,142,120,0,190,142,24,0,193,142,2,0,196,142,0,0,27,63,77,0,27,63,110,0,27,63,112,0,27,63,113,0,27,63,114,0,27,63,115,0,27,63,116,0,27,63,117,0,27,63,118,0,27,63,119,0,27,63,120,0,27,63,121,0,27,80,0,27,81,0,27,82,0,0,114,0,48,0,116,0,49,0,138,0,50,0,160,0,51,0,118,0,52,0,140,0,53,0,162,0,54,0,112,0,55,0,134,0,56,0,156,0,57,0,146,0,50,143,158,0,52,143,166,0,54,143,142,0,57,143,148,0,60,143,126,0,63,143,108,0,66,143,124,0,69,143,68,1,72,143,46,1,75,143,28,1,78,143,44,1,81,143,102,0,48,143,122,0,46,143,164,0,12,0,0,0,127,0,32,0,13,0,13,0,27,126,0,27,127,0,27,128,0,27,129,0,27,130,0,27,131,0,27,132,0,27,133,0,27,134,0,27,135,0,0,32,32,32,32,32,0,0,32,32,245,243,244,0,5,32,32,32,32,32,0,5,32,240,237,32,32,0,5,32,227,237,32,32,0,10,32,32,32,32,32,0,10,32,228,235,236,32,0,15,32,32,32,32,32,0,15,32,233,238,247,32,0,15,240,239,228,254,32,0,20,32,32,32,32,32,0,20,32,233,243,245,32,0,25,32,32,32,32,32,0,25,32,238,242,32,32,0,25,32,243,245,32,32,0,25,231,242,225,230,32,0,25,230,233,235,243,32,0,30,250,225,231,236,32,0,30,243,244,242,32,32,0,35,242,245,243,0,35,236,225,244,0,0,119,9,240,103,98,22,15,8,223,21,0,0,22,254,31,10,16,254,31,10,18,254,0,10,193,21,8,254,201,21,0,128,194,21,0,128,195,21,20,254,11,16,137,10,131,126,223,21,192,251,208,0,223,21,128,0,210,0,223,85,1,0,54,254,247,9,142,0,192,21,13,159,193,21,98,24,194,21,0,1,195,21,11,0,192,96,17,16,131,126,192,21,50,149,2,1,49,20,98,22,1,20,252,2,223,21,0,4,98,37,223,21,0,4,100,37,223,149,12,0,0,4,119,9,76,1,32,148,112,37,119,9,68,1,98,148,174,37,119,9,60,1,170,148,236,37,119,9,52,1,240,148,42,38,223,21,184,4,186,0,197,21,174,37,95,29,50,0,112,38,95,29,58,0,116,38,159,10,54,14,95,17,104,38,95,29,28,0,14,254,95,29,32,0,16,254,95,29,32,0,18,254,125,157,56,0,52,0,135,0,194,21,89,2,193,21,28,14,95,16,30,14,64,16,33,16,225,11,132,126,119,9,154,0,192,251,8,5,10,0,40,0,31,16,52,5,223,21,48,255,60,5,119,9,132,0,0,128,64,5,30,1,80,0,223,21,48,255,188,9,119,9,114,0,48,255,196,9,21,0,0,0,119,9,102,0,96,217,24,10,220,0,40,0,119,9,90,0,48,255,136,13,22,0,0,0,223,21,48,255,228,13,119,9,72,0,120,253,236,13,11,0,40,0,119,9,60,0,48,255,24,14,2,0,0,0,192,21,2,0,193,21,6,0,31,80,246,4,95,80,254,4,31,80,46,5,95,80,54,5,223,21,64,5,182,9,95,80,190,9,223,21,226,13,94,9,223,21,226,13,222,13,95,80,230,13,135,0,64,21,65,21,66,21,67,21,17,16,192,96,209,11,132,126,133,0,71,109,60,0,22,1,31,10,120,38,192,23,62,5,192,101,32,4,23,32,184,9,2,131,192,229,120,4,48,16,254,255,223,21,226,13,94,9,223,21,64,5,62,5,245,21,64,5,24,0,135,0,64,21,65,19,119,9,24,0,65,21,57,20,52,0,57,20,44,0,57,20,40,0,57,20,42,0,133,0,64,21,65,21,2,20,17,20,130,126,133,0,230,21,116,248,230,21,86,146,159,17,106,38,198,23,108,38,197,23,104,38,159,10,54,14,159,10,52,14,223,10,52,14,24,3,192,159,102,147,159,10,98,37,223,69,128,0,98,37,192,69,0,255,23,32,32,0,2,134,199,103,124,38,135,0,23,32,27,0,4,3,192,12,248,9,98,22,231,1,119,0,60,5,199,103,102,37,2,1,4,137,222,1,192,23,46,14,240,21,214,145,18,0,159,17,108,38,198,23,106,38,150,37,119,0,42,102,199,103,102,37,135,0,4,137,159,10,52,14,223,10,52,14,247,3,223,11,48,14,17,3,135,0,159,10,54,14,197,23,104,38,95,29,28,0,14,254,95,29,32,0,16,254,95,29,32,0,18,254,125,157,56,0,52,0,192,159,218,146,159,10,98,37,223,69,128,0,98,37,230,21,86,146,192,69,0,255,23,32,32,0,8,134,223,139,106,37,2,3,119,0,46,1,192,12,120,0,98,22,23,160,63,0,2,131,192,87,110,37,192,12,1,28,98,24,64,29,8,0,194,21,8,254,195,21,20,254,74,19,71,109,46,0,68,148,11,17,10,96,68,148,11,17,10,96,68,148,11,17,10,96,68,148,11,17,10,96,68,148,11,17,10,96,68,148,11,17,10,96,68,148,11,17,10,96,68,148,11,17,10,96,68,148,11,17,10,96,68,148,11,17,10,96,68,148,11,17,141,10,245,10,14,0,61,2,77,29,18,0,117,29,4,0,14,0,245,101,44,0,26,0,117,45,26,0,22,0,3,2,117,29,20,0,26,0,77,111,26,0,245,10,16,0,41,2,71,109,60,0,39,1,181,10,16,0,230,21,11,0,245,101,44,0,24,0,87,45,24,0,184,9,3,2,245,21,64,5,24,0,192,23,120,38,9,3,1,128,0,11,23,32,12,0,12,131,0,137,197,23,104,38,244,1,31,10,116,38,223,21,2,0,92,14,255,149,127,0,228,146,247,9,84,3,159,101,120,38,135,0,119,0,52,5,31,10,116,38,64,29,48,0,240,69,1,0,6,0,240,69,1,0,42,0,135,0,192,21,10,0,68,148,11,17,74,109,8,0,5,126,203,21,255,0,167,1,192,21,11,0,2,1,74,109,8,0,68,148,68,10,11,17,6,126,157,1,230,21,3,0,38,16,38,16,192,21,60,0,247,9,210,254,0,10,3,1,0,10,78,140,64,140,78,140,64,140,78,140,64,140,192,101,48,0,247,9,184,254,246,10,4,0,242,2,192,21,62,0,247,9,170,254,214,11,214,37,10,0,2,2,247,9,172,4,214,11,135,0,28,0,192,251,192,251,40,0,11,0,40,0,1,0,11,0,40,0,1,0,0,0,8,5,76,20,8,5,8,5,6,0,6,0,0,0,0,0,0,0,0,0,0,5,2,5,250,4,0,0,8,5,249,4,248,4,2,0,0,0,23,0,0,34,68,102,31,0,0,128,0,128,80,0,8,1,80,0,24,0,30,1,80,0,24,0,0,0,64,5,184,9,64,5,64,5,7,0,7,0,17,17,17,17,17,17,17,17,56,5,58,5,50,5,0,0,64,5,49,5,48,5,1,0,7,0,2,0,2,0,7,0,7,0,152,186,220,254,30,0,96,217,96,217,40,0,220,0,40,0,20,0,220,0,40,0,20,0,0,0,24,10,136,13,24,10,24,10,7,0,7,0,17,17,17,17,17,17,17,17,192,9,194,9,186,9,0,0,24,10,185,9,184,9,2,0,7,0,2,0,7,0,23,0,152,186,220,254,28,0,120,253,120,253,40,0,11,0,40,0,1,0,11,0,40,0,1,0,0,0,236,13,24,14,236,13,236,13,6,0,6,0,0,0,0,0,0,0,0,0,232,13,234,13,226,13,0,0,236,13,225,13,224,13,2,0,0,0,23,0,0,34,68,102,14,0,144,150,16,0,150,152,20,0,142,152,22,0,250,153,24,0,158,150,26,0,222,152,28,0,176,138,30,0,198,138,36,0,158,153,38,0,76,153,40,0,8,153,42,0,200,152,44,0,144,153,46,0,184,151,50,0,172,152,52,0,150,152,54,0,90,151,56,0,70,152,58,0,142,152,62,0,250,153,74,0,130,151,122,0,232,151,124,0,246,151,126,0,4,152,130,0,70,152,132,0,142,152,134,0,172,152,136,0,150,152,138,0,202,151,144,0,176,153,146,0,70,152,148,0,204,153,150,0,250,153,160,0,8,154,178,0,150,155,180,0,254,155,182,0,6,152,0,1,70,152,2,1,142,152,4,1,150,152,6,1,172,152,8,1,206,152,10,1,212,152,12,1,222,152,14,1,238,152,16,1,4,153,18,1,6,153,20,1,8,153,22,1,76,153,24,1,144,153,26,1,158,153,28,1,172,153,30,1,174,153,32,1,176,152,34,1,182,152,36,1,188,152,38,1,194,152,40,1,176,153,42,1,158,150,44,1,204,153,46,1,250,153,48,1,200,152,50,1,150,155,52,1,12,156,54,1,14,156,56,1,16,156,58,1,0,0,60,1,0,0,62,1,0,0,64,1,18,156,66,1,54,156,68,1,100,156,70,1,156,156,72,1,188,156,74,1,252,156,76,1,50,157,78,1,138,156,80,1,98,157,82,1,100,157,84,1,102,157,86,1,104,157,110,1,106,157,112,1,128,157,120,1,148,157,122,1,154,157,124,1,226,157,126,1,232,157,0,0,223,85,128,1,206,255,223,21,16,0,38,14,135,0,102,31,40,0,102,31,42,0,125,29,36,0,40,0,125,29,36,0,42,0,247,9,60,0,247,9,192,250,68,29,24,0,53,17,26,0,13,19,77,109,18,0,117,29,4,0,14,0,117,29,10,0,16,0,189,21,42,0,189,21,40,0,95,29,58,0,116,38,135,0,65,31,26,0,65,109,18,0,195,21,11,0,4,1,65,29,2,0,67,29,12,0,66,29,4,0,95,29,36,0,16,254,95,29,36,0,18,254,196,21,8,254,76,16,193,21,20,254,0,10,181,32,8,0,18,3,166,16,4,1,130,19,140,224,76,109,8,0,9,16,140,10,131,126,200,126,214,11,95,29,32,0,16,254,95,29,32,0,18,254,135,0,194,112,9,16,140,10,195,126,244,1,0,0,17,17,34,34,51,51,68,68,85,85,102,102,119,119,159,17,106,38,223,21,2,0,124,38,198,21,0,2,247,9,134,250,192,12,248,9,98,22,31,10,124,38,198,23,106,38,135,0,128,29,2,0,7,1,247,9,108,250,23,160,33,0,7,2,247,9,98,250,192,69,252,255,192,12,248,9,156,151,135,0,164,151,184,151,184,151,184,151,247,9,242,251,31,10,124,38,223,9,30,187,95,29,58,0,116,38,135,0,119,9,92,243,156,141,223,21,150,152,114,22,31,10,108,14,135,0,119,9,74,243,2,142,223,21,176,153,114,22,223,21,1,0,108,14,135,0,102,17,247,9,160,248,133,21,135,0,119,9,250,242,80,142,12,18,42,136,126,143,135,0,119,9,6,243,80,142,12,18,42,136,119,143,135,0,135,0,247,9,232,249,23,32,50,0,12,3,23,32,63,0,8,3,2,1,247,9,214,249,23,160,114,0,251,2,247,9,120,254,135,0,247,9,198,249,23,32,104,0,4,2,223,21,2,0,154,14,5,1,23,32,108,0,2,2,31,10,154,14,135,0,77,239,26,0,245,229,44,0,26,0,117,45,26,0,20,0,6,134,117,29,22,0,26,0,245,229,44,0,26,0,77,111,26,0,117,45,16,0,10,0,10,2,71,109,60,0,10,1,117,29,26,0,24,0,230,21,245,255,119,0,224,250,181,10,16,0,135,0,119,0,70,0,77,239,26,0,119,0,142,250,117,45,14,0,4,0,4,3,205,10,181,10,14,0,135,0,247,9,68,0,205,1,119,0,98,250,247,9,248,255,200,1,247,9,220,255,233,1,247,9,134,255,234,1,247,9,200,255,242,1,247,9,18,0,224,1,0,10,119,0,252,2,64,29,10,0,192,10,119,0,242,2,77,29,18,0,77,111,26,0,117,29,4,0,14,0,135,0,77,29,4,0,77,109,18,0,205,10,77,111,26,0,245,21,1,0,14,0,135,0,135,0,135,0,64,29,14,0,192,10,22,3,65,19,129,10,230,21,11,0,195,21,8,254,196,21,20,254,2,16,75,16,2,1,203,101,2,0,204,11,203,10,12,10,134,126,65,109,8,0,206,10,243,2,214,11,65,19,1,96,194,21,1,0,195,21,11,0,119,0,178,253,64,29,14,0,192,10,23,3,65,19,1,96,193,10,230,21,11,0,195,21,8,254,196,21,20,254,2,16,75,16,2,1,203,229,2,0,204,11,139,10,12,10,134,126,65,109,8,0,206,10,243,2,214,11,65,19,194,21,1,0,195,21,11,0,119,0,110,253,245,10,16,0,223,229,11,0,120,38,119,0,168,254,181,10,16,0,223,101,11,0,120,38,119,0,226,254,135,0,135,0,117,29,24,0,26,0,77,29,18,0,77,111,26,0,117,29,4,0,14,0,117,29,10,0,16,0,135,0,247,9,42,0,102,29,16,0,65,29,26,0,12,1,193,101,44,0,117,32,22,0,2,2,65,29,20,0,102,16,65,18,247,9,252,252,129,21,206,10,242,2,214,11,135,0,65,19,66,29,14,0,195,21,11,0,119,0,246,252,38,10,247,9,228,247,38,16,23,160,59,0,250,2,247,9,216,247,38,16,23,160,59,0,121,3,23,160,124,0,247,2,214,11,254,2,182,12,252,255,12,135,193,21,226,154,194,21,25,0,64,20,240,21,96,18,154,14,133,126,223,21,98,18,96,22,38,10,247,9,162,247,23,160,27,0,54,3,23,160,47,0,8,3,129,19,87,112,10,0,192,69,240,255,1,96,78,16,240,1,128,21,23,32,25,0,235,130,192,10,192,12,0,28,226,154,240,23,96,22,154,14,247,9,108,247,23,160,27,0,28,3,23,160,59,0,19,3,247,9,60,0,23,116,4,0,38,16,247,9,82,247,247,9,46,0,128,85,63,144,182,123,215,39,96,22,88,22,232,130,159,10,96,22,229,1,63,138,164,123,159,10,96,22,196,1,214,11,63,138,152,123,159,10,96,22,247,9,34,247,135,0,23,32,65,0,2,135,192,101,9,0,192,69,240,255,135,0,8,0,10,0,12,0,16,0,18,0,184,0,186,0,188,0,192,0,194,0,104,1,106,1,108,1,112,1,114,1,24,2,26,2,28,2,32,2,34,2,200,2,202,2,204,2,208,2,210,2,128,29,2,0,214,11,254,2,1,16,192,12,192,101,98,24,38,16,87,112,9,0,193,101,98,26,102,16,247,9,190,246,23,32,27,0,23,3,23,32,64,0,248,2,190,19,2,0,246,101,2,0,2,0,119,9,30,0,5,0,247,9,158,246,119,9,20,0,6,0,247,9,148,246,23,32,27,0,238,2,247,9,138,246,150,37,135,0,230,21,8,0,102,17,247,9,124,246,133,21,23,32,27,0,8,3,131,29,4,0,68,19,128,12,19,140,3,127,206,10,241,2,118,101,4,0,214,11,133,0,247,9,88,246,192,229,32,0,5,129,53,32,10,0,2,134,247,9,38,0,247,9,68,246,192,229,32,0,13,129,53,32,4,0,10,134,117,29,4,0,14,0,53,224,14,0,64,111,26,0,64,109,18,0,13,16,135,0,77,239,26,0,117,29,10,0,16,0,53,224,16,0,23,112,44,0,65,109,24,0,71,109,60,0,5,1,87,32,184,9,2,135,193,229,120,4,117,16,26,0,77,98,135,0,192,21,8,156,247,9,106,236,135,0,27,47,90,0,135,0,135,0,135,0,199,103,126,38,3,1,64,29,30,0,4,1,247,9,208,245,192,69,248,255,31,16,14,254,117,29,28,0,30,0,53,16,28,0,135,0,199,103,126,38,3,1,64,29,34,0,7,1,247,9,172,245,192,69,248,255,192,12,0,28,74,151,31,16,16,254,31,16,18,254,117,29,32,0,34,0,53,16,32,0,135,0,199,103,126,38,3,1,64,29,38,0,219,1,247,9,126,245,192,69,248,255,192,12,0,28,74,151,117,29,36,0,38,0,53,16,36,0,135,0,247,9,100,245,192,69,248,255,61,144,52,0,53,16,56,0,135,0,199,103,126,38,5,1,31,10,108,37,42,136,133,143,24,1,245,21,242,0,46,0,159,138,108,37,42,136,140,143,135,0,199,103,126,38,5,1,31,10,108,37,42,136,133,143,8,1,245,21,222,0,46,0,159,138,109,37,42,136,147,143,135,0,53,10,46,0,223,139,108,37,4,3,245,21,244,0,46,0,6,1,223,139,109,37,3,3,245,21,224,0,46,0,135,0,247,9,242,244,192,229,49,0,6,129,23,32,3,0,3,130,192,12,248,9,20,157,135,0,28,157,40,157,48,157,48,157,245,21,80,0,4,0,53,10,18,0,135,0,245,21,40,0,4,0,249,1,135,0,247,9,188,244,192,229,49,0,12,129,23,32,4,0,9,134,63,156,86,157,146,136,55,156,90,157,150,136,55,156,94,157,94,136,135,0,0,16,32,48,1,2,4,8,80,40,20,10,135,0,135,0,135,0,135,0,199,103,126,38,4,1,223,85,0,2,44,254,135,0,223,69,0,2,44,254,135,0,23,141,128,0,255,149,127,0,230,136,247,9,136,234,23,141,0,0,135,0,159,10,58,14,135,0,199,103,126,38,19,1,119,9,92,237,200,142,44,18,31,10,102,14,199,103,104,37,1,1,135,0,223,69,16,0,206,255,223,21,38,112,8,254,31,10,12,254,135,0,119,9,28,237,200,142,44,18,159,10,102,14,199,103,104,37,1,1,135,0,223,85,16,0,206,255,135,0,159,10,64,14,135,0,223,21,2,0,126,38,247,9,0,244,23,32,27,0,251,3,192,12,248,9,98,22,31,10,126,38,135,0,128,29,2,0,192,69,240,255,31,16,118,14,63,144,206,135,135,0,102,17,197,23,104,38,128,29,4,0,4,129,53,16,28,0,31,16,112,14,128,29,6,0,6,129,31,16,114,14,192,12,53,28,74,151,32,0,128,29,8,0,6,129,31,16,116,14,192,12,53,28,74,151,36,0,247,9,70,242,133,21,135,0,247,9,4,0,0,137,135,0,63,144,2,135,159,10,100,37,223,69,128,0,100,37,159,10,52,14,135,0,129,31,14,0,246,101,2,0,14,0,119,9,6,0,0,137,135,0,65,21,192,23,100,37,4,1,192,69,128,0,159,10,52,14,80,148,250,2,192,10,31,16,100,37,133,0,197,21,42,38,5,1,43,1,199,103,104,14,197,21,112,37,95,29,28,0,14,254,95,29,32,0,16,254,95,29,32,0,18,254,77,31,26,0,117,29,4,0,14,0,129,31,14,0,64,148,13,96,53,224,14,0,4,1,102,16,247,9,218,243,129,21,0,10,64,212,249,2,197,23,104,38,95,29,28,0,14,254,95,29,32,0,16,254,95,29,32,0,18,254,246,101,2,0,14,0,135,0,135,0,135,0,135,0,135,0,135,0,135,0,135,0,135,0,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,0,16,0,0,0,36,36,18,0,0,0,0,0,0,0,0,0,36,36,126,36,126,36,36,0,0,0,0,66,60,66,66,66,60,66,0,0,0,0,134,70,32,16,8,196,194,0,0,0,24,36,36,24,20,162,66,188,0,0,0,48,16,8,0,0,0,0,0,0,0,0,32,16,8,8,8,8,16,32,0,0,0,8,16,32,32,32,32,16,8,0,0,0,0,0,16,84,56,84,16,0,0,0,0,0,16,16,16,254,16,16,16,0,0,0,0,0,0,0,0,0,24,24,16,8,0,0,0,0,0,126,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,128,64,32,16,8,4,2,0,0,0,60,66,98,82,74,70,66,60,0,0,0,16,24,20,16,16,16,16,124,0,0,0,60,66,66,32,16,8,68,126,0,0,0,126,32,16,56,64,64,66,60,0,0,0,32,48,40,36,34,126,32,32,0,0,0,126,2,2,62,64,64,66,60,0,0,0,60,66,2,62,66,66,66,60,0,0,0,126,66,32,16,8,4,2,2,0,0,0,60,66,66,60,66,66,66,60,0,0,0,60,66,66,66,124,64,66,60,0,0,0,0,0,24,24,0,0,24,24,0,0,0,0,0,24,24,0,0,24,24,16,8,0,0,32,16,8,4,8,16,32,0,0,0,0,0,0,126,0,126,0,0,0,0,0,0,4,8,16,32,16,8,4,0,0,0,56,68,64,32,16,16,0,16,0,0,0,0,60,66,128,156,146,146,108,0,0,0,24,36,66,66,126,66,66,66,0,0,0,62,66,66,62,66,66,66,62,0,0,0,60,66,2,2,2,2,66,60,0,0,0,62,68,132,132,132,132,68,62,0,0,0,126,2,2,62,2,2,2,126,0,0,0,126,2,2,62,2,2,2,2,0,0,0,60,66,2,2,114,66,66,60,0,0,0,66,66,66,66,126,66,66,66,0,0,0,56,16,16,16,16,16,16,56,0,0,0,56,16,16,16,16,16,18,12,0,0,0,66,34,18,14,10,18,34,66,0,0,0,2,2,2,2,2,2,2,126,0,0,0,130,198,170,146,130,130,130,130,0,0,0,66,66,70,74,82,98,66,66,0,0,0,60,66,66,66,66,66,66,60,0,0,0,62,66,66,66,62,2,2,2,0,0,0,60,66,66,66,66,66,82,60,64,0,0,62,66,66,66,62,18,34,66,0,0,0,60,66,2,60,64,64,66,60,0,0,0,254,16,16,16,16,16,16,16,0,0,0,66,66,66,66,66,66,66,60,0,0,0,130,130,130,130,130,68,40,16,0,0,0,130,130,130,130,146,170,198,130,0,0,0,66,66,36,24,24,36,66,66,0,0,0,130,130,68,40,16,16,16,16,0,0,0,126,64,32,16,8,4,2,126,0,0,0,56,8,8,8,8,8,8,56,0,0,0,0,2,4,8,16,32,64,128,0,0,0,56,32,32,32,32,32,32,56,0,0,0,0,0,0,126,64,64,0,0,0,0,0,0,0,0,0,0,0,0,126,0,0,0,24,16,32,0,0,0,0,0,0,0,0,0,0,60,64,124,66,66,188,0,0,0,2,2,58,70,66,66,70,58,0,0,0,0,0,60,66,2,2,66,60,0,0,0,64,64,92,98,66,66,98,92,0,0,0,0,0,60,66,66,126,2,124,0,0,0,48,72,8,28,8,8,8,8,0,0,0,0,0,92,98,66,66,98,92,64,60,0,2,2,58,70,66,66,66,66,0,0,0,16,0,24,16,16,16,16,56,0,0,0,16,0,16,16,16,16,16,16,18,12,0,2,2,34,18,14,18,34,66,0,0,0,24,16,16,16,16,16,16,56,0,0,0,0,0,110,146,146,146,146,146,0,0,0,0,0,58,70,66,66,66,66,0,0,0,0,0,60,66,66,66,66,60,0,0,0,0,0,58,70,66,66,70,58,2,2,0,0,0,92,98,66,66,98,92,64,64,0,0,0,58,70,2,2,2,2,0,0,0,0,0,60,2,60,64,66,60,0,0,0,8,8,28,8,8,8,72,48,0,0,0,0,0,66,66,66,66,98,92,0,0,0,0,0,130,130,130,68,40,16,0,0,0,0,0,130,130,130,146,146,108,0,0,0,0,0,66,36,24,24,36,66,0,0,0,0,0,66,66,66,36,24,8,4,2,0,0,0,126,32,16,8,4,126,0,0,0,0,96,16,16,12,16,16,96,0,0,0,0,16,16,16,16,16,16,16,0,0,0,0,12,16,16,96,16,16,12,0,0,0,126,0,0,0,0,0,0,0,0,0,0,126,126,126,126,126,126,126,126,0,0,0,8,28,42,8,8,8,8,8,0,0,0,8,8,8,8,8,42,28,8,0,0,0,0,0,4,2,255,2,4,0,0,0,0,0,0,32,64,255,64,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,40,16,40,68,0,0,0,0,0,0,16,0,124,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,64,64,72,68,126,4,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,23,20,20,20,20,20,8,8,8,8,8,255,0,0,0,0,0,20,20,20,20,20,244,20,20,20,20,20,0,0,0,0,0,15,8,8,8,8,8,20,20,20,20,20,20,20,20,20,20,20,8,8,8,8,8,248,8,8,8,8,8,8,8,8,8,8,248,0,0,0,0,0,20,20,20,20,244,4,244,20,20,20,20,0,0,0,0,252,4,244,20,20,20,20,8,8,8,8,255,0,255,8,8,8,8,0,0,0,0,0,248,8,8,8,8,8,0,0,0,0,0,255,8,8,8,8,8,20,20,20,20,247,0,255,0,0,0,0,20,20,20,20,20,255,0,0,0,0,0,8,8,8,8,8,15,8,8,8,8,8,20,20,20,20,247,0,247,20,20,20,20,8,8,8,8,8,255,8,8,8,8,8,8,8,8,8,248,8,248,8,8,8,8,20,20,20,20,20,247,20,20,20,20,20,0,0,0,0,0,255,20,20,20,20,20,8,8,8,8,255,0,255,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,20,20,20,20,244,4,252,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,255,0,255,8,8,8,8,8,8,8,8,8,15,0,0,0,0,0,0,0,0,0,255,0,255,0,0,0,0,20,20,20,20,23,16,23,20,20,20,20,20,20,20,20,23,16,31,0,0,0,0,0,0,0,0,255,0,247,20,20,20,20,8,8,8,8,15,8,15,8,8,8,8,0,0,0,0,31,16,23,20,20,20,20,0,0,0,98,146,146,158,146,98,0,0,0,0,0,60,64,124,66,66,188,0,0,0,64,60,2,62,66,66,66,60,0,0,0,0,0,34,34,34,34,34,126,64,0,0,0,0,112,72,68,68,68,254,130,0,0,0,0,60,66,66,126,2,124,0,0,0,0,0,16,124,146,146,146,124,16,16,0,0,0,126,66,2,2,2,2,0,0,0,0,0,66,36,24,24,36,66,0,0,0,0,0,66,98,82,74,70,66,0,0,0,24,0,66,98,82,74,70,66,0,0,0,0,0,66,34,18,30,34,66,0,0,0,0,0,112,72,68,68,68,66,0,0,0,0,0,130,198,170,146,130,130,0,0,0,0,0,66,66,66,126,66,66,0,0,0,0,0]);fileData0.push.apply(fileData0,[60,66,66,66,66,60,0,0,0,0,0,126,66,66,66,66,66,0,0,0,0,0,124,66,66,124,68,66,0,0,0,0,0,58,70,66,66,70,58,2,2,0,0,0,60,66,2,2,66,60,0,0,0,0,0,254,16,16,16,16,16,0,0,0,0,0,66,66,66,36,24,8,4,2,0,0,0,146,84,56,56,84,146,0,0,0,0,0,62,66,62,66,66,62,0,0,0,0,0,2,2,62,66,66,62,0,0,0,0,0,130,130,158,162,162,158,0,0,0,0,0,60,64,56,64,64,60,0,0,0,0,0,146,146,146,146,146,254,0,0,0,0,0,62,64,64,124,64,62,0,0,0,0,0,146,146,146,146,146,254,128,128,0,0,0,66,66,66,124,64,64,0,0,0,0,0,7,5,124,132,132,124,0,0,0,98,146,146,146,158,146,146,98,0,0,0,24,36,66,66,126,66,66,66,0,0,0,126,2,2,62,66,66,66,62,0,0,0,66,66,66,66,66,66,66,254,128,0,0,112,72,68,68,68,68,68,254,130,0,0,126,2,2,62,2,2,2,126,0,0,0,16,124,146,146,146,146,124,16,16,0,0,126,66,2,2,2,2,2,2,0,0,0,66,66,36,24,24,36,66,66,0,0,0,66,66,98,82,74,70,66,66,0,0,24,66,66,98,82,74,70,66,66,0,0,0,66,34,18,14,18,34,66,130,0,0,0,112,72,68,68,68,68,68,66,0,0,0,130,198,170,146,130,130,130,130,0,0,0,66,66,66,126,66,66,66,66,0,0,0,60,66,66,66,66,66,66,60,0,0,0,126,66,66,66,66,66,66,66,0,0,0,124,66,66,66,124,72,68,66,0,0,0,62,66,66,66,62,2,2,2,0,0,0,60,66,2,2,2,2,66,60,0,0,0,254,146,16,16,16,16,16,16,0,0,0,66,66,66,66,124,64,66,60,0,0,0,146,146,84,56,84,146,146,146,0,0,0,62,66,66,62,66,66,66,62,0,0,0,2,2,2,62,66,66,66,62,0,0,0,130,130,130,158,162,162,162,158,0,0,0,60,66,64,56,64,64,66,60,0,0,0,146,146,146,146,146,146,146,254,0,0,0,60,66,128,128,248,128,66,60,0,0,0,146,146,146,146,146,146,146,254,128,128,0,66,66,66,66,124,64,64,64,0,0,0,7,5,4,124,132,132,132,124,0,0,192,23,128,38,161,0,0,12,31,16,128,38,128,10,31,16,8,254,192,151,12,254,5,16,23,116,253,255,23,32,3,0,10,130,192,12,3,2,223,11,36,14,5,129,248,9,84,170,223,10,50,14,135,0,247,9,32,0,250,1,126,178,158,172,114,170,164,171,31,138,220,38,223,23,128,38,8,254,223,23,220,38,12,254,223,11,52,254,135,0,119,9,250,0,5,0,247,165,8,0,95,124,4,3,247,149,2,0,86,124,100,1,193,29,84,124,193,37,0,96,247,131,193,69,1,0,194,29,72,124,194,37,0,224,240,131,130,12,194,69,0,128,195,29,58,124,80,3,192,157,47,124,23,141,128,0,197,23,4,0,223,21,100,171,4,0,223,69,1,0,44,254,128,12,4,135,223,69,8,0,44,254,3,1,223,85,8,0,44,254,223,69,6,0,44,254,87,32,254,31,5,130,196,21,2,0,31,81,44,254,13,1,87,32,254,63,6,130,223,85,4,0,44,254,196,21,1,0,4,1,223,85,6,0,44,254,4,10,193,69,0,96,193,85,0,128,192,21,0,160,64,224,128,12,192,32,3,130,192,16,3,10,1,1,3,224,159,16,8,254,95,20,12,254,130,10,194,37,0,112,167,131,9,126,195,11,10,3,196,10,162,129,223,101,2,0,44,254,193,21,0,128,192,21,0,16,229,1,55,138,140,123,223,85,1,0,44,254,95,17,4,0,23,141,0,0,247,9,254,254,135,0,247,149,1,0,114,123,214,11,214,11,240,1,64,21,193,21,220,38,223,23,128,38,8,254,2,1,159,10,8,254,209,23,12,254,5,126,133,0,64,21,193,21,220,38,223,23,128,38,8,254,2,1,159,10,8,254,95,20,12,254,5,126,133,0,119,9,200,255,5,0,31,138,220,38,87,33,26,0,14,2,192,151,221,38,5,16,23,116,253,255,23,32,3,0,6,130,192,12,7,96,7,1,36,1,45,1,54,1,119,0,158,254,119,0,148,254,193,23,224,38,192,23,226,38,192,12,133,12,18,134,247,9,112,80,128,12,31,32,226,38,3,134,223,149,255,0,220,38,31,16,226,38,95,16,224,38,119,9,134,255,4,0,119,0,98,254,247,9,178,80,224,129,119,0,76,254,247,9,48,0,219,3,2,1,159,10,8,254,95,20,12,254,5,126,214,1,247,9,28,0,209,3,2,1,159,10,8,254,209,23,12,254,5,126,204,1,223,23,224,38,96,14,159,10,62,14,198,1,193,23,224,38,192,23,226,38,161,0,0,12,31,16,8,254,192,23,228,38,135,0,0,10,193,21,196,38,194,21,12,0,17,16,130,126,247,21,208,0,82,122,247,21,104,0,78,122,247,21,64,31,74,122,247,21,208,7,70,122,247,21,96,31,66,122,247,21,232,3,62,122,247,21,232,3,58,122,247,21,52,0,54,122,135,0,119,9,206,254,23,0,5,10,65,127,23,141,128,0,247,9,78,80,247,9,6,5,223,21,220,175,196,0,223,21,128,0,198,0,223,21,120,177,200,0,223,21,128,0,202,0,31,10,192,255,223,85,0,1,44,254,223,69,128,0,206,255,223,69,71,0,54,254,192,157,247,121,192,69,128,255,192,12,248,9,66,173,55,144,232,121,223,69,12,0,206,255,247,9,188,4,196,29,126,121,196,101,12,0,31,17,8,254,196,21,244,38,194,21,11,0,31,21,12,254,159,10,8,254,133,126,223,69,0,1,44,254,223,21,64,0,192,255,223,85,128,0,206,255,223,85,71,0,54,254,247,9,40,253,247,9,214,79,23,141,0,0,135,0,102,173,108,173,154,173,102,173,102,173,102,173,102,173,102,173,66,174,72,174,102,173,102,173,78,174,90,174,36,174,102,173,204,173,178,173,192,21,8,0,135,0,247,21,208,0,82,121,247,21,104,0,78,121,247,21,64,31,74,121,247,21,208,7,70,121,247,21,96,31,66,121,247,21,232,3,62,121,247,21,232,3,58,121,0,10,135,0,247,21,104,0,36,121,247,21,52,0,32,121,160,0,247,21,208,7,34,121,0,10,135,0,183,17,36,121,196,29,54,121,161,0,4,12,31,17,8,254,247,9,120,1,194,21,128,0,25,1,183,17,10,121,196,29,28,121,161,0,4,12,31,17,8,254,247,9,94,1,247,9,122,1,247,9,136,1,192,29,6,121,2,16,194,11,23,3,247,9,140,1,192,29,246,120,247,9,132,1,247,9,98,1,4,10,192,23,12,254,159,10,8,254,4,96,68,11,247,9,110,1,137,126,0,17,247,9,102,1,247,9,148,1,0,10,135,0,183,17,178,120,194,21,128,0,192,29,192,120,161,0,0,12,31,16,8,254,247,9,212,1,247,9,46,2,92,1,55,10,146,120,6,1,55,10,140,120,9,1,247,21,4,0,132,120,55,10,126,120,6,1,247,21,4,0,120,120,247,21,18,0,112,120,183,17,112,120,247,9,162,1,247,9,190,1,247,9,54,2,247,9,128,2,193,53,1,0,8,3,247,9,154,2,55,16,126,120,247,9,146,2,55,16,116,120,195,29,60,120,199,109,62,120,194,21,8,0,196,21,244,38,192,21,224,38,20,36,69,2,131,126,193,53,1,0,13,2,194,21,128,0,192,29,56,120,161,0,0,12,31,16,8,254,195,21,8,0,247,9,166,1,24,1,192,29,36,120,192,11,3,129,192,45,48,120,2,130,192,29,42,120,2,16,247,29,34,120,36,120,192,29,8,120,161,0,0,12,4,134,192,29,18,120,161,0,0,12,31,16,8,254,194,11,22,3,4,10,247,9,218,1,2,1,247,9,20,2,199,109,202,119,31,16,12,254,159,10,8,254,4,96,68,11,139,126,193,53,1,0,4,3,247,9,248,1,4,32,7,2,0,10,23,141,128,0,135,0,192,21,1,0,250,1,192,21,10,0,247,1,223,69,12,0,206,255,31,10,202,255,223,11,204,255,253,2,223,21,65,0,200,255,195,21,4,0,23,141,0,0,135,0,196,29,102,119,2,1,196,29,98,119,247,9,72,0,3,127,135,0,194,21,8,0,196,21,224,38,0,21,247,9,4,0,132,126,135,0,247,9,8,0,192,0,247,9,2,0,135,0,247,9,30,0,177,0,0,140,7,3,3,134,247,9,22,0,250,1,247,9,12,0,247,1,247,9,10,0,247,9,6,0,135,0,5,10,2,1,197,21,12,0,247,9,226,1,195,11,252,2,71,97,223,29,254,118,202,255,195,21,2,0,5,1,223,29,244,118,202,255,195,21,4,0,161,0,135,0,223,85,2,0,206,255,223,21,234,175,196,0,6,1,223,69,2,0,206,255,223,21,220,175,196,0,223,11,204,255,223,139,200,255,251,129,195,10,1,129,2,0,192,21,12,0,198,29,204,118,135,0,31,10,200,255,193,29,198,118,31,10,202,255,223,11,204,255,253,2,223,85,12,0,206,255,223,21,17,0,200,255,135,0,23,141,128,0,194,29,148,118,68,17,247,9,96,1,223,53,32,0,200,255,250,3,197,23,204,255,223,11,204,255,223,53,168,0,200,255,250,2,68,225,1,128,4,11,55,33,114,118,233,130,150,126,195,21,8,0,23,141,0,0,135,0,23,141,128,0,192,29,88,118,68,17,247,9,34,1,223,53,32,0,200,255,250,3,197,23,204,255,223,11,204,255,223,53,168,0,200,255,250,2,68,225,1,128,4,11,55,33,52,118,233,130,22,126,195,21,8,0,23,141,0,0,135,0,68,16,192,21,8,0,1,10,3,10,247,9,158,0,197,85,0,240,65,225,6,126,195,21,8,0,23,114,8,0,1,16,128,12,64,96,0,11,192,69,0,240,55,16,250,117,1,17,135,0,5,10,247,9,186,0,197,11,252,3,131,10,119,33,230,117,247,134,131,10,131,10,247,9,26,0,135,0,194,21,8,0,196,21,244,38,247,9,216,255,2,1,247,9,18,0,20,16,132,126,135,0,0,138,192,85,128,0,247,9,28,0,2,1,247,9,10,0,192,0,247,9,4,0,192,0,135,0,0,138,192,85,128,0,247,9,34,0,11,135,247,9,28,0,0,140,252,134,247,9,20,0,4,134,247,9,14,0,1,134,135,0,192,21,9,0,198,29,132,117,135,0,5,10,247,9,64,0,197,11,252,3,119,33,110,117,4,135,195,21,3,0,177,0,3,1,195,21,1,0,161,0,135,0,195,11,4,2,197,11,10,2,197,23,204,255,223,11,204,255,223,53,168,0,200,255,250,2,195,10,2,0,192,21,11,0,198,29,62,117,135,0,223,139,192,255,10,128,223,37,4,0,194,255,6,2,198,29,42,117,192,21,255,0,23,141,128,0,135,0,31,10,200,255,223,11,204,255,223,11,200,255,249,2,135,0,223,11,90,254,55,10,178,116,223,29,174,116,88,254,55,138,0,117,55,10,176,116,55,10,174,116,223,53,0,16,196,255,22,3,247,21,144,1,156,116,193,21,176,38,192,21,3,0,247,9,118,0,193,21,180,38,192,21,36,0,247,9,106,0,247,149,40,0,134,116,247,149,80,0,129,116,21,1,247,21,232,3,112,116,193,21,176,38,192,21,20,0,247,9,74,0,193,21,180,38,192,21,40,0,247,9,62,0,247,149,8,0,90,116,247,149,30,0,85,116,193,21,184,38,192,21,10,0,247,9,38,0,193,21,188,38,192,21,1,0,247,9,26,0,247,21,2,0,72,116,247,21,255,255,121,116,247,21,255,255,64,116,247,21,255,255,60,116,135,0,194,21,4,0,17,144,130,126,135,0,119,9,238,248,5,0,247,9,118,74,119,9,252,5,8,0,148,178,71,0,135,0,247,9,10,6,31,138,200,255,247,9,46,6,247,69,236,251,222,115,247,197,192,0,49,116,80,3,247,165,8,0,41,116,2,131,119,0,210,7,247,139,33,116,7,128,247,85,32,0,190,115,247,149,1,0,190,115,5,1,247,69,32,0,176,115,55,138,178,115,247,197,252,0,1,116,247,157,254,115,167,115,1,10,193,157,245,115,119,156,176,38,160,115,119,156,180,38,156,115,119,156,188,38,196,115,119,156,184,38,191,115,247,139,219,115,35,129,247,173,213,115,179,115,31,130,247,165,5,0,171,115,4,3,247,21,2,0,138,115,3,1,247,21,3,0,130,115,192,29,126,115,55,156,22,187,146,115,192,12,55,28,10,187,114,115,247,165,24,0,159,115,1,130,16,1,161,0,55,12,154,115,192,29,152,115,5,128,247,149,9,0,136,115,119,0,186,5,192,109,134,115,192,37,0,112,246,135,193,157,121,115,119,16,28,115,247,101,172,38,22,115,119,9,20,5,65,0,200,179,71,0,247,53,0,4,4,115,7,2,247,85,16,0,252,114,247,29,2,115,6,115,13,1,192,157,240,114,192,197,252,0,64,172,6,187,3,2,247,9,76,5,25,1,247,29,234,114,234,114,247,69,3,0,212,114,119,220,6,187,206,114,247,85,0,4,200,114,223,29,196,114,88,254,247,9,40,5,2,0,247,9,214,4,247,10,196,114,1,2,1,1,2,0,119,9,174,4,65,0,60,180,71,0,255,139,162,114,50,128,255,149,128,0,154,114,247,69,64,0,146,114,223,29,142,114,88,254,247,85,128,0,134,114,223,53,1,0,88,254,6,3,247,69,128,0,120,114,63,138,118,114,28,1,255,138,112,114,11,2,247,69,128,0,102,114,255,149,255,0,98,114,247,149,7,0,178,114,119,0,228,4,223,29,82,114,88,254,247,29,88,114,90,114,2,0,247,9,98,4,247,10,80,114,1,2,219,1,2,0,247,175,56,114,144,114,74,3,16,130,191,138,46,114,8,129,247,53,64,0,36,114,34,2,247,85,64,0,28,114,21,1,247,149,8,0,108,114,119,0,158,4,255,138,14,114,223,53,1,0,88,254,3,3,63,138,2,114,226,1,247,53,64,0,248,113,12,3,247,69,64,0,240,113,223,29,236,113,88,254,223,21,162,180,196,0,2,0,247,9,252,3,247,157,22,114,250,113,247,29,224,113,226,113,223,21,210,180,196,0,247,9,2,0,2,0,247,85,128,0,192,113,223,29,188,113,88,254,247,69,128,0,180,113,135,0,247,9,204,3,247,10,186,113,4,2,247,138,198,113,229,2,179,1,2,0,247,69,12,0,152,113,247,29,166,113,180,113,247,165,1,0,200,113,4,3,183,140,168,113,183,140,165,113,255,173,160,113,126,113,11,130,255,173,153,113,118,113,4,130,247,85,4,0,108,113,3,1,247,85,8,0,100,113,223,29,96,113,88,254,223,21,46,181,196,0,2,0,247,9,112,3,31,138,200,255,247,9,148,3,196,21,88,254,5,17,213,11,247,165,8,0,149,113,23,3,204,53,4,0,5,3,247,149,6,0,134,113,119,0,184,3,247,165,16,0,125,113,11,3,247,165,24,0,117,113,2,2,119,0,206,3,247,149,9,0,104,113,119,0,154,3,247,21,30,0,22,113,194,29,18,113,195,29,254,112,196,21,88,254,5,17,213,11,119,9,246,2,53,5,152,181,7,0,64,19,2,3,128,10,7,2,223,139,200,255,249,128,247,9,248,2,138,126,38,1,193,21,4,0,247,165,5,0,9,113,4,2,204,11,2,128,193,21,30,0,64,19,9,3,128,10,7,3,223,139,200,255,239,128,247,9,206,2,148,126,21,1,64,19,2,3,128,10,224,2,69,126,195,85,0,1,204,16,195,69,0,1,192,21,150,0,204,16,204,139,19,129,3,126,207,1,247,149,64,0,220,112,11,1,247,149,65,0,212,112,7,1,247,149,66,0,204,112,3,1,247,149,3,0,196,112,119,0,246,2,205,11,204,139,254,128,205,37,254,161,49,3,192,21,12,0,192,109,122,112,192,12,192,12,31,138,200,255,31,16,202,255,31,32,204,255,249,2,223,21,92,182,196,0,223,149,71,0,200,255,247,16,50,112,183,16,62,112,247,9,148,2,2,0,247,9,66,2,247,9,106,2,247,10,44,112,208,7,223,21,53,5,202,255,223,21,7,0,200,255,194,29,26,112,195,29,6,112,196,21,88,254,5,17,213,11,119,0,182,1,204,139,254,128,119,19,20,112,247,45,244,111,14,112,18,3,204,139,254,128,205,11,247,9,28,2,9,3,247,16,218,111,247,9,64,2,255,149,255,0,210,111,119,0,30,253,192,21,32,0,183,1,204,139,254,128,64,19,192,0,192,173,23,112,246,2,194,29,20,112,223,29,14,112,8,254,247,9,230,1,4,2,247,149,2,0,250,111,154,1,247,165,8,0,243,111,45,2,205,11,193,21,17,0,247,9,100,1,35,3,204,139,254,128,205,37,251,161,30,2,193,29,164,111,194,11,12,3,204,139,254,128,64,19,192,0,31,16,12,254,159,10,8,254,194,10,5,3,75,126,4,1,204,139,254,128,205,11,68,126,183,16,182,111,247,9,142,1,73,2,247,149,1,0,162,111,119,0,218,254,247,149,4,0,152,111,250,1,194,11,2,2,119,0,192,1,205,21,78,78,192,21,11,0,204,139,254,128,205,21,78,78,5,126,192,21,6,0,204,139,254,128,205,21,0,0,5,126,195,85,0,2,204,139,254,128,205,21,161,161,204,16,195,69,0,2,204,139,254,128,205,21,161,251,193,29,30,111,193,10,204,139,254,128,205,23,12,254,204,16,159,10,8,254,194,10,10,3,204,139,254,128,205,23,12,254,159,10,8,254,194,10,6,3,73,126,5,1,204,139,254,128,205,21,0,0,69,126,183,16,34,111,247,9,232,0,247,11,26,111,2,2,119,0,62,1,247,23,8,254,12,111,183,138,7,111,247,173,3,111,225,110,41,131,247,165,1,0,246,110,6,3,195,53,32,0,3,2,183,10,150,110,9,1,183,138,230,110,247,157,226,110,138,110,247,0,134,110,55,138,130,110,31,138,200,255,223,11,204,255,223,11,204,255,247,149,1,0,199,110,247,165,1,0,190,110,3,3,192,21,32,0,3,120,247,16,88,110,247,9,190,0,119,0,162,251,223,11,204,255,223,11,204,255,194,21,30,0,205,11,1,10,193,157,122,110,193,101,6,0,247,9,10,0,2,3,119,0,200,253,119,0,62,253,204,139,254,128,64,19,4,3,128,10,2,3,71,126,11,1,195,85,0,1,204,16,195,69,0,1,192,21,150,0,204,16,204,139,3,129,3,126,180,0,135,0,205,11,135,0,31,138,200,255,95,19,202,255,95,35,204,255,249,2,213,11,95,21,196,0,95,21,200,255,133,0,223,11,204,255,223,139,200,255,251,129,135,0,204,53,0,64,253,3,205,21,78,78,204,139,254,128,205,11,135,0,192,21,30,0,204,53,0,64,1,2,4,126,135,0,55,16,200,109,119,16,198,109,183,16,196,109,247,16,194,109,55,17,192,109,119,17,190,109,247,23,8,254,172,109,135,0,192,29,168,109,193,29,166,109,194,29,164,109,195,29,162,109,196,29,160,109,197,29,158,109,223,29,142,109,8,254,135,0,55,138,202,109,247,9,74,241,119,9,230,65,250,0,44,185,247,9,204,255,31,10,200,255,247,9,232,67,2,0,247,69,31,4,82,109,223,29,78,109,88,254,135,0,233,1,195,29,68,109,196,21,88,254,5,17,213,11,247,0,62,109,194,157,145,109,194,69,252,255,5,2,247,21,11,0,128,109,119,0,178,255,183,156,18,187,64,109,183,156,22,187,86,109,129,16,193,12,65,28,10,187,194,0,130,10,192,21,232,3,204,11,7,128,3,126,205,11,247,149,12,0,82,109,119,0,132,255,192,21,128,12,205,21,78,78,204,11,6,129,204,139,254,128,205,21,78,78,7,126,238,1,192,21,16,0,205,21,78,78,204,139,254,128,205,21,78,78,5,126,192,21,6,0,204,139,254,128,205,21,0,0,5,126,195,85,0,2,204,139,254,128,205,21,161,161,204,16,195,69,0,2,204,139,254,128,205,21,161,254,204,139,254,128,205,29,162,108,204,16,204,139,254,128,141,16,192,21,11,0,204,53,0,64,253,3,205,21,78,78,204,139,254,128,205,21,78,78,5,126,192,21,6,0,204,139,254,128,205,21,0,0,5,126,195,85,0,2,204,139,254,128,205,21,161,161,204,16,195,69,0,2,204,139,254,128,205,21,161,251,64,16,204,139,254,128,205,29,168,108,204,16,192,10,204,139,254,128,205,29,156,108,5,126,130,10,192,157,116,108,204,53,0,64,253,3,247,138,78,108,168,2,192,21,232,3,204,11,11,129,204,139,254,128,205,21,78,78,7,126,205,11,247,149,12,0,104,108,119,0,154,254,192,21,5,0,204,139,254,128,205,21,78,78,5,126,205,11,119,0,130,254,0,10,192,157,75,108,192,37,4,0,5,134,247,149,9,0,62,108,119,0,112,254,247,157,58,108,254,107,192,10,193,21,186,186,1,96,1,96,65,18,201,9,119,0,84,254,232,186,238,186,244,186,250,186,192,157,25,108,192,165,255,0,5,3,194,21,1,0,192,197,252,0,3,1,0,10,194,21,4,0,1,96,201,157,196,107,129,10,132,126,135,0,193,21,176,38,234,1,193,21,180,38,231,1,193,21,184,38,228,1,193,21,188,38,247,21,2,0,162,107,222,1,3,2,1,0,0,0,128,0,0,1,0,2,0,16,10,5,0,27,18,58,0,160,84,162,102,17,133,17,247,9,150,1,192,11,252,2,119,0,0,1,102,17,133,17,192,29,126,106,192,12,192,12,192,101,64,5,192,101,252,255,55,16,212,107,247,29,208,107,208,107,247,21,128,2,184,107,55,10,186,107,55,10,184,107,192,21,1,0,193,29,174,107,193,69,248,255,119,16,182,107,55,116,178,107,55,16,172,107,192,29,164,107,193,29,152,107,193,12,193,12,64,224,55,16,152,107,192,31,148,107,193,29,132,107,87,116,253,255,119,16,130,107,192,109,126,107,55,16,124,107,55,10,130,107,55,10,128,107,55,10,126,107,55,10,124,107,55,10,122,107,55,10,120,107,55,10,118,107,55,10,116,107,55,10,114,107,119,0,106,0,38,16,102,16,247,9,10,5,129,21,128,21,135,0,102,17,133,17,247,53,2,0,101,66,17,3,247,53,128,0,93,66,252,2,119,29,4,0,84,66,247,69,128,0,80,66,247,53,128,0,73,66,252,3,247,21,128,0,66,66,119,0,42,0,102,17,133,17,247,21,124,0,53,66,247,21,128,0,46,66,119,0,22,0,64,17,133,17,38,17,230,16,166,16,38,10,72,0,66,17,132,24,131,24,130,24,70,17,133,21,135,0,12,189,73,0,0,0,66,189,146,189,86,0,130,189,80,0,114,189,77,0,98,189,76,0,0,0,162,189,44,190,85,0,198,189,82,0,192,189,68,0,0,0,52,190,82,190,68,0,0,0,116,190,96,192,73,0,210,191,72,0,144,191,71,0,34,191,70,0,26,191,69,0,20,191,68,0,10,191,67,0,220,190,66,0,146,190,65,0,0,0,124,192,154,192,33,0,0,0,194,192,130,192,37,0,122,190,85,0,58,190,84,0,168,189,82,0,74,189,77,0,244,188,76,0,0,0,200,192,220,188,27,0,0,0,206,192,119,9,88,255,198,101,250,255,247,9,172,14,53,144,249,255,64,157,249,255,192,69,0,255,193,21,180,188,119,0,204,12,247,9,148,14,53,144,249,255,64,157,249,255,192,69,0,255,193,21,152,188,119,0,180,12,247,9,124,14,53,144,249,255,64,157,249,255,192,69,0,255,193,21,52,188,119,0,156,12,247,9,222,10,247,29,0,106,24,106,247,9,212,10,247,29,246,105,16,106,247,9,202,10,247,29,236,105,8,106,206,29,4,106,230,29,254,105,230,29,248,105,247,9,220,224,150,37,192,149,1,0,2,1,192,149,1,0,119,0,220,254,247,9,38,14,53,144,249,255,64,157,249,255,192,69,0,255,193,21,60,188,119,0,70,12,247,9,136,10,247,29,170,105,182,105,192,149,1,0,234,1,247,9,120,10,247,29,154,105,170,105,192,149,1,0,226,1,247,9,104,10,247,29,138,105,156,105,192,149,1,0,218,1,247,9,88,10,247,29,122,105,136,105,192,149,1,0,210,1,192,149,1,0,207,1,247,9,200,13,53,144,249,255,64,157,249,255,192,69,0,255,193,21,80,188,119,0,232,11,192,149,1,0,192,1,247,9,122,10,247,45,66,105,58,105,4,4,247,45,60,105,220,103,3,5,192,149,1,0,179,1,245,29,44,105,246,255,245,29,40,105,244,255,247,9,84,10,247,45,28,105,20,105,4,4,247,45,22,105,182,103,3,5,192,149,1,0,160,1,247,9,228,9,206,29,6,105,230,29,0,105,230,29,250,104,102,29,244,255,102,29,246,255,247,9,148,11,198,101,8,0,192,149,1,0,2,1,192,149,1,0,119,0,242,253,192,149,1,0,251,1,247,9,54,13,53,144,249,255,64,157,249,255,192,69,0,255,193,21,96,188,119,0,86,11,247,9,152,9,247,29,186,104,206,104,247,9,142,9,247,29,176,104,198,104,206,29,192,104,247,9,150,223,192,149,1,0,222,1,192,149,1,0,219,1,247,9,246,12,53,144,249,255,64,157,249,255,192,69,0,255,193,21,104,188,119,0,22,11,247,29,130,104,112,63,247,11,120,63,0,2,247,53,4,0,124,104,3,3,192,29,104,63,2,1,192,29,96,63,1,16,0,10,196,29,104,104,196,69,252,255,196,12,196,12,4,11,4,118,78,16,206,69,240,255,247,9,246,9,206,21,13,0,247,9,180,12,192,149,1,0,170,1,247,29,44,104,46,104,247,29,40,104,42,104,247,29,38,104,30,104,247,29,30,104,26,104,247,9,212,20,247,29,20,104,14,104,247,29,16,104,10,104,192,149,1,0,147,1,247,9,154,20,192,149,1,0,142,1,192,149,1,0,2,1,192,149,1,0,119,0,4,253,247,9,30,9,247,45,230,103,222,103,4,4,247,45,224,103,128,102,3,5,192,149,1,0,241,1,192,21,1,0,193,29,204,103,193,69,248,255,119,16,212,103,55,116,208,103,55,16,202,103,192,29,194,103,193,29,182,103,193,12,193,12,64,224,55,16,182,103,192,31,178,103,193,29,162,103,87,116,253,255,119,16,160,103,192,109,156,103,55,16,154,103,247,29,142,103,136,103,247,29,138,103,132,103,192,149,1,0,199,1,247,9,176,8,247,45,120,103,112,103,4,4,247,45,114,103,18,102,3,5,192,149,1,0,186,1,247,29,116,103,94,62,247,29,100,103,82,62,247,11,90,62,0,2,247,29,88,103,70,62,247,29,88,103,76,62,247,9,12,3,192,149,1,0,166,1,247,9,110,8,247,45,54,103,46,103,4,4,247,45,48,103,208,101,3,5,192,149,1,0,56,1,192,21,1,0,193,29,28,103,193,69,248,255,119,16,36,103,55,116,32,103,55,16,26,103,192,29,18,103,193,29,6,103,193,12,193,12,64,224,55,16,6,103,192,31,2,103,193,29,242,102,87,116,253,255,119,16,240,102,192,109,236,102,55,16,234,102,247,29,222,102,216,102,247,29,218,102,212,102,247,29,228,102,206,61,247,29,212,102,194,61,247,11,202,61,0,2,247,29,200,102,182,61,247,29,200,102,188,61,192,149,1,0,119,0,198,251,206,29,170,102,230,29,164,102,247,9,192,8,214,11,206,21,13,0,247,9,20,11,192,149,1,0,240,1,192,149,1,0,237,1,247,9,238,10,53,144,249,255,64,157,249,255,192,69,0,255,193,21,144,188,119,0,14,9,247,9,214,10,53,144,249,255,87,173,249,255,48,0,9,3,64,157,249,255,192,69,0,255,14,16,247,9,196,214,0,10,208,1,192,149,1,0,205,1,192,149,1,0,202,1,192,149,1,0,199,1,192,149,1,0,196,1,195,1,119,9,62,251,198,101,238,255,247,53,2,0,93,61,78,3,247,69,64,0,212,62,206,21,13,0,247,9,222,250,206,21,10,0,247,9,214,250,53,10,248,255,87,45,248,255,79,0,49,6,245,21,1,0,240,255,87,45,240,255,2,0,56,6,206,21,27,0,247,9,180,250,206,21,42,0,247,9,172,250,206,21,1,0,247,9,164,250,206,21,24,0,247,9,156,250,206,21,3,0,247,9,148,250,53,10,246,255,87,45,246,255,7,1,36,6,192,29,204,101,65,29,246,255,193,12,193,12,64,224,0,18,64,109,248,255,55,16,166,60,247,11,174,60,78,3,77,1,206,21,27,0,247,9,96,250,206,21,64,0,247,9,88,250,206,21,12,0,247,9,80,250,119,0,160,250,181,10,248,255,186,1,181,10,240,255,190,1,206,21,27,0,247,9,56,250,206,21,51,0,247,9,48,250,65,29,240,255,87,112,22,0,78,16,206,101,235,255,247,9,30,250,206,21,10,0,247,9,22,250,206,21,13,0,247,9,14,250,247,53,128,0,246,61,224,3,215,45,242,61,4,0,220,2,206,21,27,0,247,9,246,249,206,21,64,0,247,9,238,249,206,21,13,0,247,9,230,249,206,21,10,0,247,9,222,249,23,141,224,0,247,85,64,0,194,61,23,141,0,0,191,1,245,29,8,60,232,255,245,21,1,0,244,255,87,45,244,255,8,0,71,6,64,29,232,255,192,69,240,255,53,16,242,255,64,29,238,255,192,12,193,21,96,215,196,21,1,0,66,29,242,255,194,12,132,224,68,237,240,255,68,116,193,69,254,255,64,80,53,16,238,255,64,29,236,255,192,12,193,21,148,255,196,21,1,0,66,29,242,255,194,12,132,224,68,237,240,255,68,116,193,69,254,255,64,80,53,16,236,255,64,29,234,255,192,12,193,21,64,244,196,21,1,0,66,29,242,255,194,12,132,224,68,237,240,255,68,116,193,69,254,255,64,80,53,16,234,255,87,45,244,255,4,0,20,2,245,29,112,59,232,255,22,1,78,29,238,255,247,9,36,249,78,29,236,255,247,9,28,249,78,29,234,255,247,9,20,249,181,10,246,255,119,0,124,254,64,29,232,255,23,116,252,255,53,16,232,255,181,10,244,255,156,1,102,17,133,17,198,101,240,255,192,29,44,100,192,237,36,100,53,16,246,255,192,29,34,100,192,237,26,100,53,16,244,255,245,11,244,255,3,2,245,11,246,255,54,3,247,29,8,100,2,100,247,29,4,100,254,99,53,10,242,255,245,11,244,255,45,5,245,11,246,255,85,5,117,45,246,255,244,255,2,6,119,0,26,1,117,29,246,255,240,255,117,29,240,255,248,255,64,29,248,255,245,10,248,255,192,11,22,3,117,237,244,255,242,255,192,29,208,99,192,12,192,69,0,255,55,16,198,99,2,3,119,0,82,1,247,21,1,0,186,99,183,10,176,99,183,10,170,99,119,0,64,1,119,0,186,248,245,11,246,255,2,5,119,0,84,2,117,45,246,255,244,255,2,5,119,0,212,2,64,29,246,255,0,11,53,16,240,255,117,29,240,255,248,255,64,29,248,255,245,10,248,255,192,11,229,3,117,109,244,255,242,255,161,0,55,12,108,99,2,3,119,0,16,3,247,21,128,0,96,99,247,10,86,99,247,10,80,99,119,0,254,2,64,29,246,255,0,11,53,32,244,255,2,5,119,0,72,1,117,29,244,255,240,255,117,29,240,255,248,255,64,29,248,255,245,10,248,255,192,11,191,3,117,109,246,255,242,255,247,229,4,0,30,99,192,31,26,99,192,109,16,99,55,16,14,99,245,11,242,255,4,4,64,29,242,255,0,11,2,1,64,29,242,255,192,12,53,32,240,255,2,4,119,0,56,1,161,0,55,12,240,98,2,3,119,0,58,1,247,21,128,0,228,98,247,10,218,98,247,10,212,98,119,0,40,1,117,29,244,255,240,255,117,29,240,255,248,255,64,29,248,255,245,10,248,255,192,11,137,3,117,109,246,255,242,255,247,229,4,0,178,98,192,31,174,98,192,109,164,98,55,16,162,98,245,11,242,255,4,4,64,29,242,255,0,11,2,1,64,29,242,255,192,12,53,32,240,255,55,5,192,29,138,98,192,12,192,69,0,255,55,16,128,98,54,2,247,21,1,0,120,98,183,10,110,98,183,10,104,98,46,1,245,11,242,255,4,4,64,29,242,255,0,11,2,1,64,29,242,255,192,12,53,32,240,255,12,5,247,229,4,0,76,98,192,31,72,98,192,109,62,98,55,16,60,98,117,109,246,255,242,255,247,29,50,98,32,57,247,11,40,57,0,2,247,29,38,98,20,57,247,29,38,98,26,57,119,0,58,254,247,29,22,98,4,57,247,11,12,57,5,3,4,1,117,237,244,255,242,255,245,1,247,29,0,98,238,56,247,29,0,98,244,56,152,1,64,29,246,255,0,11,53,16,240,255,117,29,240,255,248,255,64,29,248,255,245,10,248,255,192,11,2,2,119,0,46,254,117,109,244,255,242,255,161,0,55,12,208,97,27,2,247,21,128,0,200,97,247,10,190,97,247,10,184,97,19,1,247,29,180,97,162,56,247,11,170,56,5,3,4,1,117,109,244,255,242,255,245,1,247,29,158,97,140,56,247,29,158,97,146,56,119,0,96,254,245,11,242,255,4,4,64,29,242,255,0,11,2,1,64,29,242,255,192,12,53,32,240,255,12,5,247,229,4,0,118,97,192,31,114,97,192,109,104,97,55,16,102,97,117,109,246,255,242,255,247,29,92,97,74,56,247,11,82,56,0,2,247,29,80,97,62,56,247,29,80,97,68,56,176,1,64,29,244,255,0,11,64,45,246,255,2,7,119,0,88,1,64,29,244,255,0,11,53,16,240,255,117,29,240,255,248,255,64,29,248,255,245,10,248,255,192,11,2,2,119,0,110,253,117,237,246,255,242,255,247,101,4,0,14,97,192,31,10,97,192,109,0,97,55,16,254,96,245,11,242,255,4,4,64,29,242,255,0,11,2,1,64,29,242,255,192,12,53,32,240,255,2,4,119,0,68,1,192,29,226,96,192,12,192,69,0,255,55,16,216,96,2,3,119,0,62,1,247,21,1,0,204,96,183,10,194,96,183,10,188,96,119,0,44,1,64,29,244,255,0,11,53,16,240,255,117,29,240,255,248,255,64,29,248,255,245,10,248,255,192,11,2,2,119,0,242,252,117,237,246,255,242,255,247,101,4,0,146,96,192,31,142,96,192,109,132,96,55,16,130,96,245,11,242,255,4,4,64,29,242,255,0,11,2,1,64,29,242,255,192,12,53,32,240,255,51,5,161,0,55,12,104,96,54,2,247,21,128,0,96,96,247,10,86,96,247,10,80,96,46,1,245,11,242,255,4,4,64,29,242,255,0,11,2,1,64,29,242,255,192,12,53,32,240,255,12,5,247,101,4,0,52,96,192,31,48,96,192,109,38,96,55,16,36,96,117,237,246,255,242,255,247,29,26,96,8,55,247,11,16,55,0,2,247,29,14,96,252,54,247,29,14,96,2,55,119,0,132,252,247,29,254,95,236,54,247,11,244,54,5,3,4,1,117,109,244,255,242,255,245,1,247,29,232,95,214,54,247,29,232,95,220,54,154,1,117,29,246,255,240,255,117,29,240,255,248,255,64,29,248,255,245,10,248,255,192,11,2,2,119,0,26,252,117,237,244,255,242,255,192,29,190,95,192,12,192,69,0,255,55,16,180,95,27,2,247,21,1,0,172,95,183,10,162,95,183,10,156,95,19,1,247,29,152,95,134,54,247,11,142,54,5,3,4,1,117,237,244,255,242,255,245,1,247,29,130,95,112,54,247,29,130,95,118,54,119,0,80,254,245,11,242,255,4,4,64,29,242,255,0,11,2,1,64,29,242,255,192,12,53,32,240,255,12,5,247,101,4,0,90,95,192,31,86,95,192,109,76,95,55,16,74,95,117,237,246,255,242,255,247,29,64,95,46,54,247,11,54,54,0,2,247,29,52,95,34,54,247,29,52,95,40,54,172,1,102,17,133,17,198,101,248,255,247,9,122,3,23,116,6,0,55,16,18,95,247,9,110,3,192,69,192,255,192,93,6,95,23,116,4,0,55,16,254,94,247,9,90,3,53,16,248,255,64,29,248,255,192,69,240,255,192,93,234,94,55,16,230,94,245,53,16,0,248,255,5,2,192,29,218,94,0,11,55,16,212,94,119,0,234,243,102,17,133,17,198,101,248,255,247,9,36,3,192,69,224,255,23,116,5,0,55,16,182,94,247,9,20,3,53,16,248,255,247,9,12,3,192,69,224,255,192,93,162,94,192,12,192,12,55,16,154,94,247,9,248,2,192,69,224,255,23,116,5,0,55,16,136,94,247,9,232,2,192,69,224,255,192,93,124,94,192,12,192,12,55,16,116,94,64,29,248,255,128,12,128,12,192,69,252,255,192,93,102,94,55,16,98,94,64,29,248,255,192,69,252,255,192,93,84,94,55,16,80,94,119,0,106,243,102,17,133,17,198,101,246,255,245,11,4,0,8,4,64,29,4,0,0,11,53,16,4,0,53,10,248,255,3,1,245,21,16,0,248,255,64,29,4,0,23,116,246,255,14,16,206,69,192,255,206,85,64,0,247,9,140,2,64,29,4,0,23,116,252,255,14,16,206,69,192,255,206,85,64,0,247,9,118,2,78,29,4,0,206,69,240,255,78,93,248,255,206,85,32,0,247,9,98,2,119,0,2,243,102,17,133,17,230,11,64,29,6,0,23,116,249,255,14,16,206,69,224,255,206,85,32,0,247,9,66,2,78,29,4,0,206,69,252,255,64,29,6,0,192,69,252,255,192,12,192,12,14,80,206,85,96,0,247,9,36,2,78,29,6,0,142,12,142,12,206,69,224,255,206,85,96,0,247,9,16,2,64,29,4,0,23,116,249,255,14,16,206,69,224,255,206,85,32,0,247,9,250,1,78,29,4,0,142,12,142,12,206,69,224,255,206,85,64,0,247,9,230,1,119,0,134,242,209,11,4,3,17,32,252,2,121,0,252,255,89,0,102,17,133,17,198,101,238,255,192,21,1,0,65,29,8,0,193,69,248,255,119,16,82,93,55,116,78,93,55,16,72,93,192,29,64,93,65,29,10,0,193,12,193,12,64,224,55,16,52,93,192,31,48,93,65,29,8,0,87,116,253,255,119,16,30,93,192,109,26,93,55,16,24,93,245,29,18,93,244,255,245,29,18,93,238,255,192,21,0,128,193,29,12,93,193,101,242,255,1,116,64,10,53,16,246,255,192,21,1,0,65,29,4,0,193,69,248,255,119,16,240,92,55,116,236,92,55,16,230,92,192,29,222,92,65,29,6,0,193,12,193,12,64,224,55,16,210,92,192,31,206,92,65,29,4,0,87,116,253,255,119,16,188,92,192,109,184,92,55,16,182,92,192,21,0,128,193,29,182,92,193,101,241,255,1,116,53,16,248,255,64,29,244,255,192,237,154,92,53,16,240,255,192,29,148,92,64,109,240,255,53,16,242,255,245,11,240,255,5,2,64,29,246,255,64,10,53,64,248,255,119,29,12,0,108,51,245,45,118,92,238,255,7,135,247,29,106,92,88,51,247,11,96,51,36,3,35,1,192,21,1,0,193,29,76,92,193,69,248,255,119,16,88,92,55,116,84,92,55,16,78,92,192,29,70,92,193,29,54,92,193,12,193,12,64,224,55,16,58,92,192,31,54,92,193,29,34,92,87,116,253,255,119,16,36,92,192,109,32,92,55,16,30,92,119,0,48,241,247,29,22,92,4,51,119,29,248,255,10,51,245,11,240,255,13,3,183,10,4,92,245,45,0,92,242,255,23,134,247,29,248,91,230,50,247,11,238,50,24,3,23,1,247,229,4,0,236,91,192,31,232,91,192,109,222,91,55,16,220,91,192,29,216,91,64,109,240,255,53,16,242,255,172,1,247,29,202,91,184,50,247,11,192,50,8,3,7,1,247,29,188,91,170,50,247,21,255,0,176,50,213,1,247,29,174,91,156,50,119,29,246,255,162,50,219,1,102,17,38,17,230,16,166,16,247,9,114,198,130,21,131,21,132,21,133,21,135,0,128,29,2,0,247,9,222,188,135,0,183,17,234,91,247,9,200,8,2,134,119,0,44,0,247,9,90,6,25,135,193,21,96,39,87,44,2,0,102,39,19,3,247,9,36,0,2,135,247,9,74,0,193,21,102,39,247,9,44,0,240,135,247,9,120,0,237,1,198,29,176,91,192,21,1,0,1,1,0,10,135,0,65,28,2,0,201,11,5,3,119,28,6,0,138,91,248,3,1,1,177,0,135,0,65,28,4,0,201,11,5,3,119,28,8,0,116,91,248,3,1,1,177,0,135,0,119,28,0,0,98,91,247,21,1,0,102,91,247,29,36,91,98,91,183,10,94,91,247,21,0,0,90,91,247,21,2,0,86,91,247,21,254,255,86,91,247,21,2,0,82,91,119,16,50,91,193,101,2,0,247,9,62,0,135,0,119,28,0,0,38,91,247,21,255,255,42,91,247,21,0,0,38,91,247,29,226,90,34,91,183,10,30,91,247,21,254,255,26,91,247,21,252,255,26,91,247,21,4,0,22,91,119,16,246,90,193,101,4,0,247,9,2,0,135,0,194,29,240,90,195,29,238,90,197,29,182,90,147,20,66,127,119,28,16,0,248,90,119,28,8,0,244,90,119,28,12,0,208,90,192,29,210,90,197,29,152,90,16,10,66,127,69,28,8,0,64,28,16,0,5,224,133,12,133,10,194,29,184,90,2,96,192,109,172,90,166,16,38,16,247,9,34,3,18,81,192,101,2,0,70,127,69,28,8,0,197,109,150,90,69,19,247,9,122,3,197,53,0,128,16,3,197,29,80,90,69,236,8,0,133,12,197,10,9,3,247,9,244,2,18,81,196,37,255,255,3,2,192,101,2,0,73,127,128,21,130,21,132,18,69,28,16,0,197,109,92,90,69,19,247,9,64,3,197,53,1,0,13,3,69,28,16,0,10,3,133,12,192,229,2,0,247,9,188,2,34,81,196,37,255,255,1,2,73,127,197,21,132,39,247,9,96,3,192,29,58,90,195,29,42,90,66,28,16,0,128,96,131,96,194,109,26,90,69,28,8,0,69,236,16,0,133,12,133,10,102,17,2,1,202,85,1,0,102,17,133,20,196,20,247,9,230,2,80,81,133,21,196,53,0,128,2,2,75,127,27,1,79,127,38,16,166,16,230,16,197,29,172,89,69,236,8,0,133,12,197,10,13,3,102,17,202,85,1,0,133,20,196,20,247,9,180,2,80,81,133,21,196,53,0,128,1,3,77,127,131,21,130,21,128,21,133,21,3,1,242,85,0,128,254,255,102,17,133,24,196,24,247,9,142,2,96,81,133,21,196,53,1,0,2,2,75,127,18,1,80,127,241,11,16,0,14,3,4,18,196,53,1,0,10,3,226,85,0,128,133,18,196,24,247,9,100,2,96,81,55,32,132,89,243,130,192,29,126,89,195,29,110,89,197,29,52,89,19,20,66,127,197,29,110,89,247,9,30,3,6,134,205,29,62,89,119,17,58,89,119,0,124,1,247,9,162,3,195,29,64,89,195,109,70,89,247,32,68,89,110,3,247,9,156,1,247,9,60,3,55,17,40,89,196,109,62,89,244,29,80,89,12,0,244,109,68,89,12,0,3,29,4,0,10,2,244,29,36,89,4,0,244,29,36,89,16,0,244,29,32,89,8,0,24,1,197,29,206,88,192,29,12,89,19,84,66,127,244,45,10,89,16,0,3,4,244,29,2,89,16,0,244,45,254,88,8,0,3,7,244,29,246,88,8,0,197,29,232,88,247,9,32,2,38,17,102,16,230,29,226,88,230,29,224,88,1,17,193,109,206,88,66,28,4,0,41,3,3,29,4,0,197,29,130,88,166,16,230,16,128,18,210,66,19,64,68,127,131,21,130,21,247,29,154,88,202,88,133,16,247,9,92,2,3,134,247,9,248,1,6,1,241,29,162,88,16,0,241,29,158,88,8,0,197,16,247,9,66,2,3,134,247,9,222,1,6,1,244,29,136,88,16,0,244,29,132,88,8,0,183,21,126,88,183,21,120,88,129,21,132,21,247,237,96,88,84,88,247,45,80,88,92,88,64,3,192,29,78,88,195,29,76,88,197,29,18,88,19,68,66,127,197,29,64,88,247,9,252,1,51,135,195,29,46,88,247,9,148,0,247,9,52,2,196,109,58,88,196,109,46,88,244,29,72,88,12,0,3,29,4,0,7,2,5,17,197,101,4,0,247,9,62,1,3,29,4,0,197,29,28,88,197,237,22,88,133,12,133,10,194,29,252,87,194,109,10,88,195,109,6,88,147,84,66,127,244,45,254,87,16,0,3,4,244,29,246,87,16,0,244,45,242,87,8,0,3,7,244,29,234,87,8,0,69,16,247,29,194,87,244,87,247,9,42,1,135,0,183,21,236,87,102,16,166,16,230,16,38,17,102,17,230,29,222,87,135,0,183,21,216,87,133,21,132,21,131,21,130,21,129,21,230,29,202,87,135,0,230,16,195,10,3,11,195,12,195,12,195,109,92,87,247,18,178,87,131,21,135,0,230,16,102,17,4,10,196,10,55,16,12,46,197,157,10,46]);fileData0.push.apply(fileData0,[195,29,48,87,197,120,68,193,197,157,0,46,195,29,38,87,197,120,68,193,197,157,245,45,195,29,28,87,197,120,68,193,128,10,196,0,55,16,224,45,197,157,222,45,195,29,4,87,197,120,68,193,197,157,212,45,195,29,250,86,197,120,68,193,197,157,201,45,195,29,240,86,197,120,68,193,196,0,247,11,74,87,1,2,68,10,192,10,133,21,131,21,135,0,197,11,29,3,68,10,29,3,5,65,25,3,38,16,102,16,38,17,68,10,0,10,1,17,193,10,1,121,68,80,1,17,129,10,1,121,2,5,161,0,1,12,1,64,64,80,69,48,1,3,69,80,4,64,239,2,133,69,129,21,128,21,68,17,135,0,68,10,5,17,135,0,205,29,180,86,2,2,119,0,30,251,247,31,170,86,168,86,102,17,69,19,13,10,133,21,135,0,230,16,195,29,120,86,197,96,131,12,37,10,194,126,205,29,140,86,119,17,136,86,131,21,135,0,102,17,68,29,4,0,12,3,102,17,5,17,247,9,214,255,133,21,53,10,4,0,245,21,0,16,16,0,53,10,8,0,197,29,162,86,245,11,6,0,24,2,245,11,8,0,21,2,166,16,230,16,66,29,2,0,67,29,4,0,242,16,4,0,179,16,2,0,53,10,2,0,53,10,4,0,131,21,130,21,245,29,24,86,0,0,119,17,18,86,133,21,135,0,102,17,166,16,230,16,66,17,195,29,254,85,210,11,6,2,195,126,131,21,130,21,133,21,177,0,135,0,194,229,2,0,183,16,46,86,195,29,222,85,197,96,131,12,229,11,1,2,195,126,119,17,30,86,131,21,130,21,133,21,119,225,18,86,119,225,16,86,135,0,166,16,230,16,102,17,196,21,96,39,5,29,2,0,205,11,6,3,67,45,0,0,3,6,22,3,68,17,246,1,194,29,166,85,2,2,119,0,40,250,183,18,156,85,242,16,0,0,50,29,2,0,2,0,180,16,2,0,114,29,4,0,4,0,181,16,4,0,133,16,68,17,133,21,131,21,130,21,135,0,166,16,230,16,102,17,194,29,178,85,197,29,176,85,133,224,197,101,2,0,131,16,195,109,156,85,66,108,12,0,183,16,24,44,247,148,32,44,130,10,70,127,133,21,131,21,130,21,135,0,195,29,166,85,247,9,118,255,55,17,136,85,197,21,132,39,247,9,146,254,244,29,108,85,6,0,244,16,0,0,247,16,116,85,192,29,134,85,192,10,1,16,195,21,3,0,161,0,1,12,195,126,193,69,1,0,116,16,18,0,116,16,10,0,119,96,64,85,3,29,0,0,247,9,142,253,244,29,78,85,14,0,247,29,72,85,26,85,194,21,1,0,192,69,240,255,3,3,161,0,66,12,3,126,191,16,24,85,183,16,34,85,247,9,2,0,135,0,183,17,52,85,193,29,22,85,64,28,18,0,55,16,8,85,55,16,6,85,66,28,6,0,2,96,192,109,222,84,38,16,166,16,230,16,247,9,82,253,196,11,2,2,119,0,250,0,197,29,232,84,247,9,176,253,196,11,2,2,119,0,234,0,18,17,192,101,2,0,196,53,0,128,29,3,197,29,120,84,197,237,196,84,133,12,197,10,22,3,247,9,28,253,23,33,255,255,8,2,18,17,192,101,2,0,247,101,2,0,170,84,76,127,9,1,197,21,1,0,247,9,108,253,18,17,3,3,247,101,2,0,148,84,131,21,130,21,128,21,202,53,1,0,26,3,197,29,130,84,133,12,22,3,192,229,2,0,247,9,216,252,23,33,255,255,6,2,34,17,247,229,2,0,104,84,76,127,9,1,197,21,0,128,247,9,44,253,34,17,3,3,247,229,2,0,82,84,241,29,78,84,18,0,241,29,74,84,10,0,67,28,0,0,195,10,38,7,247,9,134,252,247,9,38,254,244,16,0,0,197,21,116,39,247,9,66,253,69,28,10,0,69,236,18,0,133,12,133,10,66,28,6,0,195,29,252,83,66,108,18,0,67,108,18,0,147,20,66,127,116,28,18,0,20,0,116,28,10,0,12,0,244,29,224,83,8,0,244,29,4,84,16,0,161,0,3,1,198,29,10,84,177,0,135,0,247,9,6,252,247,9,62,0,247,21,255,255,230,83,247,9,218,247,193,29,232,83,192,29,226,83,247,9,250,40,247,9,252,251,135,0,247,9,226,251,247,9,26,0,55,10,196,83,247,9,184,247,193,29,198,83,192,29,192,83,247,9,216,40,247,9,218,251,135,0,247,29,26,83,182,83,183,10,178,83,247,29,18,83,174,83,183,10,170,83,193,29,28,83,55,10,42,83,1,12,183,11,36,83,55,10,34,83,1,12,183,11,28,83,55,10,26,83,1,12,183,11,20,83,193,29,0,83,1,11,119,144,224,41,247,29,232,82,16,83,247,29,124,81,2,83,247,29,204,82,0,83,247,69,15,0,250,82,247,29,246,82,242,82,183,12,238,82,183,12,234,82,183,12,230,82,247,29,226,82,228,82,183,12,224,82,135,0,192,21,210,10,247,9,238,39,55,16,52,83,119,16,50,83,193,29,44,83,129,12,193,237,192,82,87,7,194,29,190,82,194,101,11,0,3,10,1,1,131,10,129,224,253,6,195,11,76,3,215,32,25,0,2,7,195,21,23,0,247,16,4,83,193,29,254,82,129,10,193,69,1,0,194,29,144,82,119,16,192,82,17,10,130,126,119,16,186,82,194,29,128,82,17,10,130,126,102,16,194,21,72,39,129,16,183,16,116,82,195,21,9,0,17,10,194,126,209,21,0,16,209,21,0,16,129,21,197,29,192,82,197,10,11,3,74,16,66,16,195,21,9,0,17,10,194,126,209,21,0,16,209,21,0,16,75,127,194,21,94,39,197,29,158,82,74,16,66,16,195,29,48,82,17,10,194,126,71,127,193,21,96,39,17,10,209,21,102,39,17,10,17,10,17,10,201,21,96,39,1,1,177,0,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,224,128,0,152,224,128,1,138,235,128,1,66,247,184,224,116,135,90,136,90,136,184,224,184,224,184,224,184,224,184,224,236,143,86,158,114,158,124,158,6,159,168,158,8,159,160,158,10,159,12,159,14,159,16,159,18,159,184,224,20,159,22,159,184,224,184,224,184,224,184,224,184,224,184,224,184,224,184,224,184,224,184,224,184,224,184,224,184,224,184,224,184,224,184,224,184,224,184,224,184,224,184,224,184,224,184,224,184,224,184,224,172,248,78,251,180,251,184,224,160,224,128,1,168,224,128,1,255,21,151,231,44,21,23,1,255,21,161,231,36,21,126,1,255,21,175,231,28,21,122,1,255,21,151,231,20,21,110,1,255,21,217,231,12,21,114,1,255,21,199,231,4,21,110,1,255,21,222,231,252,20,106,1,135,0,158,226,176,224,128,1,196,23,176,245,0,10,6,17,53,129,223,53,16,0,206,255,4,3,192,23,0,0,1,3,72,0,223,21,32,0,206,255,247,9,198,21,223,21,37,112,8,254,31,29,34,0,12,254,31,10,206,255,192,21,64,0,1,126,223,21,0,128,206,255,247,9,4,0,192,0,26,1,197,21,4,0,193,21,254,253,194,21,255,14,0,10,192,12,3,10,67,104,67,11,131,126,197,12,67,45,246,253,1,3,128,10,133,12,194,21,0,16,78,127,135,0,23,45,34,0,170,170,16,3,1,10,194,23,188,245,73,16,73,32,8,2,73,10,67,18,67,10,67,32,3,2,17,10,138,126,2,1,192,85,2,0,1,17,194,21,40,0,17,10,130,126,244,23,186,245,12,0,244,21,128,0,16,0,244,21,170,170,34,0,119,0,66,20,51,1,230,21,128,1,230,21,228,225,63,10,40,20,2,0,63,10,36,20,63,16,28,20,192,23,176,245,208,11,80,16,144,16,208,16,16,17,80,17,144,17,1,16,18,0,17,16,3,16,20,0,17,16,193,23,176,245,68,16,7,109,28,0,19,1,194,21,4,0,195,229,2,0,69,28,40,0,9,3,64,28,48,0,197,101,2,0,25,0,197,32,2,2,244,16,14,0,193,101,2,0,143,126,196,23,176,245,6,17,3,129,223,21,2,0,104,37,244,21,56,0,22,0,52,97,22,0,31,141,184,245,55,9,2,4,62,231,196,11,7,128,0,29,30,0,244,21,2,0,30,0,7,96,44,1,247,9,178,4,6,17,55,9,228,3,72,231,247,9,90,3,192,69,160,0,2,2,119,0,84,1,23,160,3,0,39,3,23,32,12,0,65,3,23,32,13,0,236,3,23,32,27,0,62,3,23,32,82,0,64,3,23,32,65,0,65,3,23,32,77,0,10,3,23,32,84,0,5,3,23,32,68,0,218,2,119,0,236,0,119,0,192,2,55,9,146,3,69,231,247,9,18,19,1,16,247,9,12,19,249,9,232,228,245,1,196,11,201,129,31,10,104,37,23,141,128,1,198,23,100,14,0,10,28,0,26,0,10,0,38,16,102,16,38,17,196,23,176,245,180,10,36,0,55,9,86,3,65,231,244,11,36,0,253,2,132,21,129,21,128,21,135,0,247,9,214,18,171,1,247,9,36,3,248,9,110,227,170,1,244,21,82,8,26,0,3,1,244,21,65,4,26,0,247,9,22,4,0,157,26,0,247,9,176,18,247,9,158,18,3,16,195,229,48,0,6,129,215,160,7,0,6,131,23,32,83,0,27,3,247,9,92,3,138,1,0,205,27,0,247,9,138,18,247,9,136,3,55,9,238,2,112,231,247,9,102,2,23,32,27,0,19,2,247,9,198,2,192,229,2,0,19,129,247,9,130,3,248,9,146,228,238,1,23,173,26,0,82,0,213,2,247,9,86,18,195,21,8,0,227,1,23,32,32,0,2,2,119,0,50,0,119,0,218,254,192,21,12,0,247,9,58,18,247,9,40,18,23,32,3,0,249,2,119,0,174,254,122,229,138,227,242,227,248,227,250,227,22,228,90,228,32,228,90,228,38,228,116,228,132,228,3,10,2,1,195,21,2,0,23,141,128,1,0,29,16,0,28,0,194,11,2,3,116,16,14,0,0,29,14,0,26,0,244,16,28,0,20,3,1,17,194,21,4,0,69,28,40,0,9,3,17,0,49,16,48,0,49,45,14,0,40,0,2,3,0,10,25,0,193,101,2,0,143,126,247,9,202,254,6,17,2,129,31,10,104,37,128,21,129,21,130,21,131,21,132,21,133,21,134,21,199,111,200,17,14,0,10,0,195,21,254,255,1,1,211,11,194,11,7,3,64,16,5,29,18,0,197,101,2,0,247,9,24,3,244,96,18,0,247,9,0,2,135,0,194,11,251,3,116,16,18,0,248,1,195,21,2,0,1,1,3,10,194,11,3,3,124,16,22,0,3,1,60,29,18,0,22,0,244,101,2,0,22,0,244,69,16,0,22,0,0,29,20,0,195,11,3,2,52,16,18,0,223,1,192,96,52,96,18,0,219,1,244,229,2,0,22,0,244,85,64,0,22,0,244,69,16,0,22,0,52,31,22,0,18,0,206,1,196,11,5,129,244,21,4,0,32,0,42,136,112,143,135,0,196,11,4,129,52,10,32,0,42,136,105,143,135,0,138,227,168,228,178,228,196,228,208,228,226,228,220,228,226,228,214,228,116,228,132,228,194,11,1,3,77,16,195,10,4,1,194,11,1,3,77,16,131,10,195,69,248,255,3,205,27,0,3,1,194,11,1,3,77,16,247,9,174,1,135,0,206,21,36,226,160,1,206,21,36,226,165,1,206,21,36,226,159,1,206,21,36,226,185,1,122,229,0,229,16,229,32,229,58,229,68,229,28,226,248,228,247,9,162,253,119,0,96,10,3,16,119,9,76,0,252,231,36,0,68,232,5,0,0,0,3,16,119,9,60,0,252,231,36,0,78,232,5,0,0,0,55,9,226,0,123,231,119,9,40,0,112,232,136,0,0,0,119,9,30,0,128,233,240,0,0,0,119,9,20,0,96,235,21,0,0,0,119,9,10,0,252,231,36,0,88,232,12,0,0,0,192,21,0,2,65,21,4,3,66,21,80,20,130,126,250,1,247,9,56,253,192,21,128,0,28,0,192,21,0,2,26,0,198,21,0,2,192,16,10,0,135,0,196,23,176,245,1,1,3,10,1,17,193,101,72,0,2,10,247,9,252,15,23,32,48,0,24,135,23,32,55,0,8,130,151,32,8,0,245,3,17,144,130,10,247,9,240,15,240,1,23,160,127,0,10,2,194,11,235,3,33,138,194,10,102,16,55,9,70,0,105,231,129,21,227,1,129,224,2,10,5,10,38,16,64,146,17,138,192,229,48,0,8,129,197,12,197,12,197,12,5,96,130,10,151,32,8,0,243,2,128,21,65,17,135,0,247,9,154,15,192,229,126,0,5,129,23,32,9,0,2,130,192,12,135,0,0,10,135,0,1,21,2,1,247,9,140,15,64,148,252,2,132,0,247,9,224,0,1,29,18,0,247,9,28,0,55,9,226,255,78,231,5,29,18,0,247,9,220,0,1,16,247,9,8,0,55,9,206,255,112,231,135,0,116,16,20,0,0,10,194,21,6,0,5,1,0,10,65,12,64,12,65,12,64,12,65,12,64,12,192,101,48,0,247,9,60,15,140,126,135,0,247,9,146,0,3,10,247,9,20,0,131,10,244,160,27,0,250,135,215,32,8,0,247,3,135,0,247,9,120,0,0,157,26,0,247,9,18,15,192,16,192,101,48,0,23,32,56,0,2,2,192,21,83,0,247,9,254,14,55,9,102,255,86,231,247,9,14,0,65,19,247,9,144,255,55,9,86,255,113,231,135,0,5,10,23,173,27,0,4,0,4,2,3,205,27,0,197,21,20,0,197,96,197,12,5,97,135,0,194,31,224,14,17,3,55,9,46,255,88,231,129,16,55,9,46,255,55,9,34,255,96,231,244,11,18,0,5,2,52,29,14,0,18,0,247,9,30,255,135,0,192,21,13,0,247,9,154,14,192,21,10,0,247,9,146,14,135,0,7,109,32,0,17,0,135,0,161,0,5,12,95,17,8,254,192,23,12,254,133,10,197,12,135,0,7,109,32,0,25,0,135,0,161,0,5,12,197,10,95,17,8,254,31,16,12,254,197,12,135,0,27,189,0,27,191,189,0,27,188,0,13,10,15,64,32,0,47,32,0,82,0,82,83,0,61,0,13,10,14,42,42,42,32,0,32,42,42,42,15,0,13,10,0,27,68,32,27,68,0,0,32,32,0,6,227,240,0,6,240,240,0,13,10,10,14,42,32,122,97,103,114,117,122,107,97,32,105,122,32,115,101,116,105,32,42,32,32,15,0,122,97,119,105,115,97,110,105,101,0,114,101,122,101,114,119,110,121,106,32,107,111,100,0,97,119,97,114,105,113,32,115,101,116,101,119,111,103,111,32,112,105,116,97,110,105,113,0,100,119,111,106,110,111,101,32,122,97,119,105,115,97,110,105,101,0,115,116,111,112,0,122,97,119,105,115,97,110,105,101,32,112,114,105,32,112,114,105,101,109,101,32,97,46,119,46,112,46,0,0,0,193,21,188,253,55,144,67,0,9,138,194,21,72,2,195,21,2,0,201,139,254,128,177,144,2,0,194,0,198,126,195,21,2,0,201,139,254,128,241,149,255,0,2,0,198,126,201,139,254,128,247,139,18,0,3,3,55,138,12,0,232,1,223,37,160,0,0,0,228,2,7,10,0,8,2,0,0,1,0,0,0,1,0,8,17,0,0,0,0,0,0,1,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,23,141,224,0,197,151,113,253,64,17,197,69,240,255,128,12,192,69,207,255,5,80,119,145,228,0,192,157,236,0,64,121,55,144,230,0,192,21,24,0,208,21,208,2,16,10,208,21,218,2,16,10,198,21,0,16,223,21,230,2,64,0,31,10,66,0,23,141,0,0,55,10,162,0,0,137,215,45,156,0,5,0,251,135,0,136,192,165,254,0,252,2,193,21,252,2,64,148,192,165,254,0,2,3,0,136,250,1,0,136,192,165,255,0,252,2,0,136,64,161,249,2,196,21,255,0,4,120,193,21,0,80,0,136,3,16,4,120,0,136,192,165,251,0,3,131,4,120,17,144,249,1,6,2,0,136,64,10,4,120,17,144,64,10,242,1,192,165,252,0,196,2,0,136,4,160,193,2,0,136,192,213,8,0,0,136,192,165,255,0,186,2,0,136,223,21,4,0,112,253,23,141,224,0,95,0,0,80,223,139,116,253,253,128,31,144,118,253,223,139,112,253,253,128,192,151,114,253,2,0,31,10,112,253,151,10,0,0,215,45,250,255,0,2,1,130,2,0,119,0,56,255,255,0,0,132,0,0,0,0,0,0,0,0,0,252,123,48,255,254,0,0,23,141,224,0,223,21,216,2,240,0,223,21,208,2,64,0,223,21,44,3,4,0,223,21,52,3,8,0,192,21,224,0,31,16,242,0,31,16,66,0,31,16,6,0,31,16,10,0,23,10,0,0,247,9,12,1,23,141,0,0,223,139,112,255,253,128,192,151,114,255,192,69,128,255,192,165,3,0,3,2,247,9,16,0,243,1,247,11,216,255,240,3,1,144,247,9,98,0,236,1,223,139,116,255,253,128,223,149,63,0,118,255,223,139,112,255,253,128,192,151,114,255,192,69,160,255,23,160,65,0,17,3,23,160,80,0,18,3,23,160,78,0,23,3,23,160,75,0,15,3,247,11,152,255,19,3,193,149,3,0,247,9,32,0,14,1,247,21,1,0,134,255,10,1,55,10,128,255,7,1,197,21,196,3,247,9,198,0,0,0,247,9,130,0,135,0,223,139,116,253,253,128,95,144,118,253,135,0,223,21,64,0,112,253,2,0,102,16,223,53,1,144,112,253,14,2,193,151,114,253,223,139,116,255,253,128,95,144,118,255,247,11,62,255,2,2,247,9,202,255,129,21,2,0,193,23,112,253,2,128,193,85,4,0,193,53,0,16,2,3,193,85,2,0,193,69,248,255,193,85,48,0,119,144,121,0,197,21,144,3,247,9,92,0,223,139,114,253,231,1,247,21,48,52,140,0,3,1,247,21,49,48,132,0,197,21,177,3,247,9,64,0,0,0,192,151,113,253,1,144,192,197,240,0,193,197,159,0,129,140,64,208,1,16,193,69,248,255,193,85,48,0,119,144,72,0,1,16,129,12,129,12,129,12,193,69,248,255,193,85,48,0,119,144,51,0,197,21,156,3,247,9,2,0,135,0,223,139,116,255,253,128,95,149,118,255,250,2,135,0,14,115,98,111,106,32,35,48,15,13,10,0,14,116,101,115,116,32,115,116,97,110,99,105,105,32,35,48,48,15,13,10,0,14,112,114,101,114,121,119,97,110,105,101,32,35,48,48,15,13,10,0,14,107,111,110,101,99,32,116,101,115,116,97,15,13,10,0,0,0,0,0,0,0,0,0,0,0,0,0,223,139,124,253,253,128,223,21,64,0,126,253,1,10,194,21,0,2,223,139,120,253,253,128,209,151,122,253,134,126,215,39,0,0,160,0,1,3,0,0,7,10,191,16,180,3,194,29,176,3,194,101,2,0,18,16,18,0,50,16,12,0,20,0,0,141,50,16,14,0,82,16,210,31,150,3,210,16,18,17,82,17,146,17,133,20,197,229,2,0,194,101,2,0,17,0,1,16,192,69,248,255,192,12,192,109,118,3,192,101,2,0,18,16,5,18,197,53,1,0,20,2,63,10,100,3,10,10,17,0,2,16,17,0,3,16,17,0,4,16,17,0,5,16,193,69,231,255,129,12,129,12,193,97,193,101,80,0,65,98,73,0,197,21,4,0,17,0,23,141,128,0,26,0,17,0,28,0,192,29,44,3,192,101,4,0,1,20,2,20,3,20,4,20,5,20,6,20,133,17,0,28,2,0,25,0,192,29,16,3,0,28,16,0,25,0,192,29,6,3,70,17,5,28,12,0,0,28,2,0,119,0,246,2,74,1,68,1,4,0,190,0,194,53,128,127,87,3,196,53,128,127,84,3,193,29,224,2,128,16,2,128,177,10,22,0,196,11,2,128,177,10,22,0,1,17,192,69,127,128,193,69,127,128,194,69,128,255,196,69,128,255,194,85,128,0,196,85,128,0,64,96,192,229,128,64,193,29,172,2,9,16,177,16,24,0,241,16,26,0,128,16,194,12,5,12,4,134,133,112,3,96,66,11,1,1,133,112,192,29,140,2,0,28,26,0,196,12,0,12,5,134,4,112,132,12,3,97,66,11,2,1,4,112,132,12,67,96,66,11,2,96,192,29,106,2,0,28,24,0,4,112,66,96,192,29,94,2,0,28,26,0,161,0,0,12,5,112,23,118,2,0,3,96,66,11,1,10,2,12,3,12,151,118,58,0,1,12,119,0,90,1,2,10,3,10,119,0,184,1,194,53,128,127,3,2,5,10,119,0,190,1,196,53,128,127,243,3,193,29,30,2,128,16,2,128,177,10,22,0,196,11,2,128,177,10,22,0,1,17,192,69,127,128,193,69,127,128,194,69,128,255,196,69,128,255,194,85,128,0,196,85,128,0,1,224,193,101,128,63,127,16,234,1,193,21,32,0,0,10,23,33,128,0,9,5,197,224,132,11,132,224,2,129,177,0,4,1,197,96,68,11,132,96,161,0,65,12,64,12,197,12,68,12,192,11,237,128,192,69,0,128,2,16,67,16,119,0,208,0,194,101,0,128,194,53,128,127,11,2,196,53,128,127,4,2,2,10,3,10,119,0,30,1,2,17,67,17,119,0,22,1,196,53,128,127,251,3,128,16,194,69,128,255,194,85,128,0,192,11,3,128,3,11,66,11,2,11,1,17,196,69,128,255,196,85,128,0,193,11,3,128,5,11,68,11,4,11,192,69,127,128,193,69,127,128,127,16,88,1,64,224,2,2,1,10,37,1,20,129,63,96,74,1,1,10,23,32,0,12,3,7,4,10,5,10,27,1,192,12,192,0,0,11,128,138,2,3,0,119,1,12,23,119,63,0,1,12,16,1,1,10,23,32,0,244,3,4,2,10,3,10,9,1,192,12,192,0,128,138,2,3,128,118,1,12,151,118,63,0,1,12,67,97,66,11,2,97,10,128,1,11,67,11,66,11,3,11,66,11,2,11,192,29,238,0,176,10,22,0,196,16,68,80,132,80,51,3,151,32,0,1,7,135,2,12,3,12,1,12,255,101,128,0,208,0,246,1,151,32,128,0,7,134,193,12,67,12,66,12,255,229,128,0,188,0,246,1,65,12,67,11,66,11,151,32,0,1,7,135,2,12,3,12,1,12,255,101,128,0,162,0,246,1,5,10,196,31,154,0,25,3,3,128,68,12,24,128,21,1,192,29,140,0,48,12,22,0,2,134,194,85,0,128,194,69,128,0,2,81,5,10,194,11,2,2,197,85,4,0,11,128,197,85,8,0,8,1,197,85,1,0,197,85,8,0,197,85,2,0,197,85,0,128,192,29,86,0,240,69,111,0,18,0,112,209,18,0,197,11,4,128,197,21,164,0,119,0,4,253,248,101,4,0,20,0,5,30,20,0,197,101,4,0,4,28,16,0,0,28,18,0,23,141,128,0,28,0,0,17,26,0,192,16,25,0,128,16,25,0,192,29,20,0,16,36,1,20,2,20,3,20,4,20,5,20,6,18,0,28,244,255,10,0,68,239,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,10,174,255,31,10,172,255,193,21,192,255,194,21,8,0,17,10,130,126,55,9,142,246,78,240,162,0,159,10,174,255,3,132,223,21,255,255,174,255,55,9,122,246,117,240,195,23,174,255,247,9,132,0,55,9,108,246,176,255,192,21,27,0,247,9,246,5,192,21,190,0,247,9,238,5,247,9,234,1,192,11,8,3,192,21,14,0,240,37,255,255,192,255,2,3,176,10,192,255,4,10,197,21,0,224,247,9,198,0,192,11,8,3,192,21,12,0,240,37,255,255,192,255,2,3,176,10,192,255,247,9,166,5,31,10,172,255,193,21,192,255,194,21,8,0,162,0,95,100,172,255,4,132,223,21,255,255,172,255,1,1,136,126,55,9,254,245,132,240,195,23,172,255,247,9,8,0,55,9,240,245,176,255,176,1,192,21,176,255,194,21,6,0,208,149,32,0,131,126,8,138,38,10,193,21,16,0,195,12,78,12,151,35,10,0,3,129,206,229,10,0,131,10,73,126,206,101,48,0,160,149,195,11,239,2,135,0,27,72,27,74,27,89,37,58,27,164,14,116,32,101,32,115,32,116,32,105,32,114,32,111,32,119,32,97,32,110,32,105,32,101,27,191,164,15,0,27,89,40,53,14,112,114,111,104,111,100,58,32,15,0,14,32,32,32,32,111,123,105,98,111,107,58,32,15,0,0,1,17,3,10,64,16,195,11,1,3,64,10,17,16,69,32,249,135,33,32,3,3,192,21,1,0,135,0,64,16,192,229,2,0,195,11,1,3,64,10,68,32,243,130,67,10,234,2,246,21,255,0,246,255,3,17,54,10,250,255,246,16,248,255,194,16,194,85,254,31,210,11,66,33,1,134,66,17,246,16,244,255,129,29,248,255,128,29,246,255,67,32,3,2,195,101,128,0,192,0,246,181,1,0,250,255,1,2,9,16,9,32,3,3,192,21,3,0,135,0,193,101,2,0,66,32,235,135,182,138,250,255,131,29,244,255,246,181,1,0,250,255,223,2,211,11,194,32,3,134,246,139,250,255,217,128,131,29,248,255,246,0,246,255,212,3,131,16,133,32,198,135,246,21,255,0,246,255,1,17,128,29,246,255,17,16,69,32,253,135,1,17,9,32,3,3,192,21,2,0,135,0,193,101,2,0,69,32,247,135,247,9,34,0,128,29,246,255,1,17,9,32,3,3,192,21,3,0,135,0,193,101,2,0,69,32,247,135,246,0,246,255,223,3,0,10,135,0,194,21,232,3,195,21,232,3,193,126,132,126,135,0,175,0,7,135,6,133,5,3,4,129,3,5,2,7,1,131,2,130,119,0,212,3,178,0,184,0,3,132,2,5,1,7,2,4,119,0,196,3,180,0,177,0,3,2,2,6,1,130,2,7,119,0,180,3,131,17,227,11,11,10,192,16,227,11,11,16,196,16,175,0,219,11,2,3,119,0,156,3,177,0,43,12,2,135,1,132,2,129,119,0,142,3,175,0,156,12,1,132,2,129,119,0,130,3,168,0,219,12,2,134,1,133,2,129,119,0,116,3,191,0,236,10,3,134,2,132,1,3,2,128,119,0,100,3,43,11,2,134,1,133,2,129,119,0,88,3,178,0,92,10,1,134,2,132,119,0,76,3,155,10,1,134,2,128,119,0,66,3,108,11,2,135,1,132,2,129,119,0,54,3,175,0,92,12,2,134,1,132,2,3,119,0,40,3,171,10,172,11,1,135,2,3,119,0,28,3,130,17,226,11,128,16,8,10,226,11,226,11,18,16,128,10,18,16,128,16,129,16,106,138,1,134,2,129,119,0,252,2,234,139,2,3,119,0,244,2,178,0,169,140,2,134,1,133,2,129,119,0,230,2,154,138,1,134,2,128,119,0,220,2,161,0,41,140,3,134,2,132,1,2,2,128,119,0,204,2,218,140,2,134,1,133,2,129,119,0,192,2,106,139,1,135,2,129,119,0,182,2,191,0,89,140,2,131,1,133,2,128,119,0,168,2,234,0,2,129,119,0,160,2,177,0,153,139,1,135,2,3,119,0,148,2,26,139,234,138,1,134,2,3,119,0,136,2,128,17,224,11,1,16,97,40,9,16,66,16,4,16,224,11,3,16,34,16,11,10,12,10,191,0,164,0,153,230,2,135,1,133,2,3,119,0,96,2,234,85,0,128,233,101,1,0,153,230,2,134,1,132,2,129,119,0,76,2,12,11,169,58,2,3,119,0,66,2,153,38,2,133,119,0,58,2,106,10,175,0,169,102,1,132,2,129,119,0,44,2,177,0,153,74,1,134,2,129,119,0,32,2,105,10,153,38,2,3,119,0,22,2,128,17,224,11,3,16,193,16,227,11,35,16,139,10,35,16,196,16,224,11,36,16,140,10,36,16,177,0,220,21,1,254,220,149,128,0,27,155,27,155,2,135,119,0,232,1,201,37,128,1,2,3,119,0,222,1,227,40,27,215,27,215,201,37,129,129,2,3,119,0,206,1,43,203,43,203,27,183,2,2,27,187,2,2,119,0,190,1,43,167,2,2,43,167,2,3,119,0,178,1,192,17,192,101,10,0,191,0,72,0,2,1,168,0,253,1,3,134,2,132,1,2,2,128,119,0,150,1,2,10,196,17,0,17,2,1,66,10,3,1,20,37,212,11,100,0,130,10,3,2,16,36,4,32,2,3,119,0,118,1,194,17,194,101,20,0,191,0,162,0,74,8,194,11,12,3,119,0,98,1,129,0,5,134,4,133,3,2,2,128,2,10,249,1,214,11,119,0,78,1,132,17,228,11,3,10,194,21,5,0,204,21,2,0,191,0,140,112,2,129,1,131,2,132,119,0,50,1,195,37,10,0,2,3,119,0,40,1,194,11,2,3,119,0,32,1,3,10,194,21,170,170,204,21,2,0,140,112,3,134,2,128,1,133,2,2,119,0,8,1,194,37,255,255,2,3,119,0,254,0,195,37,84,85,2,3,119,0,244,0,204,21,1,0,194,21,170,170,175,0,180,0,184,0,140,116,3,129,2,3,1,132,2,135,119,0,216,0,194,37,84,85,2,3,119,0,206,0,204,21,255,255,193,21,85,85,76,116,87,32,170,42,2,3,119,0,186,0,2,10,204,21,16,0,195,21,170,170,175,0,180,0,177,0,140,118,3,128,2,3,1,132,2,134,119,0,156,0,194,37,170,170,2,3,119,0,146,0,195,11,2,3,119,0,138,0,3,10,204,21,240,255,194,21,170,170,168,0,180,0,178,0,177,0,140,118,2,128,1,131,2,132,119,0,108,0,194,37,255,255,2,3,119,0,98,0,195,37,170,170,2,3,119,0,88,0,204,21,85,85,2,10,195,21,85,85,191,0,140,114,2,129,1,131,2,132,119,0,64,0,151,32,1,0,2,3,119,0,54,0,195,11,2,3,119,0,46,0,194,21,255,223,195,21,1,128,204,21,0,128,191,0,140,114,2,129,1,131,2,132,119,0,20,0,151,32,0,64,2,3,119,0,10,0,215,32,1,128,2,2,0,10,135,0,192,21,1,0,135,0,12,1,18,136,135,0,0,0,0,0,0,0,0,0,0,0,34,136,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,1,64,1,58,1,68,1,0,0,0,128,0,64,198,21,0,4,192,140,192,140,38,16,247,9,118,1,130,21,192,23,48,254,23,32,2,0,5,130,2,80,5,3,247,9,20,0,2,1,247,9,120,168,223,21,2,0,34,14,23,141,0,0,119,0,118,2,119,9,140,168,48,246,195,21,30,246,2,1,119,9,130,168,193,20,130,140,251,135,252,2,195,21,38,246,193,20,194,0,245,2,119,9,106,168,166,246,135,0,75,246,89,246,107,246,121,246,139,246,154,246,157,246,160,246,163,246,13,10,32,32,27,164,243,244,225,242,244,239,247,249,234,32,244,229,243,244,27,191,164,13,10,10,0,45,32,207,219,201,194,203,193,32,227,240,13,10,0,45,32,207,219,201,194,203,193,32,239,250,245,32,227,240,13,10,0,45,32,207,219,201,194,203,193,32,240,240,13,10,0,45,32,207,219,201,194,203,193,32,239,250,245,32,240,240,13,10,0,45,32,207,219,201,194,203,193,32,240,250,245,32,32,0,49,32,0,50,32,0,51,32,0,52,32,0,27,184,0,0,223,21,0,112,8,254,193,21,0,224,192,21,197,10,95,20,12,254,159,10,8,254,5,126,193,21,238,246,192,21,36,0,95,20,12,254,159,10,8,254,5,126,223,23,206,255,12,254,193,21,54,247,95,20,8,254,223,21,128,1,12,254,201,11,249,2,135,0,12,224,197,21,112,255,17,0,192,139,251,128,17,0,135,0,38,16,197,21,116,255,17,0,192,139,251,128,128,21,197,21,120,255,25,0,135,0,40,224,64,224,58,224,68,224,128,0,0,2,0,112,247,9,216,255,223,11,250,231,253,3,2,128,95,0,32,229,95,0,228,225,1,112,3,112,61,112,63,112,95,112,0,0,247,9,166,152,223,21,135,0,0,0,192,21,128,1,223,21,128,224,4,0,31,16,6,0,223,21,136,224,8,0,31,16,10,0,223,21,144,224,20,0,31,16,22,0,247,9,2,144,247,9,232,180,247,9,180,195,247,9,134,196,247,9,126,136,247,9,94,0,159,17,32,14,223,21,154,247,4,0,247,9,54,186,192,21,1,0,4,1,198,23,32,14,192,21,255,255,223,21,253,115,8,254,31,16,12,254,31,16,36,14,223,69,0,3,44,254,223,85,64,0,54,254,31,10,202,255,223,21,1,0,200,255,192,21,176,39,16,10,16,10,200,21,68,88,0,100,136,10,135,0,0,10,65,21,66,21,17,16,130,126,133,0,223,21,184,248,24,0,31,10,26,0,223,21,220,248,28,0,223,21,128,0,30,0,223,21,138,249,64,0]);fileData0.push.apply(fileData0,[223,21,128,0,66,0,223,21,236,251,216,0,223,85,2,0,54,254,223,21,242,251,224,0,223,21,128,0,226,0,223,85,4,0,54,254,31,10,130,38,223,21,32,0,8,254,223,21,68,0,12,254,159,10,8,254,223,21,128,0,12,254,159,10,8,254,223,21,2,0,12,254,223,21,255,15,42,14,247,9,192,4,223,21,88,252,204,0,223,21,128,0,206,0,159,10,66,14,223,21,146,248,86,14,135,0,198,21,0,4,223,21,2,0,34,14,192,21,48,14,208,11,254,3,31,16,46,14,1,28,18,0,3,2,248,9,104,234,244,1,48,10,18,0,73,0,223,21,146,248,86,14,237,1,198,136,24,170,100,146,46,252,32,128,226,129,62,252,78,252,48,253,192,23,46,14,176,21,18,0,22,141,222,1,102,17,38,17,230,16,166,16,102,16,38,16,133,29,12,0,69,25,253,9,0,88,128,21,129,21,130,21,131,21,132,21,133,21,2,0,128,19,0,24,120,0,112,87,38,16,199,103,94,14,41,1,102,16,193,23,120,38,1,11,193,12,193,12,192,23,62,5,192,101,32,4,23,32,184,9,7,135,4,130,223,21,64,5,182,9,4,1,192,229,120,4,48,16,254,255,64,224,23,32,64,5,2,130,192,101,120,4,224,21,226,13,192,23,62,5,64,224,23,32,64,5,2,134,192,101,120,4,31,16,62,5,85,1,192,23,62,5,192,229,4,0,23,32,64,5,2,134,192,101,120,4,31,16,62,5,192,101,36,4,23,32,184,9,7,135,4,2,223,21,64,5,182,9,4,1,192,229,120,4,48,16,254,255,192,229,4,0,23,32,64,5,2,2,192,101,120,4,224,21,226,13,128,21,159,10,120,38,81,1,223,11,120,38,85,3,169,129,38,16,199,103,94,14,44,1,102,16,193,23,120,38,193,12,193,12,192,23,62,5,192,101,32,4,23,32,184,9,7,135,4,130,223,21,64,5,182,9,4,1,192,229,120,4,48,16,254,255,64,96,23,32,184,9,2,131,192,229,120,4,224,21,226,13,192,23,62,5,64,96,23,32,184,9,2,135,192,229,120,4,31,16,62,5,129,21,128,21,31,10,120,38,30,1,192,23,62,5,240,69,1,0,2,0,31,28,2,0,62,5,192,101,32,4,23,32,184,9,8,135,5,2,192,21,64,5,31,16,182,9,4,1,192,229,120,4,48,16,254,255,240,21,226,13,2,0,128,21,223,10,120,38,76,2,223,23,232,37,116,38,159,10,54,14,70,1,199,103,92,14,20,1,66,1,223,138,118,38,63,6,3,3,223,21,48,144,114,38,223,23,114,38,118,38,223,0,114,38,50,129,223,12,118,38,255,149,127,0,10,44,47,1,38,16,102,16,102,17,197,23,104,38,64,19,64,239,26,0,65,29,54,0,1,1,192,12,1,12,253,134,31,16,110,38,65,29,48,0,241,69,1,0,6,0,241,69,1,0,42,0,117,29,26,0,48,0,65,29,48,0,241,85,1,0,6,0,241,85,1,0,42,0,223,21,4,0,92,14,133,21,129,21,128,21,31,10,118,38,208,1,255,151,110,38,170,43,223,11,88,14,5,3,223,10,88,14,2,2,255,9,132,19,223,10,38,14,3,2,223,69,128,31,206,255,223,139,151,14,11,3,223,138,151,14,8,2,159,10,48,14,223,85,128,0,206,255,223,21,1,0,38,14,2,0,95,21,88,14,95,21,90,14,133,0,255,151,194,255,112,19,6,129,223,85,128,0,206,255,223,21,2,0,38,14,215,175,94,19,4,0,8,3,159,10,128,14,223,69,8,0,128,14,159,10,48,14,2,0,38,16,102,16,166,16,247,9,236,140,130,21,129,21,128,21,223,85,16,0,206,255,2,0,31,10,152,14,199,103,34,14,4,1,223,53,8,0,62,254,35,3,102,17,197,23,134,14,95,33,136,14,30,3,245,139,1,0,15,3,38,10,78,159,0,0,6,2,86,37,197,69,32,0,95,17,134,14,240,1,141,10,197,21,127,0,65,127,5,1,102,21,197,69,32,0,95,17,134,14,199,103,34,14,8,1,159,21,56,254,133,21,2,0,223,21,2,0,152,14,250,1,128,21,248,1,31,10,102,37,223,53,8,0,54,254,17,3,199,103,34,14,18,1,215,39,52,14,127,0,11,3,255,151,48,254,144,41,159,10,100,37,223,69,128,0,100,37,159,10,52,14,2,0,223,21,2,0,102,37,2,0,159,10,60,14,2,0,38,16,192,23,130,38,22,129,23,32,2,0,7,134,240,151,52,254,128,38,159,10,130,38,128,21,2,0,6,2,223,139,52,254,248,2,95,10,130,38,247,1,159,10,50,14,31,10,130,38,242,1,223,139,52,254,239,3,249,1,31,10,54,14,199,103,116,38,135,0,31,10,92,14,135,0,31,10,60,14,230,23,50,254,247,9,136,191,214,11,135,0,255,9,14,18,31,10,62,14,135,0,2,0,1,16,2,129,1,12,64,11,166,16,2,10,38,10,193,21,176,39,209,11,7,3,209,11,65,100,251,128,194,11,247,2,0,10,30,1,209,11,9,32,9,131,66,32,5,3,78,34,243,131,66,16,78,18,240,1,128,19,2,1,177,10,252,255,66,20,194,229,6,0,2,32,11,134,66,16,2,96,18,10,74,16,210,229,6,0,74,24,10,224,202,229,6,0,17,16,214,11,130,21,135,0,193,11,2,128,119,0,254,250,192,21,176,39,192,101,6,0,21,129,1,32,6,3,0,108,254,255,248,1,65,18,193,101,6,0,49,10,250,255,225,11,64,16,0,100,200,11,4,2,9,108,4,0,201,101,6,0,233,11,240,3,135,0,223,11,40,14,5,3,31,10,200,255,31,10,40,14,135,0,177,0,135,0,223,21,4,0,40,14,223,21,138,249,196,0,223,21,128,0,198,0,31,10,202,255,223,21,1,0,200,255,135,0,247,9,6,0,31,10,64,14,135,0,23,141,128,0,223,21,174,253,192,0,247,9,192,227,1,10,128,12,2,135,3,2,4,1,247,9,64,0,129,10,248,1,247,9,60,244,23,141,0,0,192,11,4,3,193,21,5,0,247,9,40,0,192,21,255,255,247,9,228,254,68,16,69,16,5,96,247,9,20,243,192,11,4,3,193,21,4,0,247,9,10,0,192,21,127,0,247,9,220,138,135,0,223,21,224,127,8,254,95,96,8,254,223,37,255,255,12,254,2,3,159,10,12,254,135,0,223,37,4,0,194,255,2,2,127,0,70,226,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,102,204,182,85,228,135,135]);Module["FS_createDataFile"]("/","uknc_rom.bin",fileData0,true,true,false)}if(Module["calledRun"]){runWithFS()}else{if(!Module["preRun"])Module["preRun"]=[];Module["preRun"].push(runWithFS)}});loadPackage({"files":[]})}))();var Module;if(!Module)Module=(typeof Module!=="undefined"?Module:null)||{};var moduleOverrides={};for(var key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;if(Module["ENVIRONMENT"]){if(Module["ENVIRONMENT"]==="WEB"){ENVIRONMENT_IS_WEB=true}else if(Module["ENVIRONMENT"]==="WORKER"){ENVIRONMENT_IS_WORKER=true}else if(Module["ENVIRONMENT"]==="NODE"){ENVIRONMENT_IS_NODE=true}else if(Module["ENVIRONMENT"]==="SHELL"){ENVIRONMENT_IS_SHELL=true}else{throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.")}}else{ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof require==="function"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER}if(ENVIRONMENT_IS_NODE){if(!Module["print"])Module["print"]=console.log;if(!Module["printErr"])Module["printErr"]=console.warn;var nodeFS;var nodePath;Module["read"]=function read(filename,binary){if(!nodeFS)nodeFS=require("fs");if(!nodePath)nodePath=require("path");filename=nodePath["normalize"](filename);var ret=nodeFS["readFileSync"](filename);return binary?ret:ret.toString()};Module["readBinary"]=function readBinary(filename){var ret=Module["read"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};Module["load"]=function load(f){globalEval(read(f))};if(!Module["thisProgram"]){if(process["argv"].length>1){Module["thisProgram"]=process["argv"][1].replace(/\\/g,"/")}else{Module["thisProgram"]="unknown-program"}}Module["arguments"]=process["argv"].slice(2);if(typeof module!=="undefined"){module["exports"]=Module}process["on"]("uncaughtException",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));Module["inspect"]=(function(){return"[Emscripten Module object]"})}else if(ENVIRONMENT_IS_SHELL){if(!Module["print"])Module["print"]=print;if(typeof printErr!="undefined")Module["printErr"]=printErr;if(typeof read!="undefined"){Module["read"]=read}else{Module["read"]=function read(){throw"no read() available"}}Module["readBinary"]=function readBinary(f){if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}var data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){Module["arguments"]=scriptArgs}else if(typeof arguments!="undefined"){Module["arguments"]=arguments}if(typeof quit==="function"){Module["quit"]=(function(status,toThrow){quit(status)})}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module["read"]=function read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module["readBinary"]=function read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return xhr.response}}Module["readAsync"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response)}else{onerror()}};xhr.onerror=onerror;xhr.send(null)};if(typeof arguments!="undefined"){Module["arguments"]=arguments}if(typeof console!=="undefined"){if(!Module["print"])Module["print"]=function print(x){console.log(x)};if(!Module["printErr"])Module["printErr"]=function printErr(x){console.warn(x)}}else{var TRY_USE_DUMP=false;if(!Module["print"])Module["print"]=TRY_USE_DUMP&&typeof dump!=="undefined"?(function(x){dump(x)}):(function(x){})}if(ENVIRONMENT_IS_WORKER){Module["load"]=importScripts}if(typeof Module["setWindowTitle"]==="undefined"){Module["setWindowTitle"]=(function(title){document.title=title})}}else{throw"Unknown runtime environment. Where are we?"}function globalEval(x){eval.call(null,x)}if(!Module["load"]&&Module["read"]){Module["load"]=function load(f){globalEval(Module["read"](f))}}if(!Module["print"]){Module["print"]=(function(){})}if(!Module["printErr"]){Module["printErr"]=Module["print"]}if(!Module["arguments"]){Module["arguments"]=[]}if(!Module["thisProgram"]){Module["thisProgram"]="./this.program"}if(!Module["quit"]){Module["quit"]=(function(status,toThrow){throw toThrow})}Module.print=Module["print"];Module.printErr=Module["printErr"];Module["preRun"]=[];Module["postRun"]=[];for(var key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var Runtime={setTempRet0:(function(value){tempRet0=value;return value}),getTempRet0:(function(){return tempRet0}),stackSave:(function(){return STACKTOP}),stackRestore:(function(stackTop){STACKTOP=stackTop}),getNativeTypeSize:(function(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return Runtime.QUANTUM_SIZE}else if(type[0]==="i"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}),getNativeFieldSize:(function(type){return Math.max(Runtime.getNativeTypeSize(type),Runtime.QUANTUM_SIZE)}),STACK_ALIGN:16,prepVararg:(function(ptr,type){if(type==="double"||type==="i64"){if(ptr&7){assert((ptr&7)===4);ptr+=4}}else{assert((ptr&3)===0)}return ptr}),getAlignSize:(function(type,size,vararg){if(!vararg&&(type=="i64"||type=="double"))return 8;if(!type)return Math.min(size,8);return Math.min(size||(type?Runtime.getNativeFieldSize(type):0),Runtime.QUANTUM_SIZE)}),dynCall:(function(sig,ptr,args){if(args&&args.length){return Module["dynCall_"+sig].apply(null,[ptr].concat(args))}else{return Module["dynCall_"+sig].call(null,ptr)}}),functionPointers:[],addFunction:(function(func){for(var i=0;i<Runtime.functionPointers.length;i++){if(!Runtime.functionPointers[i]){Runtime.functionPointers[i]=func;return 2*(1+i)}}throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS."}),removeFunction:(function(index){Runtime.functionPointers[(index-2)/2]=null}),warnOnce:(function(text){if(!Runtime.warnOnce.shown)Runtime.warnOnce.shown={};if(!Runtime.warnOnce.shown[text]){Runtime.warnOnce.shown[text]=1;Module.printErr(text)}}),funcWrappers:{},getFuncWrapper:(function(func,sig){assert(sig);if(!Runtime.funcWrappers[sig]){Runtime.funcWrappers[sig]={}}var sigCache=Runtime.funcWrappers[sig];if(!sigCache[func]){if(sig.length===1){sigCache[func]=function dynCall_wrapper(){return Runtime.dynCall(sig,func)}}else if(sig.length===2){sigCache[func]=function dynCall_wrapper(arg){return Runtime.dynCall(sig,func,[arg])}}else{sigCache[func]=function dynCall_wrapper(){return Runtime.dynCall(sig,func,Array.prototype.slice.call(arguments))}}}return sigCache[func]}),getCompilerSetting:(function(name){throw"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work"}),stackAlloc:(function(size){var ret=STACKTOP;STACKTOP=STACKTOP+size|0;STACKTOP=STACKTOP+15&-16;return ret}),staticAlloc:(function(size){var ret=STATICTOP;STATICTOP=STATICTOP+size|0;STATICTOP=STATICTOP+15&-16;return ret}),dynamicAlloc:(function(size){var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=(ret+size+15|0)&-16;HEAP32[DYNAMICTOP_PTR>>2]=end;if(end>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){HEAP32[DYNAMICTOP_PTR>>2]=ret;return 0}}return ret}),alignMemory:(function(size,quantum){var ret=size=Math.ceil(size/(quantum?quantum:16))*(quantum?quantum:16);return ret}),makeBigInt:(function(low,high,unsigned){var ret=unsigned?+(low>>>0)+ +(high>>>0)*4294967296:+(low>>>0)+ +(high|0)*4294967296;return ret}),GLOBAL_BASE:1024,QUANTUM_SIZE:4,__dummy__:0};Module["Runtime"]=Runtime;var ABORT=0;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}function getCFunc(ident){var func=Module["_"+ident];if(!func){try{func=eval("_"+ident)}catch(e){}}assert(func,"Cannot call unknown function "+ident+" (perhaps LLVM optimizations or closure removed it?)");return func}var cwrap,ccall;((function(){var JSfuncs={"stackSave":(function(){Runtime.stackSave()}),"stackRestore":(function(){Runtime.stackRestore()}),"arrayToC":(function(arr){var ret=Runtime.stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),"stringToC":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=Runtime.stackAlloc(len);stringToUTF8(str,ret,len)}return ret})};var toC={"string":JSfuncs["stringToC"],"array":JSfuncs["arrayToC"]};ccall=function ccallFunc(ident,returnType,argTypes,args,opts){var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=Runtime.stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);if(returnType==="string")ret=Pointer_stringify(ret);if(stack!==0){if(opts&&opts.async){EmterpreterAsync.asyncFinalizers.push((function(){Runtime.stackRestore(stack)}));return}Runtime.stackRestore(stack)}return ret};var sourceRegex=/^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;function parseJSFunc(jsfunc){var parsed=jsfunc.toString().match(sourceRegex).slice(1);return{arguments:parsed[0],body:parsed[1],returnValue:parsed[2]}}var JSsource=null;function ensureJSsource(){if(!JSsource){JSsource={};for(var fun in JSfuncs){if(JSfuncs.hasOwnProperty(fun)){JSsource[fun]=parseJSFunc(JSfuncs[fun])}}}}cwrap=function cwrap(ident,returnType,argTypes){argTypes=argTypes||[];var cfunc=getCFunc(ident);var numericArgs=argTypes.every((function(type){return type==="number"}));var numericRet=returnType!=="string";if(numericRet&&numericArgs){return cfunc}var argNames=argTypes.map((function(x,i){return"$"+i}));var funcstr="(function("+argNames.join(",")+") {";var nargs=argTypes.length;if(!numericArgs){ensureJSsource();funcstr+="var stack = "+JSsource["stackSave"].body+";";for(var i=0;i<nargs;i++){var arg=argNames[i],type=argTypes[i];if(type==="number")continue;var convertCode=JSsource[type+"ToC"];funcstr+="var "+convertCode.arguments+" = "+arg+";";funcstr+=convertCode.body+";";funcstr+=arg+"=("+convertCode.returnValue+");"}}var cfuncname=parseJSFunc((function(){return cfunc})).returnValue;funcstr+="var ret = "+cfuncname+"("+argNames.join(",")+");";if(!numericRet){var strgfy=parseJSFunc((function(){return Pointer_stringify})).returnValue;funcstr+="ret = "+strgfy+"(ret);"}if(!numericArgs){ensureJSsource();funcstr+=JSsource["stackRestore"].body.replace("()","(stack)")+";"}funcstr+="return ret})";return eval(funcstr)}}))();Module["ccall"]=ccall;Module["cwrap"]=cwrap;function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}Module["setValue"]=setValue;function getValue(ptr,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":return HEAP8[ptr>>0];case"i8":return HEAP8[ptr>>0];case"i16":return HEAP16[ptr>>1];case"i32":return HEAP32[ptr>>2];case"i64":return HEAP32[ptr>>2];case"float":return HEAPF32[ptr>>2];case"double":return HEAPF64[ptr>>3];default:abort("invalid type for setValue: "+type)}return null}Module["getValue"]=getValue;var ALLOC_NORMAL=0;var ALLOC_STACK=1;var ALLOC_STATIC=2;var ALLOC_DYNAMIC=3;var ALLOC_NONE=4;Module["ALLOC_NORMAL"]=ALLOC_NORMAL;Module["ALLOC_STACK"]=ALLOC_STACK;Module["ALLOC_STATIC"]=ALLOC_STATIC;Module["ALLOC_DYNAMIC"]=ALLOC_DYNAMIC;Module["ALLOC_NONE"]=ALLOC_NONE;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab==="number"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types==="string"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[typeof _malloc==="function"?_malloc:Runtime.staticAlloc,Runtime.stackAlloc,Runtime.staticAlloc,Runtime.dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var ptr=ret,stop;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType==="i8"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];if(typeof curr==="function"){curr=Runtime.getFunctionIndex(curr)}type=singleType||types[i];if(type===0){i++;continue}if(type=="i64")type="i32";setValue(ret+i,curr,type);if(previousType!==type){typeSize=Runtime.getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}Module["allocate"]=allocate;function getMemory(size){if(!staticSealed)return Runtime.staticAlloc(size);if(!runtimeInitialized)return Runtime.dynamicAlloc(size);return _malloc(size)}Module["getMemory"]=getMemory;function Pointer_stringify(ptr,length){if(length===0||!ptr)return"";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret="";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return Module["UTF8ToString"](ptr)}Module["Pointer_stringify"]=Pointer_stringify;function AsciiToString(ptr){var str="";while(1){var ch=HEAP8[ptr++>>0];if(!ch)return str;str+=String.fromCharCode(ch)}}Module["AsciiToString"]=AsciiToString;function stringToAscii(str,outPtr){return writeAsciiToMemory(str,outPtr,false)}Module["stringToAscii"]=stringToAscii;var UTF8Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str="";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}Module["UTF8ArrayToString"]=UTF8ArrayToString;function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}Module["UTF8ToString"]=UTF8ToString;function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}Module["stringToUTF8Array"]=stringToUTF8Array;function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}Module["stringToUTF8"]=stringToUTF8;function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}Module["lengthBytesUTF8"]=lengthBytesUTF8;var UTF16Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf-16le"):undefined;function demangle(func){var __cxa_demangle_func=Module["___cxa_demangle"]||Module["__cxa_demangle"];if(__cxa_demangle_func){try{var s=func.substr(1);var len=lengthBytesUTF8(s)+1;var buf=_malloc(len);stringToUTF8(s,buf,len);var status=_malloc(4);var ret=__cxa_demangle_func(buf,0,0,status);if(getValue(status,"i32")===0&&ret){return Pointer_stringify(ret)}}catch(e){}finally{if(buf)_free(buf);if(status)_free(status);if(ret)_free(ret)}return func}Runtime.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");return func}function demangleAll(text){var regex=/__Z[\w\d_]+/g;return text.replace(regex,(function(x){var y=demangle(x);return x===y?x:x+" ["+y+"]"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return"(no stack trace available)"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module["extraStackTrace"])js+="\n"+Module["extraStackTrace"]();return demangleAll(js)}Module["stackTrace"]=stackTrace;var WASM_PAGE_SIZE=65536;var ASMJS_PAGE_SIZE=16777216;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var HEAP;var buffer;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBuffer(buf){Module["buffer"]=buffer=buf}function updateGlobalBufferViews(){Module["HEAP8"]=HEAP8=new Int8Array(buffer);Module["HEAP16"]=HEAP16=new Int16Array(buffer);Module["HEAP32"]=HEAP32=new Int32Array(buffer);Module["HEAPU8"]=HEAPU8=new Uint8Array(buffer);Module["HEAPU16"]=HEAPU16=new Uint16Array(buffer);Module["HEAPU32"]=HEAPU32=new Uint32Array(buffer);Module["HEAPF32"]=HEAPF32=new Float32Array(buffer);Module["HEAPF64"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function abortOnCannotGrowMemory(){abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+TOTAL_MEMORY+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")}function enlargeMemory(){abortOnCannotGrowMemory()}var TOTAL_STACK=Module["TOTAL_STACK"]||5242880;var TOTAL_MEMORY=Module["TOTAL_MEMORY"]||16777216;if(TOTAL_MEMORY<TOTAL_STACK)Module.printErr("TOTAL_MEMORY should be larger than TOTAL_STACK, was "+TOTAL_MEMORY+"! (TOTAL_STACK="+TOTAL_STACK+")");if(Module["buffer"]){buffer=Module["buffer"]}else{if(typeof WebAssembly==="object"&&typeof WebAssembly.Memory==="function"){Module["wasmMemory"]=new WebAssembly.Memory({"initial":TOTAL_MEMORY/WASM_PAGE_SIZE,"maximum":TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=Module["wasmMemory"].buffer}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}HEAP32[0]=1668509029;HEAP16[1]=25459;if(HEAPU8[2]!==115||HEAPU8[3]!==99)throw"Runtime error: expected the system to be little-endian!";Module["HEAP"]=HEAP;Module["buffer"]=buffer;Module["HEAP8"]=HEAP8;Module["HEAP16"]=HEAP16;Module["HEAP32"]=HEAP32;Module["HEAPU8"]=HEAPU8;Module["HEAPU16"]=HEAPU16;Module["HEAPU32"]=HEAPU32;Module["HEAPF32"]=HEAPF32;Module["HEAPF64"]=HEAPF64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Module["dynCall_v"](func)}else{Module["dynCall_vi"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}Module["addOnPreRun"]=addOnPreRun;function addOnInit(cb){__ATINIT__.unshift(cb)}Module["addOnInit"]=addOnInit;function addOnPreMain(cb){__ATMAIN__.unshift(cb)}Module["addOnPreMain"]=addOnPreMain;function addOnExit(cb){__ATEXIT__.unshift(cb)}Module["addOnExit"]=addOnExit;function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}Module["addOnPostRun"]=addOnPostRun;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}Module["intArrayFromString"]=intArrayFromString;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){chr&=255}ret.push(String.fromCharCode(chr))}return ret.join("")}Module["intArrayToString"]=intArrayToString;function writeStringToMemory(string,buffer,dontAddNull){Runtime.warnOnce("writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!");var lastChar,end;if(dontAddNull){end=buffer+lengthBytesUTF8(string);lastChar=HEAP8[end]}stringToUTF8(string,buffer,Infinity);if(dontAddNull)HEAP8[end]=lastChar}Module["writeStringToMemory"]=writeStringToMemory;function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}Module["writeArrayToMemory"]=writeArrayToMemory;function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}Module["writeAsciiToMemory"]=writeAsciiToMemory;if(!Math["imul"]||Math["imul"](4294967295,5)!==-5)Math["imul"]=function imul(a,b){var ah=a>>>16;var al=a&65535;var bh=b>>>16;var bl=b&65535;return al*bl+(ah*bl+al*bh<<16)|0};Math.imul=Math["imul"];if(!Math["fround"]){var froundBuffer=new Float32Array(1);Math["fround"]=(function(x){froundBuffer[0]=x;return froundBuffer[0]})}Math.fround=Math["fround"];if(!Math["clz32"])Math["clz32"]=(function(x){x=x>>>0;for(var i=0;i<32;i++){if(x&1<<31-i)return i}return 32});Math.clz32=Math["clz32"];if(!Math["trunc"])Math["trunc"]=(function(x){return x<0?Math.ceil(x):Math.floor(x)});Math.trunc=Math["trunc"];var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_round=Math.round;var Math_min=Math.min;var Math_clz32=Math.clz32;var Math_trunc=Math.trunc;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}Module["addRunDependency"]=addRunDependency;function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["removeRunDependency"]=removeRunDependency;Module["preloadedImages"]={};Module["preloadedAudios"]={};var memoryInitializer=null;function integrateWasmJS(Module){var method=Module["wasmJSMethod"]||"native-wasm";Module["wasmJSMethod"]=method;var wasmTextFile=Module["wasmTextFile"]||"emul.wast";var wasmBinaryFile=Module["wasmBinaryFile"]||"emul.wasm";var asmjsCodeFile=Module["asmjsCodeFile"]||"emul.temp.asm.js";var wasmPageSize=64*1024;var asm2wasmImports={"f64-rem":(function(x,y){return x%y}),"f64-to-int":(function(x){return x|0}),"i32s-div":(function(x,y){return(x|0)/(y|0)|0}),"i32u-div":(function(x,y){return(x>>>0)/(y>>>0)>>>0}),"i32s-rem":(function(x,y){return(x|0)%(y|0)|0}),"i32u-rem":(function(x,y){return(x>>>0)%(y>>>0)>>>0}),"debugger":(function(){debugger})};var info={"global":null,"env":null,"asm2wasm":asm2wasmImports,"parent":Module};var exports=null;function lookupImport(mod,base){var lookup=info;if(mod.indexOf(".")<0){lookup=(lookup||{})[mod]}else{var parts=mod.split(".");lookup=(lookup||{})[parts[0]];lookup=(lookup||{})[parts[1]]}if(base){lookup=(lookup||{})[base]}if(lookup===undefined){abort("bad lookupImport to ("+mod+")."+base)}return lookup}function mergeMemory(newBuffer){var oldBuffer=Module["buffer"];if(newBuffer.byteLength<oldBuffer.byteLength){Module["printErr"]("the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here")}var oldView=new Int8Array(oldBuffer);var newView=new Int8Array(newBuffer);if(!memoryInitializer){oldView.set(newView.subarray(Module["STATIC_BASE"],Module["STATIC_BASE"]+Module["STATIC_BUMP"]),Module["STATIC_BASE"])}newView.set(oldView);updateGlobalBuffer(newBuffer);updateGlobalBufferViews()}var WasmTypes={none:0,i32:1,i64:2,f32:3,f64:4};function fixImports(imports){if(!0)return imports;var ret={};for(var i in imports){var fixed=i;if(fixed[0]=="_")fixed=fixed.substr(1);ret[fixed]=imports[i]}return ret}function getBinary(){var binary;if(Module["wasmBinary"]){binary=Module["wasmBinary"];binary=new Uint8Array(binary)}else if(Module["readBinary"]){binary=Module["readBinary"](wasmBinaryFile)}else{throw"on the web, we need the wasm binary to be preloaded and set on Module['wasmBinary']. emcc.py will do that for you when generating HTML (but not JS)"}return binary}function getBinaryPromise(){if(!Module["wasmBinary"]&&typeof fetch==="function"){return fetch(wasmBinaryFile).then((function(response){return response.arrayBuffer()}))}return new Promise((function(resolve,reject){resolve(getBinary())}))}function doJustAsm(global,env,providedBuffer){if(typeof Module["asm"]!=="function"||Module["asm"]===methodHandler){if(!Module["asmPreload"]){eval(Module["read"](asmjsCodeFile))}else{Module["asm"]=Module["asmPreload"]}}if(typeof Module["asm"]!=="function"){Module["printErr"]("asm evalling did not set the module properly");return false}return Module["asm"](global,env,providedBuffer)}function doNativeWasm(global,env,providedBuffer){if(typeof WebAssembly!=="object"){Module["printErr"]("no native wasm support detected");return false}if(!(Module["wasmMemory"]instanceof WebAssembly.Memory)){Module["printErr"]("no native wasm Memory in use");return false}env["memory"]=Module["wasmMemory"];info["global"]={"NaN":NaN,"Infinity":Infinity};info["global.Math"]=global.Math;info["env"]=env;function receiveInstance(instance){exports=instance.exports;if(exports.memory)mergeMemory(exports.memory);Module["asm"]=exports;Module["usingWasm"]=true;removeRunDependency("wasm-instantiate")}addRunDependency("wasm-instantiate");if(Module["instantiateWasm"]){try{return Module["instantiateWasm"](info,receiveInstance)}catch(e){Module["printErr"]("Module.instantiateWasm callback failed with error: "+e);return false}}Module["printErr"]("asynchronously preparing wasm");getBinaryPromise().then((function(binary){return WebAssembly.instantiate(binary,info)})).then((function(output){receiveInstance(output.instance)})).catch((function(reason){Module["printErr"]("failed to asynchronously prepare wasm: "+reason);Module["quit"](1,reason)}));return{}}function doWasmPolyfill(global,env,providedBuffer,method){if(typeof WasmJS!=="function"){Module["printErr"]("WasmJS not detected - polyfill not bundled?");return false}var wasmJS=WasmJS({});wasmJS["outside"]=Module;wasmJS["info"]=info;wasmJS["lookupImport"]=lookupImport;assert(providedBuffer===Module["buffer"]);info.global=global;info.env=env;assert(providedBuffer===Module["buffer"]);env["memory"]=providedBuffer;assert(env["memory"]instanceof ArrayBuffer);wasmJS["providedTotalMemory"]=Module["buffer"].byteLength;var code;if(method==="interpret-binary"){code=getBinary()}else{code=Module["read"](method=="interpret-asm2wasm"?asmjsCodeFile:wasmTextFile)}var temp;if(method=="interpret-asm2wasm"){temp=wasmJS["_malloc"](code.length+1);wasmJS["writeAsciiToMemory"](code,temp);wasmJS["_load_asm2wasm"](temp)}else if(method==="interpret-s-expr"){temp=wasmJS["_malloc"](code.length+1);wasmJS["writeAsciiToMemory"](code,temp);wasmJS["_load_s_expr2wasm"](temp)}else if(method==="interpret-binary"){temp=wasmJS["_malloc"](code.length);wasmJS["HEAPU8"].set(code,temp);wasmJS["_load_binary2wasm"](temp,code.length)}else{throw"what? "+method}wasmJS["_free"](temp);wasmJS["_instantiate"](temp);if(Module["newBuffer"]){mergeMemory(Module["newBuffer"]);Module["newBuffer"]=null}exports=wasmJS["asmExports"];return exports}Module["asmPreload"]=Module["asm"];Module["reallocBuffer"]=(function(size){var PAGE_MULTIPLE=Module["usingWasm"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;size=alignUp(size,PAGE_MULTIPLE);var old=Module["buffer"];var oldSize=old.byteLength;if(Module["usingWasm"]){try{var result=Module["wasmMemory"].grow((size-oldSize)/wasmPageSize);if(result!==(-1|0)){return Module["buffer"]=Module["wasmMemory"].buffer}else{return null}}catch(e){return null}}else{exports["__growWasmMemory"]((size-oldSize)/wasmPageSize);return Module["buffer"]!==old?Module["buffer"]:null}});Module["asm"]=(function(global,env,providedBuffer){global=fixImports(global);env=fixImports(env);if(!env["table"]){var TABLE_SIZE=Module["wasmTableSize"];if(TABLE_SIZE===undefined)TABLE_SIZE=1024;var MAX_TABLE_SIZE=Module["wasmMaxTableSize"];if(typeof WebAssembly==="object"&&typeof WebAssembly.Table==="function"){if(MAX_TABLE_SIZE!==undefined){env["table"]=new WebAssembly.Table({"initial":TABLE_SIZE,"maximum":MAX_TABLE_SIZE,"element":"anyfunc"})}else{env["table"]=new WebAssembly.Table({"initial":TABLE_SIZE,element:"anyfunc"})}}else{env["table"]=new Array(TABLE_SIZE)}Module["wasmTable"]=env["table"]}if(!env["memoryBase"]){env["memoryBase"]=Module["STATIC_BASE"]}if(!env["tableBase"]){env["tableBase"]=0}var exports;var methods=method.split(",");for(var i=0;i<methods.length;i++){var curr=methods[i];Module["printErr"]("trying binaryen method: "+curr);if(curr==="native-wasm"){if(exports=doNativeWasm(global,env,providedBuffer))break}else if(curr==="asmjs"){if(exports=doJustAsm(global,env,providedBuffer))break}else if(curr==="interpret-asm2wasm"||curr==="interpret-s-expr"||curr==="interpret-binary"){if(exports=doWasmPolyfill(global,env,providedBuffer,curr))break}else{throw"bad method: "+curr}}if(!exports)throw"no binaryen method succeeded. consider enabling more options, like interpreting, if you want that: https://github.com/kripken/emscripten/wiki/WebAssembly#binaryen-methods";Module["printErr"]("binaryen method succeeded.");return exports});var methodHandler=Module["asm"]}integrateWasmJS(Module);var ASM_CONSTS=[];STATIC_BASE=1024;STATICTOP=STATIC_BASE+7488;__ATINIT__.push();memoryInitializer=Module["wasmJSMethod"].indexOf("asmjs")>=0||Module["wasmJSMethod"].indexOf("interpret-asm2wasm")>=0?"emul.html.mem":null;var STATIC_BUMP=7488;Module["STATIC_BASE"]=STATIC_BASE;Module["STATIC_BUMP"]=STATIC_BUMP;var tempDoublePtr=STATICTOP;STATICTOP+=16;function ___cxa_pure_virtual(){ABORT=true;throw"Pure virtual function called!"}Module["_memset"]=_memset;function _abort(){Module["abort"]()}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};function ___setErrNo(value){if(Module["___errno_location"])HEAP32[Module["___errno_location"]()>>2]=value;return value}var PATH={splitPath:(function(filename){var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1)}),normalizeArray:(function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1)}else if(last===".."){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up--;up){parts.unshift("..")}}return parts}),normalize:(function(path){var isAbsolute=path.charAt(0)==="/",trailingSlash=path.substr(-1)==="/";path=PATH.normalizeArray(path.split("/").filter((function(p){return!!p})),!isAbsolute).join("/");if(!path&&!isAbsolute){path="."}if(path&&trailingSlash){path+="/"}return(isAbsolute?"/":"")+path}),dirname:(function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return"."}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir}),basename:(function(path){if(path==="/")return"/";var lastSlash=path.lastIndexOf("/");if(lastSlash===-1)return path;return path.substr(lastSlash+1)}),extname:(function(path){return PATH.splitPath(path)[3]}),join:(function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join("/"))}),join2:(function(l,r){return PATH.normalize(l+"/"+r)}),resolve:(function(){var resolvedPath="",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=="string"){throw new TypeError("Arguments to path.resolve must be strings")}else if(!path){return""}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=path.charAt(0)==="/"}resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter((function(p){return!!p})),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||"."}),relative:(function(from,to){from=PATH.resolve(from).substr(1);to=PATH.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/")})};var TTY={ttys:[],init:(function(){}),shutdown:(function(){}),register:(function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)}),stream_ops:{open:(function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}stream.tty=tty;stream.seekable=false}),close:(function(stream){stream.tty.ops.flush(stream.tty)}),flush:(function(stream){stream.tty.ops.flush(stream.tty)}),read:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}for(var i=0;i<length;i++){try{stream.tty.ops.put_char(stream.tty,buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})},default_tty_ops:{get_char:(function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=new Buffer(BUFSIZE);var bytesRead=0;var isPosixPlatform=process.platform!="win32";var fd=process.stdin.fd;if(isPosixPlatform){var usingDevice=false;try{fd=fs.openSync("/dev/stdin","r");usingDevice=true}catch(e){}}try{bytesRead=fs.readSync(fd,buf,0,BUFSIZE,null)}catch(e){if(e.toString().indexOf("EOF")!=-1)bytesRead=0;else throw e}if(usingDevice){fs.closeSync(fd)}if(bytesRead>0){result=buf.slice(0,bytesRead).toString("utf-8")}else{result=null}}else if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ");if(result!==null){result+="\n"}}else if(typeof readline=="function"){result=readline();if(result!==null){result+="\n"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()}),put_char:(function(tty,val){if(val===null||val===10){Module["print"](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module["print"](UTF8ArrayToString(tty.output,0));tty.output=[]}})},default_tty1_ops:{put_char:(function(tty,val){if(val===null||val===10){Module["printErr"](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module["printErr"](UTF8ArrayToString(tty.output,0));tty.output=[]}})}};var MEMFS={ops_table:null,mount:(function(mount){return MEMFS.createNode(null,"/",16384|511,0)}),createNode:(function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node}),getFileDataAsRegularArray:(function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents}),getFileDataAsTypedArray:(function(node){if(!node.contents)return new Uint8Array;if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)}),expandFileStorage:(function(node,newCapacity){if(node.contents&&node.contents.subarray&&newCapacity>node.contents.length){node.contents=MEMFS.getFileDataAsRegularArray(node);node.usedBytes=node.contents.length}if(!node.contents||node.contents.subarray){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return}if(!node.contents&&newCapacity>0)node.contents=[];while(node.contents.length<newCapacity)node.contents.push(0)}),resizeFileStorage:(function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize}),node_ops:{getattr:(function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}}),lookup:(function(parent,name){throw FS.genericErrors[ERRNO_CODES.ENOENT]}),mknod:(function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)}),rename:(function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir}),unlink:(function(parent,name){delete parent.contents[name]}),rmdir:(function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}delete parent.contents[name]}),readdir:(function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node}),readlink:(function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return node.link})},stream_ops:{read:(function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size}),write:(function(stream,buffer,offset,length,position,canOwn){if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position}),allocate:(function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(ERRNO_CODES.ENOMEM)}buffer.set(contents,ptr)}return{ptr:ptr,allocated:allocated}}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0})}};var IDBFS={dbs:{},indexedDB:(function(){if(typeof indexedDB!=="undefined")return indexedDB;var ret=null;if(typeof window==="object")ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,"IDBFS used, but indexedDB not supported");return ret}),DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:(function(mount){return MEMFS.mount.apply(null,arguments)}),syncfs:(function(mount,populate,callback){IDBFS.getLocalSet(mount,(function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,(function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback)}))}))}),getDB:(function(name,callback){var db=IDBFS.dbs[name];if(db){return callback(null,db)}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION)}catch(e){return callback(e)}if(!req){return callback("Unable to connect to IndexedDB")}req.onupgradeneeded=(function(e){var db=e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME)}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME)}if(!fileStore.indexNames.contains("timestamp")){fileStore.createIndex("timestamp","timestamp",{unique:false})}});req.onsuccess=(function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),getLocalSet:(function(mount,callback){var entries={};function isRealDir(p){return p!=="."&&p!==".."}function toAbsolute(root){return(function(p){return PATH.join2(root,p)})}var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))}entries[path]={timestamp:stat.mtime}}return callback(null,{type:"local",entries:entries})}),getRemoteSet:(function(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,(function(err,db){if(err)return callback(err);var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readonly");transaction.onerror=(function(e){callback(this.error);e.preventDefault()});var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index("timestamp");index.openKeyCursor().onsuccess=(function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:"remote",db:db,entries:entries})}entries[cursor.primaryKey]={timestamp:cursor.key};cursor.continue()})}))}),loadLocalEntry:(function(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){return callback(null,{timestamp:stat.mtime,mode:stat.mode})}else if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents})}else{return callback(new Error("node type not supported"))}}),storeLocalEntry:(function(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode)}else if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{encoding:"binary",canOwn:true})}else{return callback(new Error("node type not supported"))}FS.chmod(path,entry.mode);FS.utime(path,entry.timestamp,entry.timestamp)}catch(e){return callback(e)}callback(null)}),removeLocalEntry:(function(path,callback){try{var lookup=FS.lookupPath(path);var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path)}else if(FS.isFile(stat.mode)){FS.unlink(path)}}catch(e){return callback(e)}callback(null)}),loadRemoteEntry:(function(store,path,callback){var req=store.get(path);req.onsuccess=(function(event){callback(null,event.target.result)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),storeRemoteEntry:(function(store,path,entry,callback){var req=store.put(entry,path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),removeRemoteEntry:(function(store,path,callback){var req=store.delete(path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),reconcile:(function(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach((function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++}}));var remove=[];Object.keys(dst.entries).forEach((function(key){var e=dst.entries[key];var e2=src.entries[key];if(!e2){remove.push(key);total++}}));if(!total){return callback(null)}var completed=0;var db=src.type==="remote"?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readwrite");var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err){if(!done.errored){done.errored=true;return callback(err)}return}if(++completed>=total){return callback(null)}}transaction.onerror=(function(e){done(this.error);e.preventDefault()});create.sort().forEach((function(path){if(dst.type==="local"){IDBFS.loadRemoteEntry(store,path,(function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done)}))}else{IDBFS.loadLocalEntry(path,(function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done)}))}}));remove.sort().reverse().forEach((function(path){if(dst.type==="local"){IDBFS.removeLocalEntry(path,done)}else{IDBFS.removeRemoteEntry(store,path,done)}}))})};var NODEFS={isWindows:false,staticInit:(function(){NODEFS.isWindows=!!process.platform.match(/^win/)}),mount:(function(mount){assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null,"/",NODEFS.getMode(mount.opts.root),0)}),createNode:(function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node}),getMode:(function(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&146)>>1}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return stat.mode}),realPath:(function(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts)}),flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:(function(flags){flags&=~2097152;flags&=~2048;flags&=~32768;flags&=~524288;if(flags in NODEFS.flagsToPermissionStringMap){return NODEFS.flagsToPermissionStringMap[flags]}else{throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}}),node_ops:{getattr:(function(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}}),setattr:(function(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),lookup:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode)}),mknod:(function(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,"",{mode:node.mode})}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return node}),rename:(function(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),unlink:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),rmdir:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readdir:(function(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),symlink:(function(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readlink:(function(node){var path=NODEFS.realPath(node);try{path=fs.readlinkSync(path);path=NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root),path);return path}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}})},stream_ops:{open:(function(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsToPermissionString(stream.flags))}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),close:(function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),read:(function(stream,buffer,offset,length,position){if(length===0)return 0;var nbuffer=new Buffer(length);var res;try{res=fs.readSync(stream.nfd,nbuffer,0,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(res>0){for(var i=0;i<res;i++){buffer[offset+i]=nbuffer[i]}}return res}),write:(function(stream,buffer,offset,length,position){var nbuffer=new Buffer(buffer.subarray(offset,offset+length));var res;try{res=fs.writeSync(stream.nfd,nbuffer,0,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}return res}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:(function(mount){assert(ENVIRONMENT_IS_WORKER);if(!WORKERFS.reader)WORKERFS.reader=new FileReaderSync;var root=WORKERFS.createNode(null,"/",WORKERFS.DIR_MODE,0);var createdParents={};function ensureParent(path){var parts=path.split("/");var parent=root;for(var i=0;i<parts.length-1;i++){var curr=parts.slice(0,i+1).join("/");if(!createdParents[curr]){createdParents[curr]=WORKERFS.createNode(parent,parts[i],WORKERFS.DIR_MODE,0)}parent=createdParents[curr]}return parent}function base(path){var parts=path.split("/");return parts[parts.length-1]}Array.prototype.forEach.call(mount.opts["files"]||[],(function(file){WORKERFS.createNode(ensureParent(file.name),base(file.name),WORKERFS.FILE_MODE,0,file,file.lastModifiedDate)}));(mount.opts["blobs"]||[]).forEach((function(obj){WORKERFS.createNode(ensureParent(obj["name"]),base(obj["name"]),WORKERFS.FILE_MODE,0,obj["data"])}));(mount.opts["packages"]||[]).forEach((function(pack){pack["metadata"].files.forEach((function(file){var name=file.filename.substr(1);WORKERFS.createNode(ensureParent(name),base(name),WORKERFS.FILE_MODE,0,pack["blob"].slice(file.start,file.end))}))}));return root}),createNode:(function(parent,name,mode,dev,contents,mtime){var node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=WORKERFS.node_ops;node.stream_ops=WORKERFS.stream_ops;node.timestamp=(mtime||new Date).getTime();assert(WORKERFS.FILE_MODE!==WORKERFS.DIR_MODE);if(mode===WORKERFS.FILE_MODE){node.size=contents.size;node.contents=contents}else{node.size=4096;node.contents={}}if(parent){parent.contents[name]=node}return node}),node_ops:{getattr:(function(node){return{dev:1,ino:undefined,mode:node.mode,nlink:1,uid:0,gid:0,rdev:undefined,size:node.size,atime:new Date(node.timestamp),mtime:new Date(node.timestamp),ctime:new Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)}}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}}),lookup:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}),mknod:(function(parent,name,mode,dev){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rename:(function(oldNode,newDir,newName){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),unlink:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rmdir:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readdir:(function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newName,oldPath){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readlink:(function(node){throw new FS.ErrnoError(ERRNO_CODES.EPERM)})},stream_ops:{read:(function(stream,buffer,offset,length,position){if(position>=stream.node.size)return 0;var chunk=stream.node.contents.slice(position,position+length);var ab=WORKERFS.reader.readAsArrayBuffer(chunk);buffer.set(new Uint8Array(ab),offset);return chunk.size}),write:(function(stream,buffer,offset,length,position){throw new FS.ErrnoError(ERRNO_CODES.EIO)}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};STATICTOP+=16;STATICTOP+=16;STATICTOP+=16;var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:(function(e){if(!(e instanceof FS.ErrnoError))throw e+" : "+stackTrace();return ___setErrNo(e.errno)}),lookupPath:(function(path,opts){path=PATH.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:"",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}var parts=PATH.normalizeArray(path.split("/").filter((function(p){return!!p})),false);var current=FS.root;var current_path="/";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}}}}return{path:current_path,node:current}}),getPath:(function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=="/"?mount+"/"+path:mount+path}path=path?node.name+"/"+path:node.name;node=node.parent}}),hashName:(function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length}),hashAddNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node}),hashRemoveNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}}),lookupNode:(function(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)}),createNode:(function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=(function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev});FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:(function(){return(this.mode&readMode)===readMode}),set:(function(val){val?this.mode|=readMode:this.mode&=~readMode})},write:{get:(function(){return(this.mode&writeMode)===writeMode}),set:(function(val){val?this.mode|=writeMode:this.mode&=~writeMode})},isFolder:{get:(function(){return FS.isDir(this.mode)})},isDevice:{get:(function(){return FS.isChrdev(this.mode)})}})}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node}),destroyNode:(function(node){FS.hashRemoveNode(node)}),isRoot:(function(node){return node===node.parent}),isMountpoint:(function(node){return!!node.mounted}),isFile:(function(mode){return(mode&61440)===32768}),isDir:(function(mode){return(mode&61440)===16384}),isLink:(function(mode){return(mode&61440)===40960}),isChrdev:(function(mode){return(mode&61440)===8192}),isBlkdev:(function(mode){return(mode&61440)===24576}),isFIFO:(function(mode){return(mode&61440)===4096}),isSocket:(function(mode){return(mode&49152)===49152}),flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:(function(str){var flags=FS.flagModes[str];if(typeof flags==="undefined"){throw new Error("Unknown file open mode: "+str)}return flags}),flagsToPermissionString:(function(flag){var perms=["r","w","rw"][flag&3];if(flag&512){perms+="w"}return perms}),nodePermissions:(function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf("r")!==-1&&!(node.mode&292)){return ERRNO_CODES.EACCES}else if(perms.indexOf("w")!==-1&&!(node.mode&146)){return ERRNO_CODES.EACCES}else if(perms.indexOf("x")!==-1&&!(node.mode&73)){return ERRNO_CODES.EACCES}return 0}),mayLookup:(function(dir){var err=FS.nodePermissions(dir,"x");if(err)return err;if(!dir.node_ops.lookup)return ERRNO_CODES.EACCES;return 0}),mayCreate:(function(dir,name){try{var node=FS.lookupNode(dir,name);return ERRNO_CODES.EEXIST}catch(e){}return FS.nodePermissions(dir,"wx")}),mayDelete:(function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var err=FS.nodePermissions(dir,"wx");if(err){return err}if(isdir){if(!FS.isDir(node.mode)){return ERRNO_CODES.ENOTDIR}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return ERRNO_CODES.EBUSY}}else{if(FS.isDir(node.mode)){return ERRNO_CODES.EISDIR}}return 0}),mayOpen:(function(node,flags){if(!node){return ERRNO_CODES.ENOENT}if(FS.isLink(node.mode)){return ERRNO_CODES.ELOOP}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!=="r"||flags&512){return ERRNO_CODES.EISDIR}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))}),MAX_OPEN_FDS:4096,nextfd:(function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(ERRNO_CODES.EMFILE)}),getStream:(function(fd){return FS.streams[fd]}),createStream:(function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=(function(){});FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:(function(){return this.node}),set:(function(val){this.node=val})},isRead:{get:(function(){return(this.flags&2097155)!==1})},isWrite:{get:(function(){return(this.flags&2097155)!==0})},isAppend:{get:(function(){return this.flags&1024})}})}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream}),closeStream:(function(fd){FS.streams[fd]=null}),chrdev_stream_ops:{open:(function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}}),llseek:(function(){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)})},major:(function(dev){return dev>>8}),minor:(function(dev){return dev&255}),makedev:(function(ma,mi){return ma<<8|mi}),registerDevice:(function(dev,ops){FS.devices[dev]={stream_ops:ops}}),getDevice:(function(dev){return FS.devices[dev]}),getMounts:(function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts}),syncfs:(function(populate,callback){if(typeof populate==="function"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){console.log("warning: "+FS.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(err){assert(FS.syncFSRequests>0);FS.syncFSRequests--;return callback(err)}function done(err){if(err){if(!done.errored){done.errored=true;return doCallback(err)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach((function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)}))}),mount:(function(type,opts,mountpoint){var root=mountpoint==="/";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot}),unmount:(function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach((function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}}));node.mounted=null;var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)}),lookup:(function(parent,name){return parent.node_ops.lookup(parent,name)}),mknod:(function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==="."||name===".."){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.mknod(parent,name,mode,dev)}),create:(function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)}),mkdir:(function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)}),mkdirTree:(function(path,mode){var dirs=path.split("/");var d="";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+="/"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=ERRNO_CODES.EEXIST)throw e}}}),mkdev:(function(path,mode,dev){if(typeof dev==="undefined"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)}),symlink:(function(oldpath,newpath){if(!PATH.resolve(oldpath)){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.symlink(parent,newname,oldpath)}),rename:(function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!old_dir||!new_dir)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(ERRNO_CODES.EXDEV)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH.relative(old_path,new_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}relative=PATH.relative(new_path,old_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,"w");if(err){throw new FS.ErrnoError(err)}}try{if(FS.trackingDelegate["willMovePath"]){FS.trackingDelegate["willMovePath"](old_path,new_path)}}catch(e){console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate["onMovePath"])FS.trackingDelegate["onMovePath"](old_path,new_path)}catch(e){console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}}),rmdir:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}}),readdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}return node.node_ops.readdir(node)}),unlink:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}}),readlink:(function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!link.node_ops.readlink){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return PATH.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))}),stat:(function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!node.node_ops.getattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return node.node_ops.getattr(node)}),lstat:(function(path){return FS.stat(path,true)}),chmod:(function(path,mode,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})}),lchmod:(function(path,mode){FS.chmod(path,mode,true)}),fchmod:(function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chmod(stream.node,mode)}),chown:(function(path,uid,gid,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{timestamp:Date.now()})}),lchown:(function(path,uid,gid){FS.chown(path,uid,gid,true)}),fchown:(function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chown(stream.node,uid,gid)}),truncate:(function(path,len){if(len<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.nodePermissions(node,"w");if(err){throw new FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})}),ftruncate:(function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}FS.truncate(stream.node,len)}),utime:(function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})}),open:(function(path,flags,mode,fd_start,fd_end){if(path===""){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}flags=typeof flags==="string"?FS.modeStringToFlags(flags):flags;mode=typeof mode==="undefined"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==="object"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(ERRNO_CODES.EEXIST)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}if(!created){var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module["logReadFiles"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;Module["printErr"]("read file: "+path)}}try{if(FS.trackingDelegate["onOpenFile"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate["onOpenFile"](path,trackingFlags)}}catch(e){console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: "+e.message)}return stream}),close:(function(stream){if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}}),llseek:(function(stream,offset,whence){if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position}),read:(function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.read){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var seeking=true;if(typeof position==="undefined"){position=stream.position;seeking=false}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead}),write:(function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.write){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(stream.flags&1024){FS.llseek(stream,0,2)}var seeking=true;if(typeof position==="undefined"){position=stream.position;seeking=false}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate["onWriteToFile"])FS.trackingDelegate["onWriteToFile"](stream.path)}catch(e){console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: "+e.message)}return bytesWritten}),allocate:(function(stream,offset,length){if(offset<0||length<=0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}stream.stream_ops.allocate(stream,offset,length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EACCES)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)}),munmap:(function(stream){return 0}),ioctl:(function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(ERRNO_CODES.ENOTTY)}return stream.stream_ops.ioctl(stream,cmd,arg)}),readFile:(function(path,opts){opts=opts||{};opts.flags=opts.flags||"r";opts.encoding=opts.encoding||"binary";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==="utf8"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding==="binary"){ret=buf}FS.close(stream);return ret}),writeFile:(function(path,data,opts){opts=opts||{};opts.flags=opts.flags||"w";opts.encoding=opts.encoding||"utf8";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var stream=FS.open(path,opts.flags,opts.mode);if(opts.encoding==="utf8"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,0,opts.canOwn)}else if(opts.encoding==="binary"){FS.write(stream,data,0,data.length,0,opts.canOwn)}FS.close(stream)}),cwd:(function(){return FS.currentPath}),chdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}var err=FS.nodePermissions(lookup.node,"x");if(err){throw new FS.ErrnoError(err)}FS.currentPath=lookup.path}),createDefaultDirectories:(function(){FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user")}),createDefaultDevices:(function(){FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:(function(){return 0}),write:(function(stream,buffer,offset,length,pos){return length})});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));var random_device;if(typeof crypto!=="undefined"){var randomBuffer=new Uint8Array(1);random_device=(function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]})}else if(ENVIRONMENT_IS_NODE){random_device=(function(){return require("crypto").randomBytes(1)[0]})}else{random_device=(function(){return Math.random()*256|0})}FS.createDevice("/dev","random",random_device);FS.createDevice("/dev","urandom",random_device);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp")}),createSpecialDirectories:(function(){FS.mkdir("/proc");FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd");FS.mount({mount:(function(){var node=FS.createNode("/proc/self","fd",16384|511,73);node.node_ops={lookup:(function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);var ret={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:(function(){return stream.path})}};ret.parent=ret;return ret})};return node})},{},"/proc/self/fd")}),createStandardStreams:(function(){if(Module["stdin"]){FS.createDevice("/dev","stdin",Module["stdin"])}else{FS.symlink("/dev/tty","/dev/stdin")}if(Module["stdout"]){FS.createDevice("/dev","stdout",null,Module["stdout"])}else{FS.symlink("/dev/tty","/dev/stdout")}if(Module["stderr"]){FS.createDevice("/dev","stderr",null,Module["stderr"])}else{FS.symlink("/dev/tty1","/dev/stderr")}var stdin=FS.open("/dev/stdin","r");assert(stdin.fd===0,"invalid handle for stdin ("+stdin.fd+")");var stdout=FS.open("/dev/stdout","w");assert(stdout.fd===1,"invalid handle for stdout ("+stdout.fd+")");var stderr=FS.open("/dev/stderr","w");assert(stderr.fd===2,"invalid handle for stderr ("+stderr.fd+")")}),ensureErrnoError:(function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=(function(errno){this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}});this.setErrno(errno);this.message=ERRNO_MESSAGES[errno]};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[ERRNO_CODES.ENOENT].forEach((function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack="<generic error, no stack>"}))}),staticInit:(function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={"MEMFS":MEMFS,"IDBFS":IDBFS,"NODEFS":NODEFS,"WORKERFS":WORKERFS}}),init:(function(input,output,error){assert(!FS.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");FS.init.initialized=true;FS.ensureErrnoError();Module["stdin"]=input||Module["stdin"];Module["stdout"]=output||Module["stdout"];Module["stderr"]=error||Module["stderr"];FS.createStandardStreams()}),quit:(function(){FS.init.initialized=false;var fflush=Module["_fflush"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}}),getMode:(function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode}),joinPath:(function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]=="/")path=path.substr(1);return path}),absolutePath:(function(relative,base){return PATH.resolve(base,relative)}),standardizePath:(function(path){return PATH.normalize(path)}),findObject:(function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}}),analyzePath:(function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==="/"}catch(e){ret.error=e.errno}return ret}),createFolder:(function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)}),createPath:(function(parent,path,canRead,canWrite){parent=typeof parent==="string"?parent:FS.getPath(parent);var parts=path.split("/").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current}),createFile:(function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)}),createDataFile:(function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==="string"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,"w");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node}),createDevice:(function(parent,name,input,output){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:(function(stream){stream.seekable=false}),close:(function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}}),read:(function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})});return FS.mkdev(path,mode,dev)}),createLink:(function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);return FS.symlink(target,path)}),forceLoadFile:(function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!=="undefined"){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.")}else if(Module["read"]){try{obj.contents=intArrayFromString(Module["read"](obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error("Cannot load without read() or XMLHttpRequest.")}if(!success)___setErrNo(ERRNO_CODES.EIO);return success}),createLazyFile:(function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open("HEAD",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var usesGzip=(header=xhr.getResponseHeader("Content-Encoding"))&&header==="gzip";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(function(from,to){if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;xhr.open("GET",url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);if(typeof Uint8Array!="undefined")xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||"",true)}});var lazyArray=this;lazyArray.setDataGetter((function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==="undefined"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==="undefined")throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]}));if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;console.log("LazyFiles on gzip forces download of the whole file when length is accessed")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=="undefined"){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._length})},chunkSize:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize})}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:(function(){return this.contents.length})}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach((function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}return fn.apply(null,arguments)}}));stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node}),createPreloadedFile:(function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency("cp "+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module["preloadPlugins"].forEach((function(plugin){if(handled)return;if(plugin["canHandle"](fullname)){plugin["handle"](byteArray,fullname,finish,(function(){if(onerror)onerror();removeRunDependency(dep)}));handled=true}}));if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url=="string"){Browser.asyncLoad(url,(function(byteArray){processData(byteArray)}),onerror)}else{processData(url)}}),indexedDB:(function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB}),DB_NAME:(function(){return"EM_FS_"+window.location.pathname}),DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log("creating db");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],"readwrite");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror}),loadFilesFromDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],"readonly")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror})};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:(function(dirfd,path){if(path[0]!=="/"){var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);dir=dirstream.path}path=PATH.join2(dir,path)}return path}),doStat:(function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-ERRNO_CODES.ENOTDIR}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;HEAP32[buf+36>>2]=stat.size;HEAP32[buf+40>>2]=4096;HEAP32[buf+44>>2]=stat.blocks;HEAP32[buf+48>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+52>>2]=0;HEAP32[buf+56>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ino;return 0}),doMsync:(function(addr,stream,len,flags){var buffer=new Uint8Array(HEAPU8.subarray(addr,addr+len));FS.msync(stream,buffer,0,len,flags)}),doMkdir:(function(path,mode){path=PATH.normalize(path);if(path[path.length-1]==="/")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0}),doMknod:(function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-ERRNO_CODES.EINVAL}FS.mknod(path,mode,dev);return 0}),doReadlink:(function(path,buf,bufsize){if(bufsize<=0)return-ERRNO_CODES.EINVAL;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len}),doAccess:(function(path,amode){if(amode&~7){return-ERRNO_CODES.EINVAL}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;var perms="";if(amode&4)perms+="r";if(amode&2)perms+="w";if(amode&1)perms+="x";if(perms&&FS.nodePermissions(node,perms)){return-ERRNO_CODES.EACCES}return 0}),doDup:(function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd}),doReadv:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret}),doWritev:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret}),varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),getStreamFromFD:(function(){var stream=FS.getStream(SYSCALLS.get());if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return stream}),getSocketFromFD:(function(){var socket=SOCKFS.getSocket(SYSCALLS.get());if(!socket)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return socket}),getSocketAddress:(function(allowNull){var addrp=SYSCALLS.get(),addrlen=SYSCALLS.get();if(allowNull&&addrp===0)return null;var info=__read_sockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall5(which,varargs){SYSCALLS.varargs=varargs;try{var pathname=SYSCALLS.getStr(),flags=SYSCALLS.get(),mode=SYSCALLS.get();var stream=FS.open(pathname,flags,mode);return stream.fd}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___lock(){}function ___unlock(){}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}Module["_sbrk"]=_sbrk;function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}Module["_memcpy"]=_memcpy;Module["_llvm_bswap_i32"]=_llvm_bswap_i32;Module["_llvm_bswap_i16"]=_llvm_bswap_i16;function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;assert(offset_high===0);FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doWritev(stream,iov,iovcnt)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),op=SYSCALLS.get();switch(op){case 21505:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21506:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21519:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0};case 21520:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return-ERRNO_CODES.EINVAL};case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)};case 21523:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};default:abort("bad ioctl syscall "+op)}}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall221(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),cmd=SYSCALLS.get();switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-ERRNO_CODES.EINVAL}var newStream;newStream=FS.open(stream.path,stream.flags,0,arg);return newStream.fd};case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0};case 12:case 12:{var arg=SYSCALLS.get();var offset=0;HEAP16[arg+offset>>1]=2;return 0};case 13:case 14:case 13:case 14:return 0;case 16:case 8:return-ERRNO_CODES.EINVAL;case 9:___setErrNo(ERRNO_CODES.EINVAL);return-1;default:{return-ERRNO_CODES.EINVAL}}}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall145(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doReadv(stream,iov,iovcnt)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}FS.staticInit();__ATINIT__.unshift((function(){if(!Module["noFSInit"]&&!FS.init.initialized)FS.init()}));__ATMAIN__.push((function(){FS.ignorePermissions=false}));__ATEXIT__.push((function(){FS.quit()}));Module["FS_createFolder"]=FS.createFolder;Module["FS_createPath"]=FS.createPath;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createLink"]=FS.createLink;Module["FS_createDevice"]=FS.createDevice;Module["FS_unlink"]=FS.unlink;__ATINIT__.unshift((function(){TTY.init()}));__ATEXIT__.push((function(){TTY.shutdown()}));if(ENVIRONMENT_IS_NODE){var fs=require("fs");var NODEJS_PATH=require("path");NODEFS.staticInit()}DYNAMICTOP_PTR=allocate(1,"i32",ALLOC_STATIC);STACK_BASE=STACKTOP=Runtime.alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=Runtime.alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;Module["wasmTableSize"]=198;Module["wasmMaxTableSize"]=198;function invoke_iiii(index,a1,a2,a3){try{return Module["dynCall_iiii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_vi(index,a1){try{Module["dynCall_vi"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_vii(index,a1,a2){try{Module["dynCall_vii"](index,a1,a2)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6){try{return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_ii(index,a1){try{return Module["dynCall_ii"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_viii(index,a1,a2,a3){try{Module["dynCall_viii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_v(index){try{Module["dynCall_v"](index)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iii(index,a1,a2){try{return Module["dynCall_iii"](index,a1,a2)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}Module.asmGlobalArg={"Math":Math,"Int8Array":Int8Array,"Int16Array":Int16Array,"Int32Array":Int32Array,"Uint8Array":Uint8Array,"Uint16Array":Uint16Array,"Uint32Array":Uint32Array,"Float32Array":Float32Array,"Float64Array":Float64Array,"NaN":NaN,"Infinity":Infinity};Module.asmLibraryArg={"abort":abort,"assert":assert,"enlargeMemory":enlargeMemory,"getTotalMemory":getTotalMemory,"abortOnCannotGrowMemory":abortOnCannotGrowMemory,"invoke_iiii":invoke_iiii,"invoke_vi":invoke_vi,"invoke_vii":invoke_vii,"invoke_iiiiiii":invoke_iiiiiii,"invoke_ii":invoke_ii,"invoke_viii":invoke_viii,"invoke_v":invoke_v,"invoke_iii":invoke_iii,"___syscall221":___syscall221,"___lock":___lock,"___syscall6":___syscall6,"___setErrNo":___setErrNo,"_abort":_abort,"___unlock":___unlock,"___cxa_pure_virtual":___cxa_pure_virtual,"___syscall5":___syscall5,"_emscripten_memcpy_big":_emscripten_memcpy_big,"___syscall54":___syscall54,"___syscall140":___syscall140,"___syscall145":___syscall145,"___syscall146":___syscall146,"DYNAMICTOP_PTR":DYNAMICTOP_PTR,"tempDoublePtr":tempDoublePtr,"ABORT":ABORT,"STACKTOP":STACKTOP,"STACK_MAX":STACK_MAX};var asm=Module["asm"](Module.asmGlobalArg,Module.asmLibraryArg,buffer);Module["asm"]=asm;var _llvm_bswap_i32=Module["_llvm_bswap_i32"]=(function(){return Module["asm"]["_llvm_bswap_i32"].apply(null,arguments)});var _Emulator_GetReg=Module["_Emulator_GetReg"]=(function(){return Module["asm"]["_Emulator_GetReg"].apply(null,arguments)});var _main=Module["_main"]=(function(){return Module["asm"]["_main"].apply(null,arguments)});var setThrew=Module["setThrew"]=(function(){return Module["asm"]["setThrew"].apply(null,arguments)});var _Emulator_KeyEvent=Module["_Emulator_KeyEvent"]=(function(){return Module["asm"]["_Emulator_KeyEvent"].apply(null,arguments)});var _Emulator_PrepareScreen=Module["_Emulator_PrepareScreen"]=(function(){return Module["asm"]["_Emulator_PrepareScreen"].apply(null,arguments)});var _Emulator_Stop=Module["_Emulator_Stop"]=(function(){return Module["asm"]["_Emulator_Stop"].apply(null,arguments)});var _memset=Module["_memset"]=(function(){return Module["asm"]["_memset"].apply(null,arguments)});var _sbrk=Module["_sbrk"]=(function(){return Module["asm"]["_sbrk"].apply(null,arguments)});var _memcpy=Module["_memcpy"]=(function(){return Module["asm"]["_memcpy"].apply(null,arguments)});var ___errno_location=Module["___errno_location"]=(function(){return Module["asm"]["___errno_location"].apply(null,arguments)});var stackAlloc=Module["stackAlloc"]=(function(){return Module["asm"]["stackAlloc"].apply(null,arguments)});var _Emulator_Start=Module["_Emulator_Start"]=(function(){return Module["asm"]["_Emulator_Start"].apply(null,arguments)});var getTempRet0=Module["getTempRet0"]=(function(){return Module["asm"]["getTempRet0"].apply(null,arguments)});var setTempRet0=Module["setTempRet0"]=(function(){return Module["asm"]["setTempRet0"].apply(null,arguments)});var _llvm_bswap_i16=Module["_llvm_bswap_i16"]=(function(){return Module["asm"]["_llvm_bswap_i16"].apply(null,arguments)});var _emscripten_get_global_libc=Module["_emscripten_get_global_libc"]=(function(){return Module["asm"]["_emscripten_get_global_libc"].apply(null,arguments)});var _free=Module["_free"]=(function(){return Module["asm"]["_free"].apply(null,arguments)});var stackSave=Module["stackSave"]=(function(){return Module["asm"]["stackSave"].apply(null,arguments)});var runPostSets=Module["runPostSets"]=(function(){return Module["asm"]["runPostSets"].apply(null,arguments)});var _Emulator_GetUptime=Module["_Emulator_GetUptime"]=(function(){return Module["asm"]["_Emulator_GetUptime"].apply(null,arguments)});var _Emulator_Init=Module["_Emulator_Init"]=(function(){return Module["asm"]["_Emulator_Init"].apply(null,arguments)});var establishStackSpace=Module["establishStackSpace"]=(function(){return Module["asm"]["establishStackSpace"].apply(null,arguments)});var stackRestore=Module["stackRestore"]=(function(){return Module["asm"]["stackRestore"].apply(null,arguments)});var _malloc=Module["_malloc"]=(function(){return Module["asm"]["_malloc"].apply(null,arguments)});var _Emulator_SystemFrame=Module["_Emulator_SystemFrame"]=(function(){return Module["asm"]["_Emulator_SystemFrame"].apply(null,arguments)});var _Emulator_Reset=Module["_Emulator_Reset"]=(function(){return Module["asm"]["_Emulator_Reset"].apply(null,arguments)});var dynCall_iiii=Module["dynCall_iiii"]=(function(){return Module["asm"]["dynCall_iiii"].apply(null,arguments)});var dynCall_vi=Module["dynCall_vi"]=(function(){return Module["asm"]["dynCall_vi"].apply(null,arguments)});var dynCall_vii=Module["dynCall_vii"]=(function(){return Module["asm"]["dynCall_vii"].apply(null,arguments)});var dynCall_iiiiiii=Module["dynCall_iiiiiii"]=(function(){return Module["asm"]["dynCall_iiiiiii"].apply(null,arguments)});var dynCall_ii=Module["dynCall_ii"]=(function(){return Module["asm"]["dynCall_ii"].apply(null,arguments)});var dynCall_viii=Module["dynCall_viii"]=(function(){return Module["asm"]["dynCall_viii"].apply(null,arguments)});var dynCall_v=Module["dynCall_v"]=(function(){return Module["asm"]["dynCall_v"].apply(null,arguments)});var dynCall_iii=Module["dynCall_iii"]=(function(){return Module["asm"]["dynCall_iii"].apply(null,arguments)});Runtime.stackAlloc=Module["stackAlloc"];Runtime.stackSave=Module["stackSave"];Runtime.stackRestore=Module["stackRestore"];Runtime.establishStackSpace=Module["establishStackSpace"];Runtime.setTempRet0=Module["setTempRet0"];Runtime.getTempRet0=Module["getTempRet0"];Module["asm"]=asm;if(memoryInitializer){if(typeof Module["locateFile"]==="function"){memoryInitializer=Module["locateFile"](memoryInitializer)}else if(Module["memoryInitializerPrefixURL"]){memoryInitializer=Module["memoryInitializerPrefixURL"]+memoryInitializer}if(ENVIRONMENT_IS_NODE||ENVIRONMENT_IS_SHELL){var data=Module["readBinary"](memoryInitializer);HEAPU8.set(data,Runtime.GLOBAL_BASE)}else{addRunDependency("memory initializer");var applyMemoryInitializer=(function(data){if(data.byteLength)data=new Uint8Array(data);HEAPU8.set(data,Runtime.GLOBAL_BASE);if(Module["memoryInitializerRequest"])delete Module["memoryInitializerRequest"].response;removeRunDependency("memory initializer")});function doBrowserLoad(){Module["readAsync"](memoryInitializer,applyMemoryInitializer,(function(){throw"could not load memory initializer "+memoryInitializer}))}if(Module["memoryInitializerRequest"]){function useRequest(){var request=Module["memoryInitializerRequest"];if(request.status!==200&&request.status!==0){console.warn("a problem seems to have happened with Module.memoryInitializerRequest, status: "+request.status+", retrying "+memoryInitializer);doBrowserLoad();return}applyMemoryInitializer(request.response)}if(Module["memoryInitializerRequest"].response){setTimeout(useRequest,0)}else{Module["memoryInitializerRequest"].addEventListener("load",useRequest)}}else{doBrowserLoad()}}}function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;var preloadStartTime=null;var calledMain=false;dependenciesFulfilled=function runCaller(){if(!Module["calledRun"])run();if(!Module["calledRun"])dependenciesFulfilled=runCaller};Module["callMain"]=Module.callMain=function callMain(args){args=args||[];ensureInitRuntime();var argc=args.length+1;function pad(){for(var i=0;i<4-1;i++){argv.push(0)}}var argv=[allocate(intArrayFromString(Module["thisProgram"]),"i8",ALLOC_NORMAL)];pad();for(var i=0;i<argc-1;i=i+1){argv.push(allocate(intArrayFromString(args[i]),"i8",ALLOC_NORMAL));pad()}argv.push(0);argv=allocate(argv,"i32",ALLOC_NORMAL);try{var ret=Module["_main"](argc,argv,0);exit(ret,true)}catch(e){if(e instanceof ExitStatus){return}else if(e=="SimulateInfiniteLoop"){Module["noExitRuntime"]=true;return}else{var toLog=e;if(e&&typeof e==="object"&&e.stack){toLog=[e,e.stack]}Module.printErr("exception thrown: "+toLog);Module["quit"](1,e)}}finally{calledMain=true}};function run(args){args=args||Module["arguments"];if(preloadStartTime===null)preloadStartTime=Date.now();if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module["calledRun"])return;function doRun(){if(Module["calledRun"])return;Module["calledRun"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();if(Module["_main"]&&shouldRunNow)Module["callMain"](args);postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout((function(){setTimeout((function(){Module["setStatus"]("")}),1);doRun()}),1)}else{doRun()}}Module["run"]=Module.run=run;function exit(status,implicit){if(implicit&&Module["noExitRuntime"]){return}if(Module["noExitRuntime"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module["onExit"])Module["onExit"](status)}if(ENVIRONMENT_IS_NODE){process["exit"](status)}Module["quit"](status,new ExitStatus(status))}Module["exit"]=Module.exit=exit;var abortDecorators=[];function abort(what){if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what)}else{what=""}ABORT=true;EXITSTATUS=1;var extra="\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";var output="abort("+what+") at "+stackTrace()+extra;if(abortDecorators){abortDecorators.forEach((function(decorator){output=decorator(output,what)}))}throw output}Module["abort"]=Module.abort=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}var shouldRunNow=true;if(Module["noInitialRun"]){shouldRunNow=false}Module["noExitRuntime"]=true;run()



