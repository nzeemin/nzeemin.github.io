var Module;if(typeof Module==="undefined")Module={};if(!Module.expectedDataFileDownloads){Module.expectedDataFileDownloads=0;Module.finishedDataFileDownloads=0}Module.expectedDataFileDownloads++;((function(){var loadPackage=(function(metadata){function runWithFS(){var fileData0=[];fileData0.push.apply(fileData0,[119,0,172,0,226,129,8,130,212,131,4,132,96,128,156,132,40,142,70,142,186,142,66,143,138,143,254,143,200,144,62,156,50,159,60,159,118,159,196,159,210,159,0,224,4,224,8,224,12,224,16,224,20,224,24,224,28,224,32,224,36,224,40,224,44,224,48,224,52,224,56,224,60,224,102,17,133,29,2,0,69,25,197,69,0,255,69,29,0,128,205,9,133,21,2,0,1,10,194,21,16,0,209,21,0,128,131,126,223,21,34,129,4,0,223,21,74,128,24,0,223,21,128,0,26,0,194,21,80,0,17,10,130,126,4,136,183,10,230,127,183,138,221,127,119,10,248,127,119,10,248,127,247,9,60,9,0,10,32,136,31,10,204,255,223,21,144,0,206,255,23,141,0,0,135,0,198,21,0,2,247,9,168,255,223,9,0,160,247,9,160,255,195,21,208,129,247,9,104,0,6,136,14,136,4,16,247,9,104,0,196,69,160,0,23,33,77,0,3,2,247,9,126,0,239,1,23,33,76,0,25,135,3,2,247,9,192,0,232,1,23,33,83,0,6,2,197,11,2,2,197,29,182,127,205,9,223,1,23,33,84,0,3,2,223,9,64,224,217,1,23,33,80,0,214,2,223,9,0,192,211,1,23,33,64,0,200,134,207,1,198,21,0,2,223,21,144,0,206,255,4,136,200,1,194,148,192,148,14,136,131,126,135,0,5,10,6,136,14,136,23,160,10,0,11,3,23,160,55,0,247,130,192,229,48,0,244,129,197,12,197,12,197,12,5,96,240,1,135,0,193,21,208,0,209,21,3,0,81,17,17,10,195,21,212,129,247,9,190,255,194,21,16,10,8,136,193,10,209,149,32,0,194,10,252,128,193,21,208,0,30,136,64,156,1,0,15,3,192,10,9,2,193,101,26,0,194,21,16,0,16,136,192,21,10,0,14,136,239,1,195,21,218,129,247,9,132,255,135,0,36,136,34,136,193,21,180,0,194,21,4,0,40,136,197,11,2,3,119,17,240,126,193,29,236,126,194,29,234,126,40,136,135,0,3,10,63,32,5,233,237,241,63,32,7,10,239,251,233,226,235,225,223,21,94,130,48,0,192,21,128,0,31,16,50,0,223,21,242,130,188,0,31,16,190,0,55,10,178,126,55,10,176,126,31,10,176,255,135,0,23,141,0,0,192,23,178,255,247,139,62,126,7,3,192,159,58,126,183,10,54,126,247,138,48,126,28,1,247,139,33,126,5,3,192,21,32,0,247,138,23,126,20,1,247,139,16,126,9,3,192,29,8,126,1,126,223,53,64,0,206,255,5,3,55,138,252,125,247,139,245,125,223,3,0,10,192,221,236,125,55,138,233,125,135,0,55,9,126,14,102,17,247,9,178,1,23,160,16,0,43,130,1,16,193,229,10,0,31,129,193,12,71,96,6,1,40,1,39,1,22,1,8,1,11,1,18,1,223,11,178,0,32,3,192,21,13,0,29,1,247,149,128,0,137,125,2,1,55,138,131,125,0,10,55,10,236,125,247,9,208,14,19,1,3,10,247,9,40,0,15,1,192,11,11,2,223,139,176,255,253,128,247,9,88,1,7,1,23,160,63,0,2,131,192,221,85,125,247,9,130,1,133,21,55,9,26,14,2,0,247,9,146,1,195,11,3,3,49,80,74,0,2,1,49,64,74,0,247,9,104,15,135,0,55,9,234,13,102,17,247,9,30,1,192,213,128,0,23,160,191,0,5,131,192,197,64,0,192,213,32,0,65,1,23,160,175,0,19,131,23,160,185,0,16,130,247,139,50,125,58,2,192,69,240,255,192,12,55,28,86,0,38,125,51,3,247,159,32,125,28,125,183,10,26,125,45,1,23,160,159,0,15,131,192,197,32,0,192,213,16,0,23,160,154,0,33,135,23,160,156,0,30,3,23,160,159,0,27,3,14,136,27,1,23,160,137,0,4,135,16,2,247,9,50,0,20,1,23,160,132,0,7,130,23,160,129,0,241,130,3,2,183,138,200,124,10,1,192,85,16,0,5,1,23,160,139,0,2,2,192,21,153,0,247,9,190,0,133,21,55,9,86,13,2,0,247,9,206,0,247,149,1,0,161,124,192,12,7,135,49,48,74,0,16,2,183,138,147,124,192,12,249,134,64,11,193,101,2,0,87,32,4,0,243,135,247,139,86,124,3,2,87,32,8,0,237,2,135,0,38,16,133,16,197,0,194,69,0,255,166,16,6,136,23,160,24,0,6,2,142,32,250,3,193,10,194,101,2,0,1,1,17,144,14,136,5,160,1,3,143,126,128,21,128,21,135,0,192,11,8,7,23,32,10,0,5,130,1,2,0,10,192,12,112,16,86,0,135,0,247,11,118,124,2,3,247,9,58,13,247,21,255,255,104,124,194,21,40,0,195,21,64,0,223,21,208,0,206,255,192,16,1,126,223,21,144,0,206,255,192,16,1,126,195,10,140,126,192,23,206,255,192,151,178,255,135,0,197,23,176,0,3,2,247,139,231,123,7,2,55,144,224,123,55,144,221,123,197,11,1,3,205,9,135,0,193,29,250,123,193,69,192,255,247,139,164,123,1,3,129,12,66,16,194,69,240,255,130,10,0,10,177,0,64,12,130,126,193,69,207,255,129,12,129,12,129,12,135,0,55,9,70,12,183,10,238,123,247,139,128,123,3,3,247,9,10,7,33,1,192,69,0,255,23,160,127,0,8,130,23,160,31,0,11,131,192,229,16,0,247,9,48,0,20,1,23,160,159,0,15,131,192,229,48,0,247,1,23,160,17,0,3,131,247,9,232,1,8,1,23,160,8,0,250,3,247,9,108,3,2,1,247,9,222,3,55,9,252,11,135,0,247,9,234,0,247,109,114,123,108,123,247,9,6,0,247,9,136,1,135,0,247,139,90,123,4,2,247,53,63,0,86,123,42,2,3,10,197,29,78,123,5,128,131,10,197,101,64,0,253,129,8,1,119,33,68,123,7,135,197,229,64,0,119,33,58,123,251,134,247,9,54,0,119,17,42,123,68,17,196,69,192,255,197,69,63,0,197,12,68,97,197,12,197,12,68,97,196,109,40,123,196,69,0,192,196,109,30,123,55,17,8,123,55,138,254,122,3,1,247,109,0,123,252,122,135,0,247,139,168,122,39,2,196,21,10,0,195,11,1,3,4,139,31,97,180,255,193,29,246,122,194,21,16,0,195,11,15,3,193,229,0,4,193,69,0,192,193,109,224,122,247,9,168,13,247,229,128,2,216,122,247,69,0,192,210,122,24,1,193,109,202,122,247,9,210,13,247,101,128,2,194,122,247,69,0,192,188,122,13,1,194,21,30,0,195,11,5,3,193,21,128,123,247,9,180,13,4,1,193,21,128,118,247,9,106,13,135,0,192,12,1,16,192,12,192,12,1,96,193,101,30,148,195,29,120,122,194,21,9,0,247,139,32,122,26,2,0,10,247,139,29,122,1,3,64,10,247,11,122,122,1,3,64,10,75,148,192,11,1,3,75,138,247,9,252,12,135,126,75,148,192,11,1,3,75,138,247,139,246,121,48,3,203,157,88,122,45,1,38,10,69,148,197,69,0,255,196,21,16,0,0,10,247,139,221,121,1,3,69,138,197,139,10,3,133,12,3,134,5,3,0,93,4,148,196,229,2,0,248,2,0,93,4,148,197,29,34,122,5,64,196,29,30,122,64,10,4,64,68,81,11,17,247,9,162,12,162,126,206,11,7,2,142,10,130,10,247,139,156,121,215,3,203,29,254,121,128,21,135,0,247,139,152,121,23,2,195,29,212,121,194,21,10,0,247,139,124,121,7,2,197,21,255,0,131,12,1,134,197,0,195,12,5,1,197,29,212,121,196,29,206,121,5,121,75,121,247,9,88,12,132,126,135,0,247,139,91,121,3,3,247,9,210,1,71,1,193,29,150,121,194,29,150,121,195,21,64,0,23,160,8,0,2,2,129,224,56,1,192,229,18,0,192,12,7,96,13,1,14,1,16,1,18,1,21,1,23,1,25,1,27,1,28,1,29,1,30,1,32,1,34,1,36,1,1,10,36,1,247,9,218,0,37,1,247,9,244,0,34,1,193,96,193,69,63,0,26,1,247,9,86,0,27,1,247,9,144,0,24,1,247,9,46,0,21,1,129,96,15,1,193,224,13,1,193,96,11,1,193,224,129,224,8,1,193,224,129,96,5,1,193,96,129,96,2,1,193,96,129,224,119,16,16,121,247,9,136,11,135,0,247,9,42,255,247,237,6,121,0,121,183,138,248,120,247,9,150,253,247,9,130,11,247,9,20,255,135,0,195,29,236,120,196,16,196,85,62,0,196,93,228,120,194,21,10,0,193,16,69,16,197,109,216,120,197,53,63,0,2,3,81,149,251,1,247,9,116,11,140,126,230,29,194,120,55,17,190,120,247,9,70,11,183,21,182,120,247,9,212,254,135,0,247,9,206,254,195,29,168,120,194,21,10,0,197,16,197,85,63,0,133,10,65,17,193,237,152,120,101,152,67,33,253,2,247,9,56,11,141,126,247,9,18,11,247,9,164,254,135,0,193,29,124,120,193,69,63,0,193,101,128,2,2,128,193,237,132,120,247,9,48,0,247,9,68,11,247,9,132,254,135,0,247,9,126,254,193,29,108,120,193,109,108,120,193,229,128,2,193,69,0,192,193,109,90,120,247,9,10,0,247,9,94,11,247,9,94,254,135,0,195,29,58,120,194,29,48,120,194,85,63,0,130,10,131,224,194,21,5,0,131,12,130,126,194,16,195,12,195,12,194,96,135,0,23,160,10,0,17,2,247,9,60,0,247,53,63,0,6,120,3,2,247,139,184,119,47,2,247,85,63,0,248,119,183,10,244,119,247,9,108,10,39,1,247,139,163,119,12,2,23,160,12,0,3,2,247,9,110,8,30,1,23,160,7,0,3,2,247,9,142,251,24,1,247,139,132,119,21,3,192,229,16,0,3,129,247,9,74,252,15,1,23,160,248,255,3,2,192,21,1,0,247,1,192,101,64,0,119,138,97,119,247,9,48,252,119,138,89,119,0,1,135,0,23,160,130,0,5,2,119,138,76,119,192,21,3,0,7,1,23,160,132,0,5,2,119,138,61,119,192,21,4,0,107,1,23,160,140,0,3,2,247,9,216,0,106,1,197,157,40,119,3,2,247,139,33,119,98,2,192,229,145,0,97,129,192,12,7,96,14,1,13,1,12,1,11,1,24,1,28,1,34,1,87,1,39,1,43,1,49,1,51,1,55,1,57,1,71,1,247,139,236,118,77,3,0,28,22,148,55,138,227,118,247,9,138,9,55,16,70,119,247,9,130,9,66,1,247,9,236,0,192,21,5,0,56,1,197,11,59,3,55,138,204,118,119,138,199,118,246,1,197,11,52,3,55,138,189,118,119,138,186,118,239,1,197,11,45,2,247,9,32,1,42,1,247,9,76,9,119,138,170,118,247,9,68,9,35,1,247,9,44,1,32,1,119,138,145,118,192,21,2,0,22,1,247,9,162,1,24,1,247,29,230,118,232,118,247,29,226,118,228,118,247,29,116,118,122,118,247,157,106,118,115,118,247,9,124,7,9,1,119,138,98,118,192,21,1,0,247,9,176,7,2,1,247,9,164,1,135,0,119,138,76,118,16,2,247,21,0,64,164,118,247,21,0,64,162,118,247,21,0,60,158,118,247,21,0,6,132,118,223,21,216,2,180,255,26,1,247,21,0,112,132,118,247,21,0,16,130,118,247,21,0,10,126,118,247,21,0,1,100,118,223,21,152,0,180,255,195,21,0,126,196,21,224,0,211,29,108,118,3,127,193,29,104,118,247,9,16,9,247,21,0,4,82,118,247,9,200,6,247,9,254,6,135,0,247,9,140,8,119,138,228,117,21,3,247,157,35,118,32,118,55,10,42,118,55,10,40,118,192,29,24,118,55,16,28,118,192,237,34,118,192,237,32,118,2,128,192,109,28,118,55,16,8,118,14,1,55,138,181,117,55,138,178,117,247,139,164,117,3,3,247,69,1,0,234,117,183,138,226,117,247,9,128,250,192,21,5,0,247,9,230,6,247,9,52,8,135,0,230,29,210,117,247,9,90,8,247,109,204,117,200,117,247,53,63,0,194,117,247,2,183,21,188,117,247,9,218,251,135,0,247,9,14,8,119,138,94,117,21,2,247,10,170,117,247,149,1,0,159,117,247,197,170,0,152,117,55,10,178,117,247,21,255,255,174,117,247,139,63,117,41,3,119,10,162,117,119,10,160,117,36,1,183,10,128,117,183,10,120,117,247,69,1,0,114,117,183,138,106,117,247,9,8,250,247,149,3,0,99,117,247,181,170,0,92,117,13,3,247,140,86,117,10,134,119,139,80,117,183,10,86,117,247,45,82,117,98,117,2,135,55,10,74,117,192,157,60,117,192,140,55,208,54,117,247,9,30,7,247,9,142,7,135,0,119,138,221,116,192,29,68,117,247,29,62,117,62,117,55,16,56,117,197,29,54,117,64,121,193,29,40,117,193,109,34,117,194,29,36,117,130,12,17,120,193,11,2,128,193,237,22,117,134,126,135,0,23,160,149,0,3,2,192,21,183,0,14,1,23,160,150,0,3,2,192,21,202,0,8,1,23,160,151,0,3,2,192,21,195,0,2,1,192,101,16,0,119,138,133,116,247,9,66,250,119,138,125,116,247,109,198,116,192,116,247,9,90,249,247,9,220,250,135,0,23,160,31,0,3,130,247,9,34,0,13,1,192,69,0,255,23,160,57,0,3,130,247,9,56,2,7,1,23,160,159,0,2,130,247,9,242,252,55,10,152,116,135,0,247,9,140,1,1,10,2,10,196,21,64,0,3,144,195,229,25,0,27,129,195,12,199,96,6,1,7,1,8,1,9,1,11,1,13,1,15,1,129,10,34,1,2,225,32,1,2,97,30,1,2,225,193,10,27,1,2,225,129,10,24,1,2,97,129,10,21,1,2,97,193,10,18,1,23,160,8,0,2,2,193,10,13,1,23,160,18,0,4,2,55,10,44,116,119,0,220,4,23,160,12,0,37,2,247,9,174,4,135,0,196,29,36,116,4,2,0,138,192,0,128,10,4,16,247,139,197,115,3,3,192,29,34,116,5,1,247,139,186,115,15,3,192,29,20,116,197,157,242,115,127,193,250,115,3,16,69,10,67,65,255,208,240,115,247,9,16,0,12,127,3,1,247,9,8,0,3,127,247,9,218,0,135,0,197,29,214,115,133,96,183,96,214,115,230,29,194,115,195,21,64,0,193,11,41,3,18,129,206,140,10,134,78,139,133,10,183,10,174,115,197,53,63,0,3,2,197,224,247,224,162,115,247,139,80,115,25,3,206,140,78,139,22,1,161,0,14,140,11,134,206,213,128,0,197,53,63,0,3,2,197,96,247,96,128,115,247,10,124,115,197,10,247,139,40,115,5,3,161,0,14,140,2,134,206,213,128,0,183,21,100,115,230,21,128,2,247,11,108,115,3,128,3,11,14,11,3,1,206,45,96,115,20,135,183,227,90,115,247,96,72,115,4,129,247,45,66,115,70,115,11,135,133,227,102,17,55,9,174,3,183,138,46,115,247,9,204,247,55,9,174,3,133,21,131,21,197,11,3,128,197,109,56,115,6,1,119,33,50,115,3,135,197,237,44,115,250,1,119,17,20,115,197,109,30,115,197,69,0,192,197,109,20,115,119,17,6,115,135,0,247,139,182,114,63,2,196,29,14,115,197,29,8,115,68,121,5,10,197,221,226,114,69,10,68,65,195,29,230,114,131,12,1,134,196,0,195,12,193,16,195,229,192,0,247,32,222,114,2,130,195,109,220,114,194,21,7,0,11,121,247,9,104,5,132,126,194,21,3,0,161,0,197,157,96,114,1,3,194,12,4,12,2,134,193,10,4,12,133,126,193,69,1,0,119,32,172,114,2,130,193,109,170,114,194,21,7,0,9,121,68,12,2,134,247,9,16,0,69,17,4,3,68,12,2,134,247,9,4,0,140,126,135,0,193,101,2,0,2,128,193,237,130,114,177,0,68,12,135,0,192,229,48,0,2,128,0,10,7,1,193,29,98,114,193,12,64,96,193,12,193,12,64,96,55,16,84,114,135,0,38,16,230,16,131,16,195,0,194,69,0,255,64,148,247,9,98,246,3,160,1,3,134,126,131,21,128,21,135,0,55,9,156,2,192,11,3,2,247,9,230,2,19,1,23,160,127,0,9,130,23,160,8,0,2,2,192,21,17,0,192,229,16,0,8,129,5,1,23,160,159,0,4,131,192,229,48,0,247,9,6,0,55,9,116,2,135,0,102,16,166,16,247,139,152,113,1,3,193,12,193,69,192,255,193,109,240,113,193,229,192,3,193,69,0,192,193,109,226,113,230,29,204,113,119,16,200,113,192,69,0,255,247,9,54,247,183,21,188,113,130,21,129,21,135,0,55,9,40,2,247,9,10,4,129,29,2,0,130,29,4,0,247,139,82,113,1,3,193,12,192,21,6,0,194,12,2,126,247,139,74,113,16,2,193,69,192,255,194,237,140,113,253,128,194,109,134,113,253,129,66,96,183,16,120,113,183,138,112,113,247,9,14,246,28,1,193,69,0,254,67,16,129,12,129,12,129,12,192,157,93,113,195,69,248,255,2,3,192,12,194,126,55,144,78,113,194,237,102,113,253,128,194,109,96,113,253,129,66,96,183,16,70,113,1,10,2,10,247,9,100,253,247,9,144,3,55,9,178,1,135,0,38,16,247,139,224,112,6,2,193,29,32,113,66,16,193,69,192,255,14,1,193,29,28,113,66,16,193,69,192,255,193,12,193,12,193,12,192,157,2,113,128,12,2,135,129,10,252,1,247,139,170,112,1,3,129,12,194,69,63,0,192,21,6,0,130,12,2,126,128,21,135,0,119,16,240,112,183,16,238,112,55,144,213,112,55,9,76,1,247,139,130,112,2,3,193,12,42,135,87,32,0,2,39,134,192,21,6,0,194,12,35,135,3,126,183,32,208,112,31,134,67,16,129,12,129,12,129,12,129,96,193,109,188,112,193,69,0,192,193,109,178,112,194,157,153,112,195,69,248,255,2,3,194,12,194,126,64,146,128,192,195,29,166,112,247,139,129,112,2,2,195,29,154,112,66,10,131,64,192,208,9,144,55,9,246,0,135,0,55,9,228,0,55,144,101,112,67,16,132,16,193,29,112,112,194,29,110,112,247,16,104,112,55,17,102,112,0,10,67,224,3,129,4,3,128,10,2,1,192,10,3,11,5,10,132,224,3,129,4,3,133,10,2,1,197,10,4,11,3,33,7,130,102,17,38,10,197,16,3,17,68,17,5,10,3,1,38,10,38,16,0,10,38,10,195,11,4,2,131,10,198,229,10,0,36,1,196,224,2,129,142,10,252,1,196,96,230,16,230,16,142,12,38,17,38,10,38,10,4,10,182,109,4,0,2,0,8,3,182,45,2,0,6,0,4,7,132,10,182,237,8,0,2,0,132,109,10,0,14,17,132,12,14,225,247,9,26,0,129,109,12,0,130,109,14,0,132,19,247,9,12,0,219,126,198,101,16,0,55,9,60,0,135,0,196,11,5,3,1,96,66,97,247,9,210,254,5,127,135,0,102,16,0,10,193,21,32,0,177,0,0,12,3,135,209,139,251,2,251,1,129,21,135,0,223,21,144,0,206,255,230,16,166,16,102,16,38,16,38,17,132,0,128,21,128,21,129,21,130,21,131,21,132,0,55,10,108,111,247,9,6,244,192,29,128,111,195,29,98,111,194,29,118,111,130,12,11,16,195,101,2,0,2,128,195,237,102,111,135,126,5,10,247,9,54,252,55,10,80,111,247,157,61,111,58,111,247,9,150,1,135,0,193,29,82,111,195,29,68,111,195,109,62,111,196,21,16,0,247,9,220,1,3,127,193,29,62,111,195,101,0,3,247,9,226,1,247,9,250,0,0,10,55,10,46,111,194,21,6,0,38,16,166,16,247,9,10,0,130,21,128,21,128,10,136,126,135,0,183,10,22,111,247,11,16,111,105,2,55,10,12,111,193,21,35,0,1,96,192,12,7,96,5,1,11,1,15,1,19,1,23,1,27,1,195,21,220,147,201,139,41,3,195,21,224,147,38,1,201,139,34,3,195,21,228,147,33,1,201,139,29,3,195,21,232,147,28,1,201,139,24,3,195,21,236,147,23,1,201,139,19,3,195,21,240,147,18,1,201,139,14,3,247,139,77,110,3,3,195,21,248,147,10,1,195,21,244,147,247,139,62,110,5,3,195,21,252,147,2,1,195,21,0,148,192,12,192,101,4,0,193,21,64,0,247,139,37,110,1,3,129,12,1,224,194,21,4,0,230,29,118,110,230,29,116,110,230,29,4,110,230,29,4,110,247,29,106,110,100,110,247,29,102,110,96,110,247,157,251,109,238,109,247,29,246,109,236,109,192,148,230,16,247,9,64,252,131,21,129,10,135,126,183,21,218,109,183,21,210,109,183,21,58,110,183,21,52,110,135,0,197,21,129,129,196,21,16,0,247,139,188,109,3,3,197,21,3,192,196,12,193,29,30,110,65,65,69,10,195,29,24,110,67,65,193,80,195,29,4,110,195,229,192,0,195,69,0,192,195,109,246,109,197,16,247,9,170,0,3,10,2,10,192,28,74,0,0,12,3,135,15,3,130,10,251,1,129,16,247,139,118,109,4,2,65,97,201,157,222,109,246,1,193,12,65,97,201,29,212,109,241,1,195,101,2,0,5,97,197,53,63,0,229,2,135,0,247,139,88,109,6,2,247,9,188,243,247,21,0,32,106,109,5,1,247,9,146,250,247,21,0,4,94,109,135,0,247,9,164,243,183,138,120,109,247,9,22,242,247,9,152,243,135,0,192,29,138,109,195,29,108,109,194,21,10,0,247,139,20,109,2,2,11,144,1,1,11,16,247,9,4,0,137,126,135,0,195,101,64,0,2,128,195,237,96,109,135,0,194,21,32,0,247,32,82,109,2,130,195,109,80,109,99,16,130,126,135,0,194,21,32,0,195,11,2,128,195,237,62,109,83,16,130,126,135,0,67,16,195,229,128,2,247,32,42,109,2,134,195,109,40,109,194,11,14,3,196,21,32,0,83,20,2,127,193,11,3,128,193,237,20,109,4,1,195,11,2,128,195,237,10,109,142,126,196,21,10,0,193,29,4,109,247,9,178,255,3,127,135,0,67,16,195,101,128,2,119,32,234,108,2,130,193,109,232,108,215,32,0,128,2,131,195,237,222,108,194,11,16,3,196,21,32,0,99,24,2,127,119,32,202,108,3,130,193,109,200,108,5,1,247,32,190,108,2,130,195,109,188,108,144,126,196,21,10,0,193,29,182,108,247,9,80,255,3,127,135,0,16,188,177,196,16,194,197,195,192,191,180,206,185,190,199,16,185,195,197,16,178,188,194,16,183,194,177,182,202,177,192,16,195,196,185,194,16,16,16,16,255,255,0,192,0,48,0,12,0,3,192,0,48,0,12,0,3,0,255,255,170,170,85,85,0,0,255,225,221,221,225,253,253,253,255,255,0,0,8,4,126,4,8,0,0,0,127,1,61,13,21,37,65,1,0,0,0,62,8,28,42,8,8,8,0,0,0,8,8,8,42,28,8,62,0,0,0,0,72,68,126,4,8,0,0,0,0,0,18,10,126,10,18,0,0,0,0,0,18,34,126,34,18,0,0,0,0,0,40,36,126,36,40,0,0,0,0,0,16,32,126,32,16,0,0,0,0,8,28,42,8,8,8,8,0,0,0,8,8,8,8,42,28,8,0,0,0,30,6,10,18,32,64,0,0,0,0,120,96,80,72,4,2,0,0,0,0,0,2,4,72,80,96,120,0,0,0,0,64,32,18,10,6,30,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,0,8,0,0,0,36,36,18,0,0,0,0,0,0,0,20,20,62,20,62,20,20,0,0,0,34,28,34,34,34,28,34,0,0,0,6,38,16,8,4,50,48,0,0,0,8,20,20,12,42,18,44,0,0,0,24,8,4,0,0,0,0,0,0,0,16,8,4,4,4,8,16,0,0,0,4,8,16,16,16,8,4,0,0,0,0,8,42,28,42,8,0,0,0,0,0,8,8,62,8,8,0,0,0,0,0,0,0,0,0,12,12,8,4,0,0,0,0,62,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,32,16,8,4,2,0,0,0,0,28,34,50,42,38,34,28,0,0,0,8,12,10,8,8,8,62,0,0,0,28,34,32,24,4,2,62,0,0,0,62,32,16,24,32,34,28,0,0,0,16,24,20,18,62,16,16,0,0,0,62,2,30,32,32,34,28,0,0,0,56,4,2,30,34,34,28,0,0,0,62,32,16,8,4,4,4,0,0,0,28,34,34,28,34,34,28,0,0,0,28,34,34,60,32,16,14,0,0,0,0,0,12,12,0,12,12,0,0,0,0,0,12,12,0,12,12,8,4,0,16,8,4,2,4,8,16,0,0,0,0,0,62,0,62,0,0,0,0,0,4,8,16,32,16,8,4,0,0,0,28,34,32,16,8,0,8,0,0,0,28,50,42,42,58,2,28,0,0,0,8,20,34,34,62,34,34,0,0,0,30,34,34,30,34,34,30,0,0,0,28,34,2,2,2,34,28,0,0,0,30,36,36,36,36,36,30,0,0,0,62,2,2,30,2,2,62,0,0,0,62,2,2,30,2,2,2,0,0,0,28,34,2,2,50,34,60,0,0,0,34,34,34,62,34,34,34,0,0,0,28,8,8,8,8,8,28,0,0,0,56,16,16,16,16,18,12,0,0,0,34,18,10,6,10,18,34,0,0,0,2,2,2,2,2,2,62,0,0,0,34,54,42,42,34,34,34,0,0,0,34,34,38,42,50,34,34,0,0,0,28,34,34,34,34,34,28,0,0,0,30,34,34,30,2,2,2,0,0,0,28,34,34,34,42,18,44,0,0,0,30,34,34,30,10,18,34,0,0,0,28,34,2,28,32,34,28,0,0,0,62,8,8,8,8,8,8,0,0,0,34,34,34,34,34,34,28,0,0,0,34,34,34,20,20,8,8,0,0,0,34,34,34,42,42,42,20,0,0,0,34,34,20,8,20,34,34,0,0,0,34,34,20,8,8,8,8,0,0,0,62,32,16,8,4,2,62,0,0,0,28,4,4,4,4,4,28,0,0,0,0,2,4,8,16,32,0,0,0,0,28,16,16,16,16,16,28,0,0,0,0,0,62,32,32,0,0,0,0,0,0,0,0,0,0,0,0,62,0,0,12,8,16,0,0,0,0,0,0,0,0,0,28,32,60,34,92,0,0,0,2,2,26,38,34,38,26,0,0,0,0,0,28,34,2,34,28,0,0,0,32,32,44,50,34,50,44,0,0,0,0,0,28,34,62,2,60,0,0,0,24,36,4,14,4,4,4,0,0,0,0,0,44,50,34,50,44,32,28,0,2,2,26,38,34,34,34,0,0,0,8,0,12,8,8,8,28,0,0,0,16,0,16,16,16,16,16,18,12,0,2,2,34,18,14,18,34,0,0,0,12,8,8,8,8,8,28,0,0,0,0,0,22,42,42,42,42,0,0,0,0,0,26,38,34,34,34,0,0,0,0,0,28,34,34,34,28,0,0,0,0,0,26,38,34,38,26,2,2,0,0,0,44,50,34,50,44,32,32,0,0,0,26,38,2,2,2,0,0,0,0,0,28,2,28,32,30,0,0,0,4,4,14,4,4,36,24,0,0,0,0,0,34,34,34,50,44,0,0,0,0,0,34,34,34,20,8,0,0,0,0,0,34,34,42,42,20,0,0,0,0,0,34,20,8,20,34,0,0,0,0,0,34,34,34,20,8,4,2,0,0,0,62,16,8,4,62,0,0,0,48,8,8,6,8,8,48,0,0,0,8,8,8,8,8,8,8,0,0,0,6,8,8,48,8,8,6,0,0,62,0,0,0,0,0,0,0,0,0,0,62,62,62,62,62,62,62,0,0,64,62,21,20,20,20,20,34,0,0,8,8,8,8,255,0,0,0,0,0,0,54,127,127,127,62,8,8,0,0,0,0,0,0,15,8,8,8,8,8,8,8,8,15,8,15,8,8,8,8,8,8,8,8,248,8,8,8,8,8,8,8,8,8,248,0,0,0,0,0,0,0,0,255,0,255,0,0,0,0,0,0,0,255,0,255,8,8,8,8,0,8,28,62,127,127,28,62,0,0,0,0,0,0,248,8,8,8,8,8,0,0,0,0,255,8,8,8,8,8,20,20,20,20,255,0,0,0,0,0,0,8,8,8,8,42,28,8,0,0,8,8,8,8,255,8,8,8,8,8,20,20,20,20,20,20,20,20,20,20,8,8,8,8,15,8,8,8,8,8,0,0,8,4,126,4,8,0,0,0,20,20,20,255,20,255,20,20,20,20,0,8,28,42,8,8,8,8,0,0,0,28,28,107,127,107,8,28,0,0,0,0,0,0,255,0,0,0,0,0,20,20,20,20,255,20,20,20,20,20,8,8,8,8,8,8,8,8,8,8,0,8,28,62,127,62,28,8,0,0,8,8,8,8,15,0,0,0,0,0,8,8,8,255,8,255,8,8,8,8,0,0,0,0,255,20,20,20,20,20,8,8,8,255,0,255,0,0,0,0,8,8,8,248,8,248,8,8,8,8,0,0,16,32,126,32,16,0,0,0,204,51,204,51,204,51,204,51,204,51,0,0,0,50,74,78,74,50,0,0,0,0,0,28,32,60,34,92,0,0,0,32,28,2,30,34,34,28,0,0,0,0,0,18,18,18,18,62,32,0,0,0,0,60,36,36,36,126,66,0,0,0,0,28,34,62,2,60,0,0,0,0,0,8,62,42,42,62,8,8,0,0,0,62,34,2,2,2,0,0,0,0,0,34,20,8,20,34,0,0,0,0,0,34,50,42,38,34,0,0,0,28,0,34,50,42,38,34,0,0,0,0,0,34,18,14,18,34,0,0,0,0,0,56,36,36,36,34,0,0,0,0,0,34,54,42,34,34,0,0,0,0,0,34,34,62,34,34,0,0,0,0,0,28,34,34,34,28,0,0,0,0,0,62,34,34,34,34,0,0,0,0,0,60,34,60,36,34,0,0,0,0,0,26,38,34,38,26,2,2,0,0,0,28,34,2,34,28,0,0,0,0,0,62,8,8,8,8,0,0,0,0,0,34,34,34,20,8,4,2,0,0,0,42,42,28,42,42,0,0,0,0,0,30,34,30,34,30,0,0,0,0,0,2,2,30,34,30,0,0,0,0,0,66,66,78,82,78,0,0,0,0,0,30,32,24,32,30,0,0,0,0,0,42,42,42,42,62,0,0,0,0,0,30,32,60,32,30,0,0,0,0,0,42,42,42,42,126,64,0,0,0,0,34,34,62,32,32,0,0,0,0,0,7,5,60,68,60,0,0,0,50,74,74,78,74,74,50,0,0,0,8,20,34,34,62,34,34,0,0,0,62,2,2,30,34,34,30,0,0,0,34,34,34,34,34,34,126,64,0,0,60,36,36,36,36,36,126,66,0,0,62,2,2,30,2,2,62,0,0,0,8,62,42,42,42,62,8,0,0,0,62,34,2,2,2,2,2,0,0,0,34,34,20,8,20,34,34,0,0,0,34,34,50,42,38,34,34,0,0,28,0,34,50,42,38,34,34,0,0,0,34,18,10,6,10,18,34,0,0,0,56,36,36,36,36,36,34,0,0,0,34,54,42,42,34,34,34,0,0,0,34,34,34,62,34,34,34,0,0,0,28,34,34,34,34,34,28,0,0,0,62,34,34,34,34,34,34,0,0,0,60,34,34,60,40,36,34,0,0,0,30,34,34,30,2,2,2,0,0,0,28,34,2,2,2,34,28,0,0,0,62,8,8,8,8,8,8,0,0,0,34,34,34,20,8,4,2,0,0,0,42,42,42,28,42,42,42,0,0,0,30,34,34,30,34,34,30,0,0,0,2,2,2,30,34,34,30,0,0,0,66,66,66,78,82,82,78,0,0,0,28,34,32,24,32,34,28,0,0,0,34,42,42,42,42,42,62,0,0,0,14,16,32,60,32,16,14,0,0,0,34,42,42,42,42,42,126,64,0,0,34,34,34,62,32,32,32,0,0,0,7,5,4,60,68,68,60,0,0,55,9,164,244,119,16,128,100,195,21,206,255,55,10,114,100,55,10,112,100,230,23,4,0,223,21,140,156,4,0,183,17,104,100,64,146,3,2,203,21,144,0,24,1,192,10,3,2,203,21,16,0,19,1,192,10,3,2,247,9,50,0,14,1,192,10,2,3,183,10,60,100,247,9,22,1,7,1,198,29,56,100,247,149,4,0,43,100,203,21,144,0,193,29,40,100,241,157,31,100,1,0,159,21,4,0,55,9,70,244,135,0,203,21,16,0,69,28,2,0,68,28,4,0,33,3,247,9,210,0,55,16,6,100,192,21,0,16,247,9,56,0,64,20,194,21,20,0,247,9,102,0,193,29,236,99,66,28,4,0,65,28,2,0,247,9,86,0,193,21,202,0,194,21,2,0,247,9,82,0,192,21,0,1,4,16,5,16,247,9,6,0,203,21,144,0,135,0,203,21,112,0,197,101,23,0,65,127,203,21,16,0,196,101,22,0,1,127,11,126,203,21,80,0,197,21,105,0,65,127,203,21,48,0,197,21,100,0,65,127,132,10,128,16,2,17,247,9,44,0,2,16,135,0,192,21,8,0,247,9,192,255,64,148,196,21,8,0,128,12,11,135,203,21,112,0,197,21,24,0,65,127,203,21,16,0,197,21,23,0,65,127,10,1,203,21,80,0,197,21,51,0,65,127,203,21,48,0,197,21,51,0,65,127,203,21,112,0,197,21,24,0,65,127,203,21,16,0,197,21,22,0,65,127,34,127,166,126,135,0,0,10,2,10,66,213,128,96,64,11,5,127,135,0,197,21,32,0,203,21,16,0,247,21,1,0,22,99,55,10,14,99,247,9,20,0,247,9,126,0,247,139,3,99,4,2,247,9,168,0,203,21,144,0,135,0,194,21,0,8,0,10,4,10,75,49,254,3,132,10,75,49,253,2,0,225,3,129,23,32,2,0,242,130,0,17,141,126,0,10,194,21,128,0,247,9,10,1,0,97,132,126,194,21,7,0,128,12,130,126,4,16,132,12,0,97,55,16,194,98,4,10,132,10,75,49,253,2,0,33,8,130,4,10,132,10,75,49,253,3,0,33,244,135,183,138,154,98,192,12,0,33,4,130,247,9,206,0,135,0,214,11,214,11,187,1,193,29,138,98,193,101,22,0,194,21,20,0,247,9,104,0,194,21,8,0,113,40,236,255,10,2,132,126,119,24,94,98,119,28,234,255,86,98,5,2,119,24,80,98,2,1,183,138,87,98,135,0,193,29,68,98,194,29,66,98,247,237,74,98,74,98,2,2,193,21,202,0,247,9,44,0,193,21,202,0,194,21,2,0,247,9,78,0,247,11,46,98,12,2,197,29,26,98,196,29,24,98,247,9,240,254,55,32,36,98,3,3,247,149,2,0,19,98,135,0,192,29,24,98,247,139,8,98,7,2,4,10,132,10,75,49,253,2,0,33,250,135,6,1,4,10,132,10,75,49,253,3,0,33,250,135,192,12,0,33,172,130,247,9,32,0,192,21,8,0,247,9,24,0,55,33,226,97,2,130,161,0,1,1,177,0,9,140,10,126,193,109,202,97,143,126,135,0,4,10,247,139,188,97,11,2,75,49,254,2,75,49,254,3,132,10,75,49,253,2,132,10,75,49,253,3,135,0,75,49,254,3,75,49,254,2,132,10,75,49,253,3,132,10,75,49,253,2,135,0,192,12,55,28,224,159,114,97,135,0,38,16,38,17,192,85,0,3,196,21,11,0,223,53,128,0,206,255,252,3,161,0,1,1,128,12,4,134,223,21,144,0,206,255,4,1,223,21,128,0,206,255,0,1,197,29,64,97,65,127,14,127,132,21,128,21,135,0,23,141,0,0,230,16,38,17,195,21,206,255,196,21,16,0,0,10,11,49,254,3,203,21,176,0,11,49,252,2,23,141,128,0,197,29,16,97,133,12,65,127,132,12,197,29,6,97,65,127,203,53,16,0,2,2,161,0,2,1,177,0,0,1,0,140,12,127,203,21,144,0,132,21,131,21,135,0,38,16,64,148,247,9,112,255,132,126,128,21,135,0,38,16,247,9,158,255,17,144,132,126,128,21,135,0,12,0,30,0,67,0,139,0,29,1,64,2,134,4,18,9,155,13,0,0,0,0,0,0,0,0,0,0,0,0,80,93]);Module["FS_createDataFile"]("/","monit10.rom",fileData0,true,true,false);var fileData1=[];fileData1.push.apply(fileData1,[193,21,0,128,195,21,3,0,194,21,0,16,0,10,64,100,64,11,131,126,23,32,255,255,1,1,135,0,203,126,198,21,0,4,247,21,0,64,240,99,55,10,252,99,55,138,46,100,247,21,200,0,208,99,192,21,44,4,208,21,10,0,208,21,10,0,1,16,208,21,65,64,208,21,82,72,208,21,66,63,208,21,85,84,80,20,80,20,80,20,80,20,193,21,10,0,208,21,192,168,67,126,223,21,4,0,10,5,55,10,228,99,247,9,238,0,247,9,152,24,247,9,10,1,81,1,175,133,247,11,124,99,11,129,198,21,0,4,192,21,10,0,247,9,192,4,119,0,86,23,10,243,244,239,240,10,223,21,56,170,4,0,31,10,176,255,55,10,100,100,28,136,192,53,0,1,5,3,192,21,149,0,14,136,247,9,52,1,193,21,150,160,194,21,5,0,247,9,168,4,247,11,52,99,33,4,247,11,138,99,4,3,196,29,132,99,55,10,128,99,55,33,36,99,23,130,151,35,142,221,14,3,151,35,72,219,11,3,151,35,114,219,8,3,151,35,222,219,6,135,151,35,232,219,3,130,1,3,212,11,212,11,247,9,46,57,55,25,24,99,4,1,192,21,10,0,247,9,58,4,183,8,246,6,55,10,224,98,31,10,66,0,223,21,56,170,64,0,223,21,56,170,4,0,31,10,6,0,247,21,4,205,226,94,55,10,224,94,223,21,56,170,8,0,31,10,10,0,31,10,116,253,31,10,112,253,223,21,96,161,8,0,223,21,156,160,4,0,119,0,140,22,51,137,5,0,12,136,192,21,155,0,14,136,192,21,158,0,14,136,192,21,18,5,208,21,10,10,23,32,42,6,251,135,55,10,138,99,135,0,193,21,96,4,194,21,176,161,3,10,131,10,68,16,192,16,10,136,133,146,133,10,148,148,66,127,193,101,17,0,215,32,10,0,243,135,247,9,66,0,135,0,6,67,79,76,79,82,32,5,65,85,84,79,32,5,71,79,84,79,32,5,76,73,83,84,32,4,82,85,78,10,10,67,79,76,79,82,32,49,44,48,10,6,67,76,79,65,68,34,5,67,79,78,84,10,2,46,10,5,12,82,85,78,10,0,192,21,158,0,14,136,195,21,96,4,1,10,197,16,66,149,192,21,32,0,194,10,4,129,213,165,32,0,251,4,64,153,18,136,195,101,17,0,129,10,87,32,10,0,239,5,192,149,32,0,18,136,129,10,18,136,135,0,38,16,166,16,230,16,102,17,22,136,102,16,193,21,18,5,67,16,194,21,0,1,166,16,6,136,5,144,50,4,23,160,137,0,30,3,23,160,160,0,34,4,23,160,155,0,24,4,23,160,153,0,2,2,119,0,44,1,23,160,149,0,236,6,10,2,14,136,6,136,23,160,149,0,251,2,14,136,150,37,247,9,114,255,217,1,23,160,144,0,2,2,247,9,208,3,14,136,87,161,158,0,216,2,247,9,90,255,213,1,67,32,2,3,130,10,195,10,17,144,131,10,14,136,194,10,204,2,25,137,23,160,127,0,3,2,192,149,22,0,108,1,23,160,3,0,2,2,119,0,190,253,23,160,32,0,232,4,23,160,7,0,222,3,23,160,8,0,43,3,23,160,10,0,94,3,23,160,12,0,18,3,197,229,19,0,174,5,197,12,71,97,66,1,43,1,169,1,79,1,100,1,10,1,30,1,107,1,109,1,111,1,114,1,117,1,120,1,14,136,214,11,150,1,142,32,11,3,67,32,4,2,193,10,195,10,130,10,4,1,193,37,18,5,2,3,225,139,14,136,192,149,22,0,51,1,193,37,18,5,137,3,193,10,171,1,67,32,3,3,129,10,130,10,179,1,209,149,32,0,175,1,192,149,25,0,67,32,5,135,192,149,32,0,131,10,194,10,170,7,129,10,14,136,102,16,166,16,22,136,69,16,130,21,129,21,197,53,7,0,236,2,119,0,210,254,215,32,18,5,5,2,247,11,134,96,2,129,119,0,248,28,192,149,8,0,193,37,18,5,119,3,14,136,193,10,250,1,67,32,114,3,115,1,193,32,8,3,166,41,247,9,80,1,14,136,197,10,253,4,150,37,1,1,14,136,19,144,193,16,150,37,133,21,131,21,130,21,128,21,135,0,67,32,92,3,197,16,117,153,1,0,65,33,252,130,201,149,32,0,86,1,119,9,102,1,30,1,119,9,96,1,32,1,119,9,90,1,193,10,23,1,119,9,82,1,129,10,19,1,119,9,74,1,129,10,20,1,119,9,66,1,193,10,16,1,14,136,197,10,6,5,192,149,10,0,14,136,192,149,153,0,247,1,67,16,40,1,1,224,87,32,18,5,4,135,6,1,1,96,67,32,3,131,129,21,128,21,40,1,214,11,128,21,14,136,36,1,14,136,197,10,14,5,192,149,10,0,14,136,192,149,8,0,14,136,142,109,2,0,128,159,0,0,14,136,192,149,22,0,239,1,69,16,133,10,117,149,254,255,67,33,252,135,130,10,195,10,102,16,166,16,129,157,8,0,130,157,9,0,20,136,130,21,129,21,198,101,6,0,119,0,198,253,38,10,38,10,247,9,108,0,230,21,18,5,142,237,8,0,246,10,4,0,3,5,142,109,2,0,250,1,102,16,166,16,22,136,118,144,8,0,182,144,9,0,130,21,129,21,192,53,1,0,192,3,192,139,164,129,14,136,197,10,23,5,10,2,102,16,166,16,22,136,151,32,23,0,2,2,246,138,9,0,130,21,129,21,142,109,2,0,192,149,10,0,14,136,192,149,23,0,14,136,128,159,0,0,14,136,231,1,131,10,194,10,186,6,25,137,38,16,102,16,230,16,193,229,18,5,195,229,18,5,129,109,14,0,131,109,14,0,129,10,247,9,52,0,5,10,3,224,8,5,2,3,133,10,251,1,246,165,23,0,4,0,1,2,133,10,1,224,4,7,182,10,10,0,197,10,250,1,54,16,8,0,131,21,129,21,128,21,135,0,14,16,102,16,102,17,28,136,0,12,3,135,192,21,64,0,135,0,192,21,32,0,135,0,14,136,135,0,247,11,180,95,251,3,193,21,18,6,194,21,1,0,9,144,230,16,195,29,162,95,3,2,131,21,16,136,135,0,83,128,38,16,102,17,131,16,195,0,194,69,0,255,197,21,204,255,192,149,19,0,247,9,104,0,64,148,23,160,31,0,6,131,23,160,127,0,34,135,23,160,191,0,31,130,23,160,8,0,21,3,23,160,12,0,15,3,23,160,13,0,12,3,23,160,133,0,9,3,23,160,10,0,18,2,192,149,13,0,247,9,46,0,192,21,10,0,55,138,142,94,9,1,247,138,136,94,6,6,247,149,63,0,128,94,2,1,183,138,122,94,247,9,14,0,3,160,1,3,176,126,133,21,128,21,131,21,135,0,192,69,0,254,192,85,0,1,205,53,0,1,253,3,13,16,205,53,0,1,253,2,13,10,215,173,76,94,64,0,2,7,55,138,68,94,135,0,214,11,247,9,0,63,208,181,1,0,24,2,3,10,3,210,3,96,195,101,17,0,194,10,16,129,83,148,136,138,251,2,102,16,192,10,247,9,202,25,247,9,236,25,247,9,20,26,129,21,195,229,0,1,128,10,238,1,135,0,52,137,247,11,162,93,251,2,215,32,18,5,248,2,247,11,176,93,11,2,198,101,16,0,55,11,180,93,196,29,174,93,5,2,196,29,152,93,212,11,6,1,17,137,223,21,56,170,4,0,247,9,204,51,55,10,152,93,55,10,142,93,36,41,55,8,216,20,2,1,119,0,180,250,20,37,2,17,0,17,0,24,119,9,188,29,51,1,9,1,200,165,32,0,3,2,119,9,242,0,132,16,196,229,6,0,54,1,3,16,131,10,215,164,10,0,27,3,183,8,194,29,24,1,249,1,197,37,4,0,3,2,119,9,206,0,246,1,197,37,6,0,243,3,64,17,72,137,13,1,73,137,1,1,237,1,119,9,142,0,74,137,203,165,44,0,231,2,131,10,243,1,132,16,219,1,192,37,2,0,224,2,119,9,92,0,221,1,239,1,200,165,60,0,209,3,128,10,3,16,72,137,3,1,73,137,4,1,160,0,119,9,64,0,2,1,119,9,82,0,132,16,183,17,26,93,247,9,2,19,247,11,230,92,13,7,192,149,91,0,247,9,6,254,194,85,0,32,247,9,28,254,192,149,93,0,247,9,246,253,2,1,247,9,14,254,4,25,223,21,156,160,4,0,119,0,182,20,214,11,247,45,158,92,154,92,6,3,196,31,148,92,247,9,218,50,36,41,213,11,71,17,214,11,55,8,232,19,1,1,14,1,20,37,2,33,11,3,55,33,122,92,8,135,36,41,4,19,38,17,38,19,183,10,124,92,204,21,234,167,71,17,247,11,120,92,1,3,133,0,214,11,119,17,110,92,193,29,78,92,119,32,76,92,16,134,68,28,2,0,247,9,140,50,36,41,119,9,178,255,64,18,193,101,8,0,0,24,64,12,240,129,193,101,12,0,237,1,199,29,64,92,247,21,56,170,20,88,183,8,30,0,228,11,247,11,46,92,2,7,119,0,132,254,55,17,34,92,55,11,32,92,247,21,156,160,246,87,119,0,218,15,214,11,183,10,2,92,247,11,56,92,7,3,198,29,50,92,247,10,254,91,2,5,158,21,251,1,55,10,36,92,198,21,0,4,55,10,226,91,55,10,232,91,135,16,28,136,192,53,0,64,4,3,192,21,154,0,247,9,4,253,135,0,28,136,192,53,0,64,247,3,135,0,230,21,16,5,38,10,223,139,69,0,4,3,6,136,55,144,164,92,142,10,92,0,30,136,135,0,3,21,55,17,226,91,192,21,1,0,223,21,178,168,4,0,31,144,207,255,192,12,223,9,0,224,19,135,55,8,2,0,92,0,214,11,223,21,156,160,4,0,223,149,128,0,207,255,31,138,207,255,196,29,176,91,55,10,172,91,7,16,198,101,6,0,23,32,8,0,228,2,55,8,214,255,5,137,70,137,192,21,12,0,247,9,134,252,198,21,0,2,119,0,232,215,214,11,3,2,247,9,116,255,92,0,247,9,92,255,92,0,195,29,38,92,4,5,6,6,22,136,102,16,6,1,230,157,104,91,3,1,247,9,38,60,38,146,206,229,16,0,253,6,2,3,14,11,19,1,206,21,16,0,16,1,247,9,46,0,195,29,246,91,9,3,3,6,193,157,62,91,6,1,247,9,252,59,1,10,1,210,1,1,22,136,78,224,192,21,32,0,206,10,3,5,247,9,26,252,251,1,214,11,92,0,246,139,3,0,188,2,135,0,247,9,244,255,130,21,247,11,186,91,221,2,247,9,232,255,129,21,20,136,92,0,150,37,214,11,214,11,22,136,102,16,92,0,150,37,214,11,214,11,22,136,166,16,92,0,128,21,23,32,16,0,2,131,192,21,16,0,130,21,131,21,155,7,215,32,10,0,152,6,193,21,79,4,193,101,17,0,195,126,17,144,2,7,145,148,2,126,247,9,74,248,92,0,223,85,64,0,176,255,38,16,102,16,166,16,230,16,102,17,5,10,192,151,114,253,64,148,247,9,168,0,247,9,152,0,66,16,194,101,5,0,195,21,10,0,128,148,247,9,148,0,196,126,195,21,4,0,247,9,126,0,17,144,45,2,87,172,254,255,3,0,21,135,194,101,6,0,247,9,106,0,18,144,196,126,131,24,33,3,201,11,2,3,66,18,3,1,130,24,159,16,180,0,247,9,80,0,18,144,5,96,197,126,11,1,64,148,247,9,78,0,196,126,67,24,66,24,128,148,247,9,66,0,5,96,197,126,247,9,46,0,5,160,2,3,225,149,2,0,64,17,247,9,44,0,194,21,234,0,193,21,214,0,195,21,8,0,82,20,194,126,133,21,131,21,130,21,129,21,128,21,31,10,176,255,135,0,223,139,112,253,253,128,192,151,114,253,135,0,223,139,116,253,253,128,31,144,118,253,135,0,5,137,195,23,140,0,128,21,1,2,16,36,247,9,14,0,14,136,192,21,157,0,14,136,223,16,140,0,92,0,23,32,4,0,238,130,192,101,144,0,135,0,195,23,140,0,128,21,4,3,247,9,232,255,14,136,92,0,223,23,138,0,140,0,92,0,230,23,126,0,230,23,128,0,92,0,246,103,126,0,2,0,206,103,128,0,92,0,182,109,6,0,2,0,142,109,4,0,92,0,128,19,7,3,23,32,4,0,201,130,192,101,144,0,14,16,92,0,206,23,138,0,206,69,252,255,206,229,148,0,14,11,92,0,230,23,140,0,247,1,166,19,92,0,192,17,130,21,129,21,24,136,92,0,0,10,250,1,192,17,129,29,6,0,130,29,4,0,24,136,130,21,129,21,150,37,26,136,92,0,192,17,130,19,129,29,2,0,24,136,129,29,6,0,26,136,130,29,4,0,26,136,129,29,2,0,26,136,130,21,26,136,214,11,150,37,92,0,130,19,129,29,4,0,64,16,66,32,2,134,128,16,66,16,128,224,128,10,129,29,2,0,24,136,129,29,6,0,26,136,130,10,8,126,130,21,129,21,128,10,24,136,150,37,92,0,130,21,129,21,192,21,255,255,87,32,255,0,7,130,151,32,239,0,4,130,247,9,104,1,192,229,144,0,38,16,92,0,230,23,140,0,38,17,102,17,55,17,174,88,129,29,12,0,130,29,10,0,128,29,8,0,14,136,4,16,133,29,6,0,247,9,16,1,110,135,67,16,129,10,247,9,6,1,252,134,64,16,193,16,193,10,247,9,250,0,252,134,3,10,230,16,195,10,38,16,102,16,166,16,230,16,3,11,247,9,202,0,194,96,129,10,247,9,220,0,27,135,102,16,102,16,193,10,247,9,208,0,252,134,78,224,214,37,2,0,12,4,198,229,6,0,166,29,6,0,198,101,8,0,206,10,102,16,166,16,230,16,14,11,230,11,166,19,118,16,2,0,129,21,8,1,129,10,64,32,48,4,247,9,154,0,250,135,102,16,206,10,129,10,247,9,142,0,252,134,128,10,64,32,13,7,198,229,6,0,166,29,6,0,198,101,10,0,192,10,102,16,38,16,166,16,230,16,14,11,17,1,192,10,192,10,1,32,14,7,198,229,6,0,166,29,6,0,198,101,10,0,128,10,38,16,102,16,166,16,230,16,182,227,2,0,230,11,64,16,129,21,247,9,38,0,173,1,131,21,4,3,130,21,129,21,128,21,167,1,133,21,132,21,131,21,150,37,130,21,129,21,192,17,24,136,55,10,164,87,119,0,212,253,38,16,102,16,129,10,0,10,128,10,24,136,129,29,2,0,193,10,26,136,129,21,128,21,135,0,87,48,0,255,17,2,151,48,0,255,14,2,151,32,239,0,11,6,38,16,247,9,20,0,5,32,5,3,4,32,3,3,128,21,161,0,135,0,128,21,177,0,135,0,102,16,166,16,194,12,194,12,194,12,194,12,194,12,194,12,64,16,128,12,128,12,128,96,192,103,132,0,192,69,0,192,192,103,130,0,2,146,193,69,252,255,3,3,130,12,130,12,67,126,194,69,252,255,192,21,148,0,128,224,130,21,129,21,135,0,166,29,14,0,166,29,14,0,166,29,14,0,6,1,166,29,18,0,166,29,18,0,166,29,18,0,38,17,55,17,248,86,128,17,192,101,16,0,38,24,38,24,38,24,38,24,55,9,244,63,118,247,146,173,166,237,136,240,240,237,152,173,158,173,140,247,184,173,166,237,136,240,240,237,152,173,190,173,166,29,10,0,92,0,142,109,8,0,92,0,128,17,192,101,18,0,38,24,38,24,38,24,38,24,2,4,54,11,8,0,206,85,0,128,92,0,166,29,12,0,92,0,182,21,14,0,182,21,14,0,132,21,150,37,150,37,214,11,55,10,138,86,92,0,166,29,2,0,142,109,8,0,166,29,6,0,92,0,166,29,6,0,142,109,12,0,166,29,10,0,92,0,230,21,1,0,92,0,142,21,142,21,194,21,1,0,129,21,39,7,0,10,64,208,192,85,128,0,193,12,1,138,193,0,193,229,137,0,22,4,87,32,240,255,22,5,129,10,7,3,128,12,252,134,64,12,194,140,5,135,129,10,252,2,14,16,166,16,92,0,2,140,194,12,129,10,249,3,128,12,64,11,251,1,192,21,0,1,243,1,128,16,194,21,0,1,239,1,5,137,230,21,1,0,230,21,1,0,92,0,38,17,102,17,72,137,6,1,132,29,4,0,118,17,4,0,133,21,132,0,5,137,38,17,102,17,38,10,69,137,17,1,16,1,15,1,68,137,196,11,12,3,14,21,247,139,144,85,8,129,69,16,14,19,38,25,55,9,210,62,248,237,156,174,65,17,132,29,6,0,182,21,4,0,133,21,132,0,38,10,38,17,102,17,69,137,222,1,221,1,1,1,219,1,68,137,196,11,9,3,133,29,6,0,54,21,4,0,54,19,6,0,68,17,133,21,132,0,132,29,6,0,54,10,6,0,249,1,230,23,140,0,38,17,102,17,55,17,116,85,128,29,18,0,1,3,14,136,129,29,16,0,57,4,1,11,54,11,16,0,130,29,14,0,182,45,8,0,6,0,40,3,20,5,129,237,24,0,166,16,102,16,166,29,10,0,55,9,80,62,78,228,34,175,42,228,40,175,166,29,12,0,92,0,129,21,130,21,129,109,24,0,19,1,130,237,22,0,102,16,166,16,166,29,12,0,55,9,40,62,78,228,74,175,42,228,80,175,166,29,10,0,92,0,130,21,129,21,130,109,22,0,0,10,128,10,24,136,129,29,24,0,130,29,22,0,26,136,129,29,12,0,57,4,1,11,54,11,12,0,130,29,10,0,182,45,8,0,6,0,40,3,20,5,129,237,24,0,166,16,102,16,166,29,10,0,55,9,216,61,78,228,154,175,42,228,160,175,166,29,12,0,92,0,129,21,130,21,129,109,24,0,19,1,130,237,22,0,102,16,166,16,166,29,12,0,55,9,176,61,78,228,194,175,42,228,200,175,166,29,10,0,92,0,130,21,129,21,130,109,22,0,0,10,128,10,24,136,129,29,24,0,130,29,22,0,26,136,1,10,130,29,20,0,131,16,195,10,3,11,195,12,182,45,16,0,12,0,8,2,182,45,14,0,10,0,4,2,197,21,170,170,119,0,16,1,182,237,24,0,16,0,182,237,22,0,14,0,182,237,24,0,12,0,182,237,22,0,10,0,0,10,246,11,16,0,6,4,128,10,128,10,246,11,14,0,5,5,3,1,246,11,14,0,1,4,128,10,4,10,246,11,12,0,6,4,132,10,132,10,246,11,10,0,5,5,3,1,246,11,10,0,1,4,132,10,192,12,120,0,120,177,166,29,16,0,182,29,16,0,18,0,54,11,18,0,182,21,14,0,15,1,54,11,16,0,54,11,14,0,10,1,166,29,16,0,182,29,16,0,18,0,182,21,14,0,54,11,14,0,0,1,128,12,196,12,124,0,128,177,166,29,12,0,182,29,12,0,14,0,54,11,14,0,182,21,10,0,14,1,54,11,12,0,54,11,10,0,9,1,166,29,12,0,182,29,12,0,14,0,182,21,10,0,54,11,10,0,132,12,5,10,4,32,21,3,230,21,6,0,247,9,178,0,128,10,192,37,4,0,1,2,0,10,4,32,5,3,230,21,10,0,247,9,156,0,244,1,230,21,2,0,247,9,146,0,15,1,182,45,16,0,12,0,5,6,230,21,8,0,247,9,128,0,6,1,197,21,170,170,230,21,4,0,247,9,114,0,247,9,160,0,197,11,30,3,192,16,18,6,128,96,192,12,192,10,6,6,129,10,64,16,192,12,3,96,131,10,240,1,129,10,194,10,64,16,128,224,128,10,192,12,3,96,232,1,64,224,192,12,192,10,244,7,194,10,128,16,192,12,3,224,131,10,222,1,133,21,132,21,131,21,198,101,16,0,130,21,129,21,247,9,150,251,14,136,24,136,55,10,232,82,119,0,24,249,142,176,92,176,112,176,122,176,198,176,150,176,170,176,180,176,38,16,102,16,166,16,129,29,8,0,194,21,15,0,192,11,9,3,193,12,193,12,193,12,193,12,194,12,194,12,194,12,194,12,9,126,133,64,69,80,130,21,129,21,128,21,142,21,135,0,102,17,102,17,0,10,197,69,240,255,125,0,246,178,128,10,192,37,4,0,2,2,119,0,28,1,133,21,133,12,133,12,133,12,133,12,102,17,239,1,118,32,18,0,22,5,182,32,16,0,19,6,5,10,196,21,15,0,38,16,9,3,197,12,197,12,197,12,197,12,196,12,196,12,196,12,196,12,9,126,128,21,54,65,2,0,118,81,2,0,38,16,102,16,166,16,192,12,120,0,2,179,230,16,38,17,102,17,182,45,26,0,24,0,32,3,16,5,166,16,102,16,166,29,28,0,55,9,46,59,78,228,68,178,42,228,74,178,166,29,30,0,92,0,129,21,130,21,15,1,102,16,166,16,166,29,30,0,55,9,14,59,78,228,100,178,42,228,106,178,166,29,28,0,92,0,130,21,129,21,133,21,132,21,131,21,0,10,128,10,129,109,36,0,130,109,34,0,24,136,130,21,129,21,128,21,159,1,129,16,130,29,2,0,2,11,198,1,1,11,2,11,195,1,129,16,1,11,130,29,2,0,190,1,118,32,18,0,181,5,182,32,16,0,178,6,197,21,6,0,157,1,118,32,22,0,134,5,182,32,20,0,131,6,197,21,10,0,148,1,118,32,22,0,2,4,119,0,246,254,182,32,20,0,2,7,119,0,236,254,197,21,2,0,135,1,118,32,26,0,150,5,194,11,148,6,5,10,128,1,133,21,133,21,135,0,200,177,226,177,164,178,182,178,200,178,226,178,32,178,138,178,148,178,154,178,55,17,78,81,64,17,133,21,131,21,38,16,230,23,140,0,193,29,96,77,194,29,94,77,38,10,38,10,230,21,0,112,195,11,79,3,197,96,197,10,74,137,197,32,36,130,0,10,11,172,92,179,5,3,128,10,240,139,92,179,249,2,52,1,192,12,131,10,23,32,14,0,2,5,119,0,86,1,120,0,114,179,77,78,66,67,83,65,88,82,85,76,68,82,85,76,69,72,71,70,69,72,71,0,30,180,214,179,208,179,236,179,220,179,12,180,138,179,128,21,133,21,131,21,38,16,208,1,128,21,166,41,247,9,34,0,247,9,20,251,247,9,26,0,11,2,131,10,197,224,133,10,246,16,6,0,118,17,4,0,133,21,131,21,38,16,188,1,5,137,74,137,197,32,252,130,203,165,59,0,135,0,159,21,140,0,133,21,55,10,146,80,92,0,214,11,248,1,206,85,0,8,174,1,206,85,0,128,171,1,192,21,4,0,247,9,140,1,230,3,55,144,32,81,163,1,0,10,247,9,126,1,192,11,7,3,192,37,4,0,219,135,192,101,144,0,14,136,151,1,223,23,138,0,140,0,147,1,0,10,247,9,94,1,23,32,4,0,205,134,55,144,239,80,138,1,102,16,166,16,247,9,242,0,0,10,247,9,68,1,246,53,0,1,4,0,2,3,247,9,10,1,1,16,247,9,118,255,203,165,44,0,183,2,131,10,246,140,4,0,247,9,202,0,0,10,247,9,28,1,246,53,0,1,4,0,2,3,247,9,226,0,2,16,150,37,206,53,0,1,61,3,192,157,157,80,192,37,2,0,1,6,2,11,192,10,192,37,2,0,1,131,1,11,142,140,1,134,2,11,142,140,1,134,1,11,128,12,3,135,64,16,129,16,2,16,129,109,254,255,130,109,252,255,34,1,2,9,3,8,2,9,3,14,11,15,10,14,11,15,192,229,14,0,128,12,38,16,192,157,81,80,128,101,14,156,160,180,192,21,1,0,247,9,168,0,247,9,118,0,142,140,1,134,0,11,142,140,1,134,1,96,142,140,1,134,0,11,142,140,1,134,2,96,0,10,230,29,148,75,230,29,146,75,246,53,0,8,4,0,3,2,128,10,26,136,1,1,24,136,246,11,4,0,5,128,0,10,130,21,129,21,24,136,1,1,150,37,206,21,0,112,119,0,26,254,247,9,152,254,203,165,43,0,8,2,246,85,0,1,6,0,246,69,1,0,6,0,131,10,7,1,203,165,45,0,4,2,246,85,1,1,6,0,131,10,135,0,102,16,166,16,230,16,194,21,8,0,1,10,195,157,184,79,3,12,1,134,1,96,151,32,7,0,2,5,129,12,1,1,192,12,138,126,64,16,131,21,130,21,129,21,135,0,247,9,64,254,2,2,131,10,135,0,197,32,253,130,203,165,61,0,10,2,131,10,247,9,42,254,247,9,228,248,247,9,34,254,14,3,119,0,26,254,203,165,57,0,11,135,203,165,48,0,8,130,247,9,180,248,74,137,215,162,59,0,1,2,131,10,128,21,135,0,12,32,226,229,234,243,233,235,32,32,32,32,32,40,247,233,236,248,238,224,243,44,49,57,56,54,46,48,55,46,50,52,41,10,79,107,10,32,32,39,32,68,73,77,32,76,73,78,69,32,67,73,82,67,76,69,32,68,69,70,32,84,82,79,70,70,32,70,79,82,32,71,79,83,85,66,32,71,79,84,79,32,73,70,32,73,78,80,85,84,32,76,69,84,32,79,80,69,78,32,63,32,67,76,79,83,69,32,78,69,88,84,32,80,65,73,78,84,32,80,82,73,78,84,32,68,82,65,87,32,82,69,77,32,82,69,84,85,82,78,32,95,32,67,65,76,76,32,82,69,65,68,32,80,79,75,69,32,79,85,84,32,83,84,79,80,32,76,80,82,73,78,84,32,79,78,32,82,69,83,84,79,82,69,32,69,78,68,32,68,65,84,65,32,76,79,67,65,84,69,32,67,76,69,65,82,32,84,82,79,78,32,75,69,89,32,66,69,69,80,32,67,76,83,32,67,79,76,79,82,32,80,83,69,84,32,80,82,69,83,69,84,32,67,76,79,65,68,32,66,76,79,65,68,32,70,73,78,68,32,67,83,65,86,69,32,66,83,65,86,69,32,76,79,65,68,32,83,65,86,69,32,78,69,87,32,65,85,84,79,32,76,73,83,84,32,77,79,78,73,84,32,76,76,73,83,84,32,82,69,78,85,77,32,68,69,76,69,84,69,32,67,79,78,84,32,82,85,78,32,219,181,221,181,223,181,227,181,232,181,239,181,243,181,249,181,253,181,3,182,8,182,11,182,17,182,21,182,26,182,28,182,34,182,39,182,45,182,51,182,56,182,60,182,67,182,69,182,74,182,79,182,84,182,88,182,93,182,100,182,103,182,111,182,115,182,120,182,127,182,133,182,138,182,142,182,147,182,151,182,157,182,162,182,169,182,175,182,181,182,186,182,192,182,198,182,203,182,208,182,212,182,217,182,222,182,228,182,234,182,240,182,247,182,252,182,184,197,104,197,92,201,236,201,234,202,110,203,108,200,140,199,102,198,108,198,18,199,208,200,184,197,178,204,210,196,214,204,18,200,142,202,210,196,130,202,104,197,80,198,252,204,252,204,196,200,126,201,136,201,90,200,202,196,122,204,126,200,96,200,116,200,116,197,42,201,102,200,214,202,178,201,184,201,144,201,190,201,194,201,168,189,16,189,198,188,84,190,114,189,68,188,174,190,128,185,254,192,156,185,194,168,150,185,28,194,76,193,54,188,162,186,55,10,58,76,55,10,58,76,55,10,12,76,193,21,216,181,194,21,3,0,247,9,112,237,247,9,58,240,247,11,34,76,14,2,247,9,28,234,195,21,18,5,215,162,46,0,3,2,131,10,119,0,126,8,119,8,36,0,8,1,239,1,197,29,4,76,197,109,254,75,222,135,119,0,82,8,247,9,24,240,87,33,84,0,2,5,125,0,116,183,119,0,36,2,195,21,18,5,72,137,32,1,247,19,200,75,55,10,174,75,119,17,212,75,73,137,23,1,215,162,10,0,57,3,192,29,172,75,2,16,194,229,6,0,183,32,144,75,54,131,183,16,156,75,183,16,150,75,183,16,144,75,183,16,138,75,18,20,4,32,253,131,76,17,5,17,74,137,215,162,10,0,5,2,197,11,30,3,247,9,68,0,27,1,66,17,75,137,219,181,2,114,5,10,194,11,21,3,192,29,80,75,206,224,14,96,183,35,90,75,15,134,34,16,80,145,200,148,23,164,10,0,252,2,55,16,54,75,128,10,192,69,1,0,55,16,54,75,209,11,129,0,132,16,247,9,2,0,7,137,0,17,212,11,32,40,55,32,40,75,2,131,36,24,251,1,55,17,30,75,135,0,247,29,28,75,24,75,247,229,18,1,18,75,63,10,14,75,247,229,0,1,8,75,135,0,247,9,228,255,247,29,254,74,250,74,247,21,42,6,226,74,55,10,50,75,193,21,182,181,194,21,34,0,247,9,64,236,247,29,224,74,220,74,247,29,218,74,212,74,247,29,212,74,204,74,247,29,188,74,196,74,183,10,192,74,247,69,1,0,186,74,247,19,196,74,55,10,170,74,135,0,193,29,172,74,119,16,164,74,193,109,158,74,247,29,154,74,156,74,119,32,160,74,182,130,119,16,148,74,247,29,140,74,134,74,135,0,70,137,198,21,0,4,247,9,42,44,247,9,130,255,247,9,94,232,119,0,82,254,247,21,255,255,114,75,102,17,247,9,50,0,183,10,90,74,0,33,19,135,38,17,38,16,247,9,158,238,247,9,138,0,194,21,0,10,55,29,2,0,110,74,247,9,162,235,36,41,14,33,244,134,55,10,64,75,150,37,119,0,36,5,38,10,247,9,80,0,29,3,142,10,73,137,4,1,246,11,4,0,22,3,14,11,38,17,203,165,45,0,22,2,131,10,247,9,50,0,21,3,73,137,5,1,246,11,6,0,8,3,212,11,20,37,0,17,132,21,214,11,142,21,70,137,135,0,8,137,196,29,252,73,228,11,230,1,246,11,2,0,242,6,196,29,236,73,238,1,74,137,203,165,46,0,4,2,197,29,248,73,131,10,135,0,72,137,4,10,135,0,5,19,247,9,54,7,67,17,5,25,65,149,6,3,65,28,0,183,192,21,32,0,247,9,232,6,65,17,192,21,10,0,247,9,222,6,193,21,18,5,135,0,247,21,0,1,144,73,247,11,144,73,2,2,247,9,226,254,193,29,142,73,55,10,216,73,247,21,255,255,156,73,253,9,116,183,209,21,236,183,196,29,120,73,119,32,118,73,86,134,55,11,98,73,119,0,136,1,194,29,112,73,72,137,133,24,70,137,247,9,4,43,247,45,96,73,96,73,80,3,73,137,1,1,8,137,55,8,178,0,1,1,73,1,247,9,116,237,247,21,30,4,80,73,55,10,86,73,55,10,70,73,183,10,62,73,253,3,183,10,30,73,55,17,64,73,247,29,42,73,34,73,247,29,36,73,30,73,247,29,30,73,26,73,55,10,8,73,247,9,206,6,192,29,16,73,16,10,16,36,55,32,10,73,251,135,55,10,68,73,198,21,0,4,55,32,250,72,51,131,55,24,4,73,3,24,224,11,5,16,66,19,77,16,133,16,252,2,194,148,55,10,38,73,151,32,84,0,1,5,12,137,250,9,116,183,119,32,206,72,232,131,55,10,182,72,119,32,198,72,24,131,247,229,6,0,190,72,249,1,119,0,144,252,23,171,40,0,8,3,23,175,0,0,2,0,4,3,23,175,0,0,64,0,5,2,36,41,55,33,156,72,241,134,208,11,228,11,128,0,7,137,87,44,254,255,210,217,6,3,87,44,254,255,236,217,2,3,209,21,210,217,192,29,132,72,23,3,119,16,126,72,3,28,2,0,131,10,2,18,72,16,193,45,100,72,203,131,215,162,10,0,2,3,209,148,248,1,55,32,98,72,4,3,209,149,44,0,128,16,236,1,209,146,247,29,80,72,80,72,192,29,86,72,18,3,4,18,23,175,0,0,64,0,7,3,196,229,6,0,55,33,44,72,247,130,8,10,1,1,8,25,4,24,200,21,76,222,0,17,238,2,119,16,14,72,247,9,90,253,196,31,32,72,247,10,246,71,55,10,24,72,55,10,8,72,55,10,20,72,55,10,10,72,247,11,10,72,2,3,119,0,96,234,247,21,255,255,214,71,247,9,34,236,55,10,222,72,92,0,17,137,247,11,224,71,252,2,196,29,230,71,139,3,227,1,247,45,204,71,204,71,1,3,5,137,38,10,192,21,208,0,208,21,3,0,208,29,186,71,230,21,0,1,144,19,247,9,200,2,247,9,94,3,215,162,44,0,6,2,131,10,65,137,8,191,2,137,182,10,2,0,70,137,247,9,178,3,247,9,140,2,230,29,140,71,131,21,128,17,197,21,230,0,247,9,164,41,87,32,18,5,12,3,230,16,119,8,164,251,1,1,242,1,192,21,10,0,23,144,18,5,247,9,160,232,57,137,214,11,247,9,46,3,247,9,118,3,247,9,124,1,119,0,50,2,247,21,112,168,64,72,192,21,208,0,208,21,4,0,16,36,8,10,38,10,166,41,129,17,80,137,160,0,70,137,214,11,129,29,2,0,228,3,142,21,102,16,247,9,56,40,195,21,221,0,75,137,0,191,3,2,6,1,195,10,192,16,253,9,14,191,38,10,215,1,38,10,211,1,192,21,208,0,208,21,3,0,16,36,247,9,16,2,247,9,128,2,192,229,20,0,38,10,5,10,215,162,44,0,12,2,131,10,65,137,8,191,6,1,142,10,74,137,215,162,44,0,3,2,131,10,247,9,20,0,80,17,70,137,247,9,228,2,247,9,190,1,214,11,113,3,127,0,88,67,74,137,215,164,38,0,3,2,247,9,120,21,135,0,195,10,72,137,2,137,135,0,192,21,208,0,208,21,2,0,16,36,247,9,174,1,247,9,30,2,192,229,20,0,86,137,247,9,206,255,80,17,66,17,86,137,247,9,196,255,133,224,5,135,80,17,70,137,247,9,144,2,74,1,5,137,247,45,104,70,104,70,251,2,247,29,96,70,88,70,247,29,90,70,84,70,247,29,84,70,80,70,55,10,62,70,192,21,208,0,208,21,3,0,208,21,42,6,200,29,64,70,208,229,42,6,247,9,80,1,38,10,215,162,44,0,5,2,131,10,65,137,8,191,2,137,142,10,247,9,196,1,70,137,247,9,58,2,195,21,230,0,194,20,192,18,195,21,42,6,192,96,131,224,194,29,8,70,132,16,4,232,34,24,34,24,202,96,34,24,132,32,250,130,55,16,234,69,55,16,220,69,183,16,232,69,183,16,226,69,183,16,220,69,55,17,222,69,247,9,4,0,119,0,174,249,247,9,208,0,133,21,214,11,5,7,196,29,202,69,5,25,119,0,94,252,71,17,247,45,188,69,188,69,239,3,192,21,208,0,208,21,2,0,208,21,42,6,230,16,247,9,96,3,69,16,196,29,160,69,72,17,208,229,40,6,131,21,247,9,174,0,247,9,52,1,70,137,247,19,144,69,21,21,55,33,134,69,252,135,13,17,205,237,124,69,193,21,208,0,113,101,4,0,255,9,104,70,247,9,78,1,247,9,144,1,198,1,247,45,98,69,98,69,194,3,192,21,208,0,208,21,2,0,196,29,84,69,16,17,208,21,0,1,38,10,247,9,96,0,247,9,246,0,70,137,38,17,228,11,247,9,100,251,36,41,131,21,128,17,197,21,230,0,247,9,72,231,230,16,55,33,36,69,243,130,247,9,238,38,150,37,247,21,10,0,20,70,157,1,67,79,68,32,66,73,78,32,82,114,0,84,116,0,192,191,170,191,247,139,234,68,10,2,193,21,234,0,194,21,16,0,247,9,76,230,192,21,10,0,247,9,38,230,135,0,215,164,34,0,28,2,247,9,54,0,194,21,6,0,215,162,34,0,5,3,215,162,10,0,2,3,208,148,136,126,151,32,6,0,3,2,56,137,208,149,32,0,194,10,252,4,215,162,10,0,3,3,215,164,34,0,250,2,74,137,135,0,13,137,247,21,112,168,152,69,38,17,230,16,65,137,11,191,15,1,65,137,11,191,12,1,74,137,215,162,58,0,8,2,131,10,74,137,130,101,194,224,247,21,168,169,114,69,1,1,131,21,132,21,135,0,208,21,46,66,208,21,73,78,208,21,32,32,208,21,32,32,208,21,32,32,135,0,208,21,46,67,208,21,79,68,16,10,16,10,16,10,135,0,208,21,46,65,208,21,83,67,208,21,32,35,208,21,48,48,208,21,48,26,135,0,208,21,46,68,208,21,65,84,244,1,193,21,225,0,209,149,32,0,17,10,17,10,135,0,119,33,26,68,8,135,68,17,196,237]);Module["FS_createDataFile"]("/","basic10_1.rom",fileData1,true,true,false);var fileData2=[];fileData2.push.apply(fileData2,[20,68,68,97,37,25,119,33,10,68,252,130,135,0,247,11,238,67,15,3,193,21,208,0,17,20,9,16,209,101,16,0,209,21,0,1,197,21,8,0,17,20,66,127,5,16,192,229,18,0,135,0,193,21,208,0,255,9,208,68,65,156,1,0,9,3,193,10,4,3,193,10,6,3,119,0,78,224,247,9,192,254,240,1,135,0,192,21,10,0,247,9,244,228,19,137,193,21,3,0,197,10,87,169,57,0,4,2,205,149,48,0,70,126,213,11,141,138,135,0,198,101,14,0,2,10,195,21,18,5,193,16,33,1,73,137,18,1,247,9,238,0,247,9,222,228,66,16,194,229,18,5,67,16,36,1,2,10,192,29,140,67,72,137,5,16,70,137,73,137,1,1,8,137,247,9,202,0,4,25,67,17,1,149,6,3,65,28,0,183,192,21,32,0,247,9,124,0,1,17,192,21,10,0,247,9,114,0,193,21,18,5,195,10,194,10,4,3,128,16,247,9,144,228,2,16,193,16,230,21,14,184,38,16,166,16,230,16,102,17,38,10,230,21,16,1,130,227,2,11,119,0,68,225,247,9,60,231,2,10,203,165,44,0,6,3,194,21,10,0,247,9,24,249,1,3,66,17,74,137,197,21,10,0,203,165,44,0,7,2,192,29,6,67,131,10,72,137,5,16,197,11,117,3,70,137,247,19,244,66,183,16,244,66,119,17,238,66,133,16,162,1,83,146,130,10,64,164,252,2,135,0,38,10,247,9,130,248,247,19,196,66,247,9,138,247,119,0,142,246,195,21,18,6,211,149,32,0,197,11,4,128,243,149,45,0,255,255,5,11,247,9,10,0,193,10,130,10,135,0,195,21,18,5,230,16,195,101,5,0,203,149,32,0,194,21,5,0,1,10,194,12,6,135,133,32,252,131,151,32,10,0,8,3,161,0,2,12,193,12,133,32,248,130,133,224,129,10,245,1,197,101,48,0,99,145,69,16,233,2,133,19,65,17,2,10,206,101,6,0,213,148,130,10,206,32,252,2,214,11,135,0,4,10,193,21,42,6,195,21,255,255,194,29,58,66,162,40,132,34,2,131,131,18,133,16,162,40,183,32,40,66,3,135,131,40,246,135,249,1,215,32,255,255,8,3,77,16,196,16,209,148,201,148,87,164,10,0,252,2,229,1,119,16,244,65,129,10,193,69,1,0,119,16,244,65,135,0,5,137,183,10,250,65,192,16,247,9,168,255,3,16,2,10,192,21,10,0,230,21,10,0,203,165,44,0,8,3,247,9,238,247,23,3,78,17,74,137,203,165,44,0,18,2,131,10,74,137,203,165,44,0,8,3,247,9,212,247,10,3,66,17,74,137,203,165,44,0,5,2,131,10,72,137,2,1,64,17,215,3,70,137,133,16,73,137,5,1,55,33,156,65,2,134,119,0,110,245,2,17,1,17,225,11,161,19,69,18,73,137,1,1,2,1,2,33,196,130,119,32,126,65,4,131,14,96,191,135,97,40,242,1,214,11,119,32,112,65,40,3,209,11,64,18,119,9,186,1,3,1,11,1,81,36,245,1,128,10,3,16,72,137,250,1,38,10,247,9,152,0,22,1,21,1,38,10,3,16,215,164,10,0,16,3,183,8,188,1,13,1,249,1,192,16,72,137,249,1,247,9,120,0,0,1,74,137,203,165,44,0,242,2,131,10,244,1,22,10,222,1,210,11,128,16,162,40,160,24,183,32,16,65,250,2,3,10,4,16,196,101,6,0,55,33,4,65,35,130,20,36,6,5,55,33,250,64,30,3,36,40,0,17,243,1,195,11,1,2,3,17,38,25,38,25,38,25,192,229,6,0,20,20,20,20,20,20,4,16,192,229,6,0,144,21,144,21,144,21,192,229,8,0,228,11,55,32,196,64,225,130,192,16,224,11,3,10,215,1,119,0,142,244,166,16,102,16,230,16,74,137,14,224,142,10,73,137,14,1,66,32,4,130,119,28,254,255,172,64,3,1,119,28,2,0,164,64,247,21,128,0,122,64,8,137,18,1,2,33,16,130,5,29,252,255,247,9,230,253,142,224,16,5,194,10,2,3,80,148,252,1,206,10,3,5,208,149,32,0,251,1,14,16,131,21,129,21,130,21,55,10,72,64,135,0,246,11,8,0,42,2,4,16,23,165,10,0,253,2,132,239,2,0,132,227,196,109,48,64,196,45,62,64,45,134,196,237,38,64,38,17,247,9,236,253,132,21,196,109,26,64,196,45,40,64,34,130,182,45,2,0,4,0,4,130,119,28,254,255,40,64,3,1,119,28,2,0,32,64,247,21,128,0,246,63,7,137,246,101,2,0,6,0,205,1,130,19,2,11,194,109,230,63,194,45,244,63,230,135,196,29,220,63,34,153,0,33,253,2,1,16,129,227,9,1,129,31,2,0,196,29,200,63,62,17,2,0,84,148,64,32,253,2,194,21,18,5,151,162,32,0,3,3,148,148,129,10,250,1,129,99,14,17,84,146,87,164,10,0,252,2,55,17,158,63,182,10,8,0,162,1,200,165,16,0,17,3,200,165,18,0,14,3,200,165,42,0,11,3,200,165,60,0,8,3,213,11,200,165,20,0,4,3,200,165,58,0,1,3,213,11,133,0,66,137,2,1,15,1,21,1,215,162,39,0,19,3,215,162,34,0,15,2,131,10,215,162,10,0,12,3,215,162,34,0,249,2,7,1,75,137,178,198,2,14,3,1,197,11,2,3,210,11,210,11,130,0,201,21,160,229,102,20,2,1,183,8,8,8,38,10,82,137,6,1,55,10,122,63,209,21,48,221,14,10,248,1,74,137,66,137,30,1,9,1,64,137,14,10,196,157,36,63,132,10,196,12,17,29,110,197,235,1,194,16,75,137,223,198,3,6,242,1,197,229,4,0,32,5,14,10,87,137,66,17,85,137,194,11,2,2,86,137,85,137,88,137,145,28,106,197,215,1,65,137,198,206,1,1,3,1,65,137,192,206,2,1,195,10,218,1,215,162,59,0,5,3,215,162,44,0,9,2,209,21,228,168,142,10,131,10,195,1,131,16,87,33,254,255,203,3,70,137,214,11,2,2,209,21,248,221,183,8,136,7,135,0,74,169,16,169,56,222,18,222,12,222,215,162,44,0,14,3,85,137,78,137,14,1,247,9,174,12,209,21,74,169,78,137,18,1,247,9,162,12,209,21,212,168,102,1,209,21,102,169,240,1,209,21,16,169,215,162,44,0,94,2,131,10,215,162,44,0,237,3,24,137,215,162,44,0,86,2,24,137,2,10,4,10,71,137,11,1,146,36,247,139,86,62,2,3,2,129,210,11,210,11,197,139,11,129,38,17,10,1,197,11,249,2,247,9,94,0,225,11,247,9,10,18,197,21,255,255,2,11,74,137,215,164,61,0,24,2,197,11,10,128,77,137,13,137,196,11,12,6,2,129,194,11,9,3,247,9,52,0,6,1,64,137,132,16,1,128,4,11,252,9,50,198,145,28,44,198,194,11,34,7,145,21,32,1,2,137,190,220,196,220,212,220,174,220,236,220,216,220,232,220,220,220,216,220,50,210,92,210,70,210,247,11,26,62,4,2,209,21,156,225,183,10,16,62,209,21,186,221,135,0,72,137,3,1,209,21,194,219,13,1,209,21,210,219,247,9,60,0,70,137,135,0,209,21,86,219,2,1,209,21,112,219,72,137,2,137,70,137,73,137,1,1,8,137,247,9,30,0,55,8,240,244,3,1,209,21,156,198,135,0,9,19,55,45,4,0,144,61,1,131,76,16,209,11,135,0,210,217,247,139,94,61,5,2,247,11,114,61,3,2,55,10,120,61,135,0,17,137,82,69,77,32,82,69,84,85,82,78,32,78,69,88,84,32,82,69,83,84,79,82,69,32,71,79,83,85,66,32,71,79,84,79,32,84,72,69,78,32,69,76,83,69,32,69,76,32,65,84,78,32,65,84,32,84,65,66,32,84,79,32,83,84,69,80,32,79,85,84,80,85,84,32,73,78,80,85,84,32,65,83,32,85,83,82,32,70,78,32,66,32,66,70,32,0,64,137,247,9,26,11,75,137,208,198,2,2,2,137,66,137,9,1,8,1,209,21,254,218,38,16,0,10,247,9,62,255,38,10,13,1,209,21,4,219,38,16,102,16,75,137,219,181,2,82,5,10,209,11,0,10,253,9,116,183,2,10,75,137,218,198,2,0,20,1,66,137,4,1,3,1,197,21,18,0,4,1,75,137,219,181,2,82,5,10,206,11,6,3,209,21,112,219,66,16,209,11,94,16,166,16,253,9,116,183,128,21,1,3,72,16,128,21,119,0,228,0,4,10,71,137,13,137,197,139,59,129,74,137,215,164,61,0,55,2,38,17,194,157,120,60,130,10,194,12,64,137,250,9,54,198,145,28,48,198,145,19,75,137,237,198,2,0,2,137,64,137,151,32,4,0,1,2,226,11,250,9,54,198,75,137,240,198,2,0,14,1,64,137,250,9,54,198,145,28,14,200,209,21,142,186,145,21,247,139,26,60,68,3,113,16,252,255,65,1,194,11,8,3,209,21,106,220,17,10,17,10,17,10,209,21,128,64,235,1,209,21,112,220,209,21,1,0,230,1,2,137,22,221,4,221,209,21,54,221,4,10,247,21,1,0,254,59,215,162,10,0,4,3,71,137,13,137,197,139,240,129,17,17,194,157,234,59,130,10,194,12,145,28,84,200,194,229,2,0,4,5,209,21,126,218,209,21,54,219,74,137,215,164,44,0,225,3,195,10,14,1,122,221,158,221,100,221,209,21,236,217,8,1,209,21,210,217,5,1,209,21,150,217,2,1,209,21,188,217,70,137,135,0,63,16,168,59,55,16,164,59,135,0,247,139,126,59,15,3,209,29,162,59,119,16,158,59,72,137,3,1,73,137,4,1,8,137,196,29,124,59,228,11,228,11,17,17,231,1,247,11,116,59,13,2,209,21,76,222,209,29,110,59,72,137,222,1,73,137,1,1,8,137,49,29,252,255,254,255,215,1,4,137,209,21,156,225,209,21,82,222,38,10,19,1,209,21,156,225,80,137,11,1,209,21,48,221,74,137,215,164,59,0,148,2,74,137,209,21,64,222,38,10,4,1,183,8,236,3,209,21,104,222,102,16,209,11,4,10,102,16,209,11,71,137,160,0,197,139,12,129,197,11,14,3,30,17,74,137,215,164,44,0,242,3,94,16,195,10,183,8,210,3,168,1,209,21,202,223,94,16,243,1,2,137,215,162,10,0,19,3,215,162,44,0,5,2,209,21,154,220,209,21,6,4,1,1,85,137,78,137,5,1,247,9,232,8,209,21,162,225,144,1,209,21,26,226,141,1,209,21,62,226,138,1,196,21,8,0,71,137,160,0,197,11,10,3,74,137,215,164,44,0,4,2,247,139,140,58,243,2,12,137,195,10,4,1,2,137,84,137,209,21,94,225,70,137,135,0,83,137,209,21,98,225,250,1,2,10,203,165,44,0,2,3,130,10,85,137,78,137,4,1,247,9,142,8,209,21,122,170,194,11,236,3,209,21,162,170,233,1,209,21,242,221,230,1,209,21,254,221,227,1,2,10,2,1,194,21,2,0,247,9,148,0,78,137,9,1,247,9,96,8,209,21,162,170,209,21,8,171,209,21,144,170,2,1,145,28,232,201,70,137,135,0,8,171,18,171,215,162,45,0,3,3,247,9,104,0,2,1,209,21,186,170,215,164,45,0,29,2,74,137,247,9,86,0,196,11,3,3,241,21,208,170,254,255,2,10,78,137,5,1,247,9,22,8,209,21,162,170,6,1,130,10,215,162,44,0,15,2,131,10,74,137,215,162,44,0,10,2,131,10,75,137,12,199,2,2,2,137,71,97,6,1,209,21,82,171,5,1,209,21,22,171,2,1,209,21,44,171,194,11,2,2,209,21,144,170,70,137,135,0,38,10,215,164,64,0,5,3,195,10,75,137,240,198,2,0,1,1,142,10,87,137,84,137,88,137,132,21,2,3,209,21,196,170,135,0,77,137,5,137,70,137,209,21,10,179,135,0,247,9,204,255,2,10,247,9,30,0,247,9,26,0,87,40,254,170,2,2,201,21,4,171,209,11,70,137,194,11,1,3,24,137,209,21,162,171,135,0,78,137,6,1,247,9,116,7,209,21,220,170,2,10,7,1,209,21,254,170,215,162,44,0,2,2,131,10,130,10,135,0,85,137,215,164,44,0,175,2,77,137,13,137,209,21,120,169,70,137,135,0,247,9,112,255,78,137,2,137,247,9,60,7,2,10,247,9,186,255,78,137,6,1,247,9,88,7,209,21,68,173,2,10,7,1,209,21,212,173,215,162,44,0,2,2,131,10,130,10,78,137,6,1,247,9,58,7,209,21,82,173,2,10,7,1,209,21,226,173,215,162,44,0,2,2,131,10,130,10,78,137,8,1,196,157,220,56,132,10,196,12,17,29,104,203,2,10,7,1,209,21,82,174,215,162,44,0,2,2,131,10,130,10,70,137,194,11,1,3,24,137,209,21,220,174,135,0,240,173,246,173,250,173,75,137,5,199,3,2,2,137,74,137,66,137,19,1,20,1,194,148,194,229,48,0,194,12,197,11,245,2,194,101,64,4,74,137,215,164,61,0,239,2,85,137,70,137,209,21,236,228,145,16,135,0,2,10,240,1,197,11,229,3,247,139,82,56,1,2,12,137,209,21,18,220,38,16,102,16,209,11,69,137,2,137,2,137,160,0,197,85,64,128,192,29,80,56,247,21,255,255,74,56,68,137,17,17,212,11,38,17,2,10,38,10,215,162,40,0,28,2,131,10,66,137,2,137,1,1,2,137,69,137,2,137,2,137,160,0,132,19,102,17,5,129,69,12,4,129,69,12,1,129,20,37,212,11,212,11,230,29,14,56,38,17,130,10,74,137,215,162,44,0,229,3,88,137,145,16,215,164,61,0,228,2,183,17,46,56,102,16,194,12,129,96,183,10,40,56,192,11,9,128,77,137,13,137,192,21,4,0,196,11,9,2,209,21,186,221,6,1,64,137,0,144,128,10,192,12,248,9,54,198,55,10,254,55,132,21,214,11,3,3,148,21,214,11,251,1,17,28,114,204,145,21,94,16,128,21,70,137,135,0,12,220,234,219,6,220,206,63,64,137,247,9,178,5,75,137,202,198,3,2,2,137,81,29,174,204,38,16,0,10,2,10,102,16,209,11,247,9,214,249,130,10,74,137,215,164,44,0,249,3,195,10,158,16,128,21,70,137,135,0,140,219,116,219,77,137,56,137,2,10,75,137,249,181,3,0,5,1,75,137,245,198,6,2,2,137,66,17,70,137,145,28,210,204,135,0,246,228,240,228,70,137,209,21,174,229,135,0,14,10,215,162,35,0,4,2,206,10,131,10,209,21,150,229,135,16,214,11,206,11,2,3,209,21,168,229,130,0,209,21,116,168,209,16,135,0,38,16,166,16,128,29,4,0,2,28,254,255,194,69,0,255,194,229,64,0,8,5,194,12,250,9,206,205,54,16,4,0,130,21,128,21,2,0,55,10,224,55,133,16,197,101,64,0,193,21,198,205,194,21,8,0,247,9,48,216,66,17,76,137,247,11,184,54,49,3,15,129,247,139,176,54,45,3,247,19,196,54,197,29,202,54,119,17,208,54,247,9,222,12,247,139,154,54,222,129,37,1,151,160,13,0,3,2,247,11,174,54,35,3,247,11,226,54,4,3,196,29,220,54,55,10,216,54,55,33,124,54,17,130,183,8,132,218,223,21,56,170,4,0,247,9,160,12,183,16,146,54,55,10,134,54,55,10,92,54,223,21,156,160,4,0,4,1,192,21,10,0,247,9,158,215,198,21,0,4,119,0,48,234,192,21,10,0,247,9,142,215,175,1,239,251,233,226,235,225,32,7,212,206,166,211,196,211,240,211,126,212,18,213,228,213,252,213,58,214,108,214,136,214,146,214,2,215,16,215,192,216,230,216,4,217,48,217,100,217,120,217,124,217,128,217,136,217,38,210,30,210,77,79,68,32,78,79,84,32,73,77,80,32,69,81,86,32,88,79,82,32,79,82,32,65,78,68,32,80,73,32,80,79,73,78,84,32,73,78,80,32,80,69,69,75,32,82,78,68,32,83,81,82,32,83,73,78,32,67,79,83,32,84,65,78,32,65,84,78,32,69,88,80,32,76,79,71,32,73,78,84,32,70,73,88,32,65,66,83,32,83,71,78,32,67,73,78,84,32,67,68,66,76,32,67,83,78,71,32,69,79,70,32,67,83,82,76,73,78,32,80,79,83,32,76,80,79,83,32,70,82,69,32,76,69,78,32,65,83,67,32,86,65,76,32,85,83,82,32,70,78,32,73,78,75,69,89,32,77,73,68,32,83,84,82,73,78,71,32,83,84,82,32,67,72,82,32,66,73,78,32,79,67,84,32,72,69,88,32,61,62,60,0,43,45,0,47,42,0,34,38,46,40,0,66,79,72,0,36,33,35,37,0,197,21,255,255,102,17,247,9,38,0,75,137,8,206,3,8,12,1,247,9,72,3,78,33,245,6,130,21,145,28,188,228,250,1,247,9,56,3,145,28,188,228,130,21,250,4,135,0,74,137,38,10,75,137,4,206,3,0,142,10,230,29,70,53,77,137,10,1,247,9,136,0,1,135,77,137,13,137,183,21,52,53,209,21,226,218,44,1,214,11,247,9,144,0,247,9,110,0,44,129,166,16,102,16,230,29,220,52,247,9,126,0,197,157,212,52,78,161,22,3,15,130,183,19,202,52,68,16,212,11,14,17,100,24,118,32,2,0,252,130,133,10,197,12,253,9,54,198,129,19,8,1,133,147,133,10,197,12,253,9,54,198,2,1,133,10,197,12,81,29,158,207,150,37,130,21,247,21,255,0,146,52,145,28,10,219,209,1,214,11,4,2,247,9,154,2,209,21,198,228,135,0,122,218,28,254,180,218,65,137,188,206,9,1,2,17,65,137,188,206,135,0,2,33,5,3,20,37,2,97,135,0,68,10,135,0,2,137,247,9,56,0,65,137,192,206,135,0,230,29,76,52,38,17,247,9,134,2,102,16,247,9,34,0,132,21,130,21,247,139,56,52,6,128,206,139,4,128,247,9,234,0,146,36,2,1,247,9,102,2,145,28,134,213,214,11,228,1,247,9,26,0,75,137,0,206,3,0,135,0,247,9,36,2,247,9,10,0,247,9,28,2,209,21,54,228,243,1,247,9,26,0,215,162,92,0,31,2,131,10,247,9,6,2,247,9,22,0,247,9,254,1,209,21,42,228,243,1,38,10,65,137,192,206,3,1,14,17,1,1,38,10,247,9,78,0,214,11,8,3,247,139,200,51,3,128,209,21,114,237,2,1,209,21,232,221,65,137,195,206,135,0,230,29,178,51,38,17,247,9,236,1,102,16,247,9,36,0,132,21,130,21,9,3,247,139,156,51,6,128,206,139,4,128,247,9,78,0,210,11,2,1,247,9,202,1,145,28,142,213,214,11,227,1,247,9,72,0,215,162,94,0,224,2,131,10,247,9,178,1,209,21,42,246,102,16,247,9,50,0,132,21,247,139,98,51,7,129,247,9,156,1,209,21,136,240,209,21,242,243,234,1,247,9,10,0,209,21,92,254,55,10,70,51,227,1,5,17,229,11,21,21,1,33,253,135,225,11,135,0,247,9,14,2,24,137,28,1,25,1,55,17,40,51,16,129,5,3,209,21,110,220,81,36,68,16,7,1,209,21,106,220,193,101,8,0,68,16,164,21,164,21,164,21,164,21,135,0,209,21,112,220,81,17,55,138,253,50,135,0,119,0,246,0,69,137,6,1,13,137,13,137,4,10,81,137,67,137,135,0,87,33,54,0,9,5,230,29,26,51,247,9,214,6,3,129,183,21,16,51,135,0,13,137,102,17,92,3,87,33,38,0,57,5,87,33,48,0,12,4,247,138,186,50,87,33,38,0,81,3,215,162,40,0,78,2,197,229,49,0,197,12,78,97,206,101,26,0,87,137,151,35,64,0,9,6,64,137,197,157,148,50,133,10,119,225,142,50,197,12,133,99,14,1,230,29,194,50,82,137,12,1,183,21,186,50,55,10,120,50,151,35,78,0,2,3,247,138,110,50,133,19,88,137,43,1,214,11,206,101,2,0,151,35,68,0,225,3,197,2,84,137,244,1,85,137,242,1,87,137,87,33,6,0,248,5,249,3,64,137,88,137,133,19,87,33,22,0,19,7,196,157,56,50,132,10,196,12,87,33,30,0,18,6,8,3,87,33,28,0,3,3,196,11,6,2,9,1,196,11,5,2,212,11,5,97,2,1,247,9,82,0,81,29,148,213,214,11,135,0,197,229,32,0,253,9,54,198,249,1,64,137,215,164,41,0,5,3,2,137,74,137,215,164,40,0,251,2,74,137,135,0,196,157,230,49,6,5,196,12,17,29,118,210,247,21,255,0,216,49,135,0,196,157,210,49,7,6,132,10,196,12,17,29,114,210,247,21,1,0,194,49,135,0,196,157,188,49,5,3,132,10,17,29,110,210,55,10,176,49,135,0,166,237,226,237,174,237,16,228,240,237,248,237,204,210,172,210,128,210,5,10,66,137,18,1,14,1,196,229,63,0,196,101,15,0,131,10,87,33,0,16,35,134,197,12,69,12,69,12,69,12,5,81,239,1,196,229,70,0,241,7,135,0,5,10,196,146,196,229,48,0,196,53,248,255,248,2,131,10,197,12,15,135,69,12,13,135,69,12,11,135,5,81,241,1,5,10,196,146,196,229,48,0,4,12,233,2,131,10,69,12,248,134,6,137,66,137,1,1,3,1,132,29,4,0,2,137,65,137,203,206,250,1,252,9,122,210,135,0,130,21,210,11,65,137,199,206,11,1,7,97,3,1,17,1,210,11,135,16,247,9,208,255,196,21,255,255,146,36,135,16,66,137,2,1,135,16,6,1,247,11,220,48,3,129,226,11,135,16,195,10,230,16,38,10,65,137,192,206,4,11,14,17,79,137,65,137,208,206,4,11,23,33,2,0,19,7,132,21,1,129,142,10,131,21,38,17,72,137,5,10,79,137,131,10,197,11,5,129,214,11,216,7,5,11,214,129,2,1,214,11,251,6,6,137,5,17,214,11,131,19,230,21,64,1,247,9,72,20,4,10,22,12,6,135,197,11,3,3,199,129,131,10,197,1,131,10,118,12,4,0,118,11,2,0,78,11,233,133,232,135,182,21,2,0,182,21,2,0,132,10,183,1,74,137,2,20,196,21,254,255,202,139,6,3,196,101,2,0,139,164,250,2,131,10,208,11,135,0,203,197,32,0,196,146,23,161,122,0,17,130,23,161,96,0,247,130,23,161,90,0,11,130,23,161,64,0,7,130,23,161,57,0,5,130,23,161,48,0,2,135,208,11,208,11,135,0,74,137,2,10,215,162,40,0,21,2,2,17,210,11,131,10,230,29,24,48,102,17,85,137,38,10,78,137,4,1,142,10,247,9,30,254,250,1,132,16,130,21,133,21,183,21,252,47,88,137,2,1,196,11,6,3,197,85,128,0,130,10,247,138,235,47,8,1,197,11,6,129,247,139,224,47,2,3,2,128,212,11,20,37,17,29,106,212,68,137,17,17,197,139,12,128,145,16,194,21,6,0,183,138,195,47,4,129,194,157,188,47,130,10,194,12,145,28,118,212,135,0,140,220,46,224,120,220,154,220,146,224,150,224,150,220,116,220,136,220,158,220,196,29,144,47,55,33,142,47,14,134,2,21,66,33,60,3,194,139,6,129,66,12,4,135,4,129,66,12,1,129,20,37,212,11,212,11,239,1,247,11,88,47,49,129,196,29,100,47,196,229,6,0,194,29,102,47,6,129,194,139,3,3,3,6,212,11,1,1,36,41,1,33,36,131,55,17,70,47,55,17,64,47,55,17,58,47,84,17,2,17,247,11,65,47,6,129,247,139,58,47,4,129,2,2,18,10,18,10,18,10,18,10,197,139,10,128,226,149,2,0,197,11,7,129,247,139,30,47,3,129,1,2,202,140,202,140,135,0,138,138,135,0,4,10,135,0,7,137,230,16,55,10,4,47,75,137,27,206,6,72,10,1,214,11,87,33,58,0,41,5,197,229,58,0,215,164,36,0,35,3,13,137,131,21,16,36,5,10,197,212,197,69,64,0,197,0,66,137,9,1,160,0,197,210,197,69,64,0,131,10,66,137,2,1,252,1,251,1,65,137,207,206,13,1,7,97,13,1,6,1,9,1,197,85,0,64,247,138,174,46,4,1,197,85,0,32,183,10,164,46,208,11,135,0,197,85,0,224,119,138,153,46,135,0,100,238,84,238,66,228,74,228,254,241,136,240,78,228,66,238,130,171,116,225,110,225,126,250,232,242,140,247,118,247,198,248,28,249,242,243,42,246,224,252,138,252,118,237,110,237,124,237,140,237,148,237,32,230,114,169,102,169,46,222,134,225,112,169,108,169,110,169,100,169,96,169,98,169,44,222,40,222,42,222,144,225,132,225,128,225,130,225,88,227,92,227,104,227,74,137,246,11,4,0,6,3,215,162,10,0,3,3,215,162,39,0,1,2,135,0,2,137,2,17,74,137,66,137,2,137,5,1,2,137,197,229,2,0,252,2,135,0,69,137,2,137,249,1,224,11,208,11,132,16,81,137,7,1,97,40,209,21,70,220,17,29,250,255,5,139,135,0,67,137,197,139,1,129,225,11,225,11,135,0,5,10,74,137,66,137,135,0,135,0,196,229,48,0,131,10,197,12,68,97,197,12,197,12,5,97,6,135,66,137,7,1,6,1,87,33,153,25,241,131,132,29,14,0,6,137,208,11,135,0,196,29,166,45,228,11,55,33,158,45,6,135,76,33,5,3,3,135,196,229,6,0,247,1,208,11,135,0,215,164,32,0,253,3,195,10,135,0,102,16,230,16,230,21,255,255,1,10,5,10,2,20,66,137,74,137,1,1,41,1,14,138,210,162,8,2,131,10,142,138,151,162,32,0,31,3,66,137,1,1,246,1,206,138,6,7,67,32,4,130,13,3,193,16,118,145,1,0,131,29,2,0,112,161,1,0,8,3,151,164,32,0,253,2,213,11,227,1,206,21,255,255,243,1,133,157,1,0,6,129,23,162,3,0,3,4,67,16,74,137,208,11,208,11,150,37,129,21,135,0,195,21,18,6,247,9,118,234,247,9,98,206,135,0,74,137,2,10,230,16,66,137,2,1,4,1,42,1,80,137,40,1,8,1,69,137,29,1,41,1,1,1,34,1,4,10,81,137,67,137,74,137,214,11,215,162,43,0,15,2,194,11,4,6,130,10,254,3,247,9,242,238,131,10,77,137,13,137,196,11,2,6,209,21,186,221,209,21,46,227,208,11,132,16,135,0,87,33,54,0,5,5,102,16,247,9,172,0,3,129,129,21,131,21,135,0,214,11,130,10,220,1,133,12,9,3,87,137,197,10,17,2,77,137,13,137,247,9,114,0,194,10,209,1,209,21,90,168,206,1,197,10,197,12,102,17,85,137,133,21,81,29,230,215,16,1,197,10,16,2,85,137,86,137,247,9,136,238,225,11,82,137,3,1,209,21,4,227,3,1,85,137,209,21,250,226,130,10,88,137,180,1,197,10,228,2,64,137,196,157,70,44,132,10,196,12,17,29,224,215,244,1,136,227,130,227,124,227,72,225,186,227,148,227,220,227,87,137,4,10,71,137,1,1,13,137,209,11,197,139,1,129,209,11,86,137,85,137,78,137,5,1,247,9,38,250,209,21,224,226,2,1,209,21,218,226,88,137,135,0,74,137,2,10,66,137,5,1,23,1,194,148,194,229,48,0,194,12,87,33,56,0,104,3,87,137,82,137,5,1,196,11,4,6,247,9,252,237,1,1,64,137,209,21,170,231,145,16,88,137,209,29,204,43,135,0,87,33,56,0,85,2,69,137,2,137,2,137,160,0,197,85,64,128,230,29,180,43,247,21,255,255,174,43,68,137,38,17,247,9,198,237,241,21,28,220,254,255,74,137,215,162,40,0,18,2,131,10,82,137,7,1,230,21,0,255,196,11,6,6,209,21,186,221,3,1,64,137,230,29,126,43,130,10,215,162,44,0,239,3,88,137,209,21,38,220,68,16,209,11,145,16,2,3,145,21,130,126,140,21,183,21,94,43,135,0,74,137,215,162,44,0,14,2,230,16,131,10,74,137,215,162,44,0,7,3,215,162,10,0,4,3,64,137,208,11,214,11,135,0,131,21,135,0,2,10,66,137,3,1,7,1,131,10,251,1,23,161,46,0,2,2,130,10,249,1,194,10,1,6,135,0,2,137,215,162,34,0,18,2,131,10,209,21,110,220,209,16,4,10,215,162,10,0,5,3,215,164,34,0,2,3,132,10,248,1,17,17,208,11,247,21,0,255,238,42,135,0,194,29,34,43,19,3,210,11,17,3,210,11,133,36,251,2,247,11,216,42,6,129,247,139,210,42,2,3,2,128,212,11,212,11,17,29,94,217,145,18,132,16,208,11,135,0,84,220,90,220,78,220,230,16,77,137,3,1,65,137,188,206,2,1,131,21,135,0,144,37,135,0,85,137,86,137,85,137,86,137,64,137,247,9,172,248,135,0,74,137,215,164,44,0,2,2,74,137,135,0,2,137,247,11,142,42,26,2,183,10,136,42,247,139,92,42,21,3,247,11,122,42,3,3,55,11,120,42,15,1,23,35,210,217,12,3,119,0,200,204,247,11,104,42,5,7,247,139,58,42,2,3,183,8,70,206,55,10,88,42,92,0,247,9,222,11,183,10,38,42,6,2,183,8,50,206,55,10,66,42,247,9,68,0,119,0,0,222,55,17,108,42,193,21,150,160,194,21,5,0,247,9,116,203,55,33,4,42,17,130,55,17,32,42,183,8,8,206,247,9,30,0,247,9,38,0,36,41,55,8,92,225,2,1,55,10,8,42,55,10,58,42,226,1,55,10,52,42,119,0,128,243,247,11,248,41,2,128,55,11,242,41,135,0,247,9,30,0,5,28,2,0,193,21,112,218,194,21,10,0,247,9,36,203,66,17,76,137,192,21,10,0,247,9,250,202,135,0,192,29,182,41,4,36,5,135,16,36,55,32,174,41,250,135,208,11,4,16,135,0,32,247,32,243,244,242,239,235,229,32,150,229,92,0,193,29,140,41,64,20,130,17,144,20,240,53,0,32,252,255,8,3,136,20,130,18,66,12,72,11,96,11,1,133,4,134,6,137,144,20,144,18,144,18,209,11,102,20,102,20,102,20,102,18,119,0,104,35,192,19,129,29,4,0,4,4,192,12,130,21,3,5,10,1,130,21,9,5,66,32,4,2,142,45,4,0,1,2,0,10,0,12,1,135,0,11,198,101,6,0,192,11,92,0,130,21,131,21,129,21,128,21,66,224,1,128,129,96,193,10,3,129,19,164,252,3,92,0,2,11,92,0,214,11,55,2,113,1,214,11,52,3,110,1,24,219,46,219,42,219,38,219,34,219,30,219,0,0,11,3,38,10,92,0,8,2,252,1,6,7,250,1,4,4,248,1,2,5,246,1,245,7,230,21,255,255,92,0,193,29,212,40,241,11,18,0,5,129,192,11,5,6,68,28,2,0,92,0,192,11,251,4,247,101,20,0,186,40,92,0,192,29,180,40,224,11,55,32,172,40,47,131,200,29,170,40,32,17,55,16,162,40,55,16,160,40,4,19,92,0,128,21,5,3,192,53,0,255,6,2,12,32,28,7,0,21,192,12,4,96,92,0,5,137,128,21,249,3,192,53,0,255,250,2,12,32,244,6,1,19,193,12,1,97,194,29,106,40,226,11,183,32,98,40,10,131,202,29,96,40,98,16,183,16,88,40,183,16,86,40,192,12,4,96,216,1,7,137,192,29,74,40,55,32,72,40,2,134,0,18,204,1,3,137,192,29,58,40,55,32,56,40,250,134,4,20,55,20,46,40,55,16,40,40,212,11,92,0,193,21,4,0,192,29,100,40,55,20,96,40,66,16,194,12,130,97,160,24,66,126,6,16,4,23,92,0,193,21,2,0,241,1,193,21,1,0,238,1,0,21,1,21,9,17,4,16,92,0,230,29,54,40,183,17,52,40,92,0,0,21,2,20,11,3,1,19,129,10,18,37,8,2,67,126,8,17,132,16,247,29,26,40,22,40,92,0,18,137,5,137,230,29,12,40,14,229,92,0,193,21,1,0,5,1,193,21,2,0,2,1,193,21,4,0,192,29,244,39,0,229,38,24,66,126,92,0,38,21,38,21,38,21,38,21,92,0,129,21,1,1,1,21,193,101,8,0,102,24,102,24,102,24,102,24,92,0,129,21,1,1,1,21,102,28,2,0,102,18,92,0,166,23,92,0,38,23,92,0,128,19,1,148,14,148,54,148,1,0,38,10,78,208,92,0,128,21,129,21,130,21,18,144,82,144,193,0,82,144,92,0,129,29,4,0,4,1,129,29,8,0,145,21,145,21,145,21,137,21,214,11,92,0,158,21,92,0,1,21,3,1,1,21,145,21,145,21,145,21,137,21,92,0,156,21,92,0,131,21,130,21,129,21,128,21,193,32,1,7,67,16,195,10,2,129,144,148,252,1,92,0,192,29,6,39,160,21,160,21,160,21,160,21,160,21,160,21,2,1,192,29,244,38,160,21,160,21,32,21,32,21,55,32,230,38,3,135,55,16,226,38,92,0,7,137,130,21,206,3,113,1,193,29,212,38,0,21,1,2,64,18,119,32,204,38,14,134,17,32,11,3,66,24,193,101,8,0,226,53,0,64,2,2,193,101,12,0,119,16,176,38,240,1,92,0,1,137,2,28,254,255,66,12,6,129,66,12,23,128,38,10,38,10,16,36,23,1,20,37,81,36,66,18,2,98,13,133,136,16,201,11,4,129,161,32,4,6,68,24,92,0,161,32,252,4,247,101,8,0,116,38,92,0,6,137,192,101,6,0,38,18,38,24,38,24,38,24,193,101,10,0,102,20,102,20,102,20,102,18,119,0,170,16,129,19,247,9,30,0,119,224,70,38,128,29,2,0,194,29,60,38,182,16,2,0,119,96,52,38,193,10,2,129,18,148,252,1,92,0,119,32,40,38,1,130,135,0,14,137,206,11,2,3,206,101,0,128,92,0,192,21,7,0,5,1,192,21,10,0,2,1,192,21,12,0,55,17,86,38,247,9,76,199,11,1,247,9,164,11,2,1,247,9,178,11,130,21,129,21,55,17,62,38,247,9,68,199,55,10,54,38,92,0,150,37,214,11,214,11,38,10,206,157,42,38,142,10,92,0,133,21,247,9,32,227,237,1,55,17,24,38,247,229,8,0,18,38,16,1,55,21,208,37,92,0,195,29,202,37,1,2,4,137,247,21,255,255,194,37,55,17,248,37,38,21,49,1,55,17,240,37,38,21,192,29,156,38,55,16,172,37,12,2,192,21,63,0,24,1,215,162,10,0,12,3,55,35,138,37,98,134,230,16,212,11,92,0,247,9,156,7,87,32,18,5,18,2,55,137,192,29,130,37,2,3,246,128,4,137,192,21,63,0,247,9,164,198,247,9,160,198,247,9,136,201,247,9,112,195,247,9,146,201,195,21,18,5,74,137,215,162,10,0,99,3,14,33,98,3,74,137,215,162,44,0,212,2,55,37,56,37,1,134,4,25,131,10,244,1,230,21,44,0,102,16,1,10,230,16,215,162,34,0,3,2,246,148,4,0,142,10,215,162,10,0,5,3,246,164,4,0,2,3,129,10,248,1,5,16,166,19,246,16,2,0,193,53,0,255,27,2,247,9,196,254,194,29,234,36,131,21,64,16,2,3,210,148,66,126,131,21,129,21,17,144,197,139,1,129,17,138,209,157,208,36,209,157,205,36,55,224,202,36,183,16,196,36,151,37,44,0,192,3,45,1,15,137,1,21,64,16,0,24,198,129,38,17,102,16,247,9,154,243,51,1,50,1,49,1,64,12,15,129,64,12,8,129,55,9,174,0,226,237,196,220,164,223,166,237,196,220,164,223,55,9,130,0,174,237,190,220,164,223,55,9,74,0,248,237,212,220,164,223,132,19,55,10,198,36,247,11,136,36,2,128,247,16,128,36,214,11,92,0,132,21,74,137,215,162,44,0,152,3,215,162,10,0,139,3,247,11,106,36,136,6,13,137,214,11,196,29,154,36,124,0,252,255,150,37,248,1,129,21,131,21,0,29,250,255,191,1,130,21,2,4,94,17,228,1,151,35,0,72,14,4,151,35,0,200,4,135,10,2,246,139,3,0,7,2,194,11,27,2,182,21,2,0,182,21,2,0,92,0,6,137]);Module["FS_createDataFile"]("/","basic10_2.rom",fileData2,true,true,false);var fileData3=[];fileData3.push.apply(fileData3,[5,137,130,21,10,129,16,2,118,12,4,0,118,11,2,0,78,11,245,133,244,135,212,11,237,1,228,11,4,1,214,11,3,3,3,128,20,37,102,17,212,11,92,0,12,137,1,21,64,20,15,2,247,139,200,35,249,3,192,29,206,35,128,10,192,69,1,0,55,32,198,35,69,134,200,21,11,0,201,149,1,0,3,21,201,160,99,2,129,21,96,129,80,32,95,4,195,10,11,7,130,21,90,129,136,32,89,4,102,16,1,24,247,9,174,0,129,101,16,36,243,1,3,29,252,255,194,156,3,0,247,9,156,0,64,96,38,16,211,11,1,3,92,0,36,41,230,21,10,0,183,10,114,35,247,69,1,0,108,35,0,21,208,11,61,2,3,19,192,29,96,35,3,96,247,32,92,35,16,134,3,224,129,21,49,129,129,10,11,133,80,16,195,10,9,3,130,21,42,5,130,10,4,133,144,16,247,9,80,0,246,128,7,137,3,29,254,255,194,156,3,0,247,9,64,0,248,129,64,96,246,133,55,32,34,35,243,130,211,29,26,35,55,16,22,35,11,149,132,10,203,53,0,1,4,3,32,138,193,10,253,6,4,1,32,10,193,229,2,0,252,6,247,139,236,34,1,3,92,0,119,0,208,214,5,137,9,137,10,137,69,16,66,33,2,131,133,16,66,16,1,10,197,11,10,3,194,11,6,129,133,12,2,134,129,96,2,133,194,12,246,1,197,21,255,255,135,0,206,53,0,255,7,2,183,147,191,35,206,21,17,5,230,21,1,0,92,0,5,137,158,21,92,0,214,11,2,3,158,85,92,0,158,69,92,0,142,31,0,0,92,0,182,31,2,0,2,0,78,10,142,69,92,0,150,37,214,11,214,11,230,29,132,34,206,237,126,34,92,0,214,11,247,9,230,4,206,29,112,34,92,0,247,9,220,4,92,0,151,35,0,112,218,130,223,21,56,170,4,0,247,9,2,4,130,21,130,12,194,12,194,237,92,34,247,9,34,0,183,96,84,34,247,9,48,215,247,9,100,215,128,21,128,10,192,69,1,0,55,16,46,34,223,21,156,160,4,0,119,0,10,214,192,29,46,34,128,96,55,32,22,34,39,5,193,29,36,34,193,237,30,34,14,3,129,12,194,11,7,129,195,29,20,34,192,16,128,96,224,24,66,126,4,1,195,29,4,34,208,20,66,126,183,96,252,33,135,0,128,19,159,5,128,10,192,69,1,0,14,16,192,237,220,33,1,16,192,109,220,33,55,32,222,33,3,130,183,21,204,33,2,1,7,137,1,10,192,29,192,33,223,21,56,170,4,0,55,16,186,33,247,29,180,33,182,33,247,29,186,33,182,33,247,29,180,33,174,33,119,96,168,33,192,109,158,33,195,29,160,33,69,16,11,3,1,11,5,129,1,96,80,20,3,32,253,135,4,1,193,96,99,24,192,32,253,130,194,29,136,33,183,32,134,33,29,134,202,139,16,128,210,11,210,11,11,3,98,97,247,9,156,4,128,20,3,10,131,210,195,12,192,96,129,12,16,10,66,126,210,11,235,1,128,20,6,129,192,12,5,129,192,12,2,129,18,10,18,10,18,10,18,10,224,1,223,21,156,160,4,0,55,33,48,33,1,135,131,1,92,0,128,29,2,0,2,1,128,21,15,5,129,21,13,7,193,10,118,96,2,0,78,224,8,7,14,32,1,4,14,16,92,0,133,21,197,53,0,255,4,3,5,137,214,11,253,3,133,151,129,19,193,53,0,255,248,2,247,9,200,250,119,224,240,32,194,29,234,32,142,16,102,16,4,3,82,145,66,126,183,16,220,32,92,0,128,21,129,21,130,19,14,96,206,53,0,255,13,2,130,109,2,0,192,11,2,3,82,148,2,126,194,237,188,32,183,96,184,32,183,224,182,32,92,0,15,137,142,21,92,0,214,11,209,3,0,10,128,215,38,16,92,0,55,17,240,32,247,9,82,4,196,29,232,32,55,10,228,32,214,11,92,0,247,9,52,6,92,0,247,9,66,6,92,0,133,21,247,9,208,221,102,16,166,16,92,0,0,10,193,21,24,6,133,21,66,17,194,69,248,255,194,101,48,0,161,144,128,10,161,0,5,12,133,12,133,12,244,2,102,16,38,16,92,0,0,10,193,21,32,6,133,21,66,17,194,69,254,255,194,101,48,0,161,144,128,10,161,0,5,12,246,2,102,16,38,16,92,0,0,10,193,21,22,6,133,21,66,17,194,69,240,255,151,32,9,0,3,7,194,101,55,0,2,1,194,101,48,0,161,144,128,10,161,0,5,12,133,12,133,12,133,12,237,2,102,16,38,16,92,0,118,12,4,0,118,11,2,0,78,11,6,133,5,135,182,21,2,0,182,21,2,0,92,0,6,137,130,21,129,19,247,9,64,0,78,16,92,0,130,21,129,19,247,9,52,0,206,16,92,0,142,101,1,133,92,0,6,137,142,229,251,1,0,10,130,21,2,4,128,10,2,11,129,19,2,4,192,10,1,11,247,9,190,252,197,11,240,5,192,11,1,3,1,11,78,16,92,0,0,10,67,16,3,128,3,11,230,129,128,10,194,11,28,3,3,128,2,11,192,85,2,0,133,16,1,10,131,32,2,130,194,12,252,1,133,32,8,3,161,0,2,12,193,12,131,32,249,130,131,224,129,10,246,1,128,12,2,134,1,11,3,11,192,11,1,3,1,11,135,0,11,137,228,228,224,228,212,228,202,228,206,228,78,10,92,0,142,85,92,0,78,10,142,69,92,0,128,19,128,77,2,0,142,69,14,80,92,0,78,10,248,1,118,10,2,0,142,85,92,0,156,21,92,0,193,21,3,0,2,1,193,21,2,0,247,9,36,0,208,11,14,2,247,9,38,0,192,229,18,0,72,16,1,12,6,134,247,9,250,218,247,9,28,219,247,9,246,217,92,0,54,137,52,137,192,29,240,30,192,101,0,1,135,0,131,29,4,0,182,21,2,0,130,21,55,17,34,31,247,9,48,218,196,29,26,31,55,10,22,31,194,11,20,131,197,21,6,0,215,162,46,0,16,3,208,148,197,10,4,3,135,126,208,149,32,0,67,127,194,10,3,6,247,9,116,218,135,0,215,162,46,0,4,3,56,137,208,149,32,0,67,127,197,21,4,0,208,148,197,10,4,3,132,126,208,149,32,0,67,127,194,10,241,6,247,9,60,218,135,0,247,21,1,0,114,31,92,0,59,137,247,21,255,255,104,31,92,0,55,10,98,31,92,0,247,9,2,0,92,0,192,29,96,30,192,229,18,1,3,18,10,3,3,140,9,135,3,138,195,0,3,96,195,101,18,0,247,9,18,0,8,10,135,0,247,9,52,218,247,9,10,218,247,9,82,218,247,1,203,149,26,0,247,9,34,218,247,9,68,218,247,9,244,217,63,10,218,26,247,21,2,0,214,26,247,9,50,218,135,0,195,29,6,31,202,7,247,9,20,255,208,181,1,0,134,3,3,10,3,210,3,96,195,101,17,0,135,0,38,10,247,9,228,255,215,162,26,0,1,2,78,10,92,0,247,9,208,255,5,16,197,101,17,0,193,21,18,5,215,162,26,0,24,3,87,32,34,6,24,134,201,148,136,138,15,2,102,16,38,16,192,10,195,229,0,1,247,9,2,218,247,9,172,217,247,9,206,217,247,9,168,216,128,21,129,21,87,164,10,0,229,2,201,149,10,0,135,0,25,137,55,17,220,29,102,17,195,29,126,29,230,16,206,109,122,29,128,19,194,29,128,29,183,32,126,29,26,134,55,9,234,0,250,1,9,1,210,11,5,3,128,34,3,134,131,34,1,135,128,18,210,11,240,1,247,9,170,0,247,9,184,0,0,33,3,134,3,33,1,135,0,17,65,33,247,135,146,36,227,1,14,32,36,3,194,29,62,29,55,9,174,0,253,1,11,1,210,11,2,2,210,11,248,1,128,36,246,2,226,16,129,24,247,9,62,0,205,1,247,9,106,0,247,9,120,0,0,33,4,3,65,33,250,135,146,36,231,1,195,0,229,144,195,0,229,144,1,10,65,217,247,9,24,0,186,1,247,16,236,28,206,224,183,21,232,28,133,21,196,29,52,29,55,10,48,29,135,0,3,32,3,3,19,148,66,126,135,0,67,96,135,0,38,16,166,16,230,16,131,20,0,10,128,212,129,146,194,20,247,9,210,249,4,126,129,10,129,12,193,12,131,21,130,21,128,21,135,0,247,9,216,255,129,100,5,10,133,210,197,12,65,97,133,104,135,0,4,10,213,139,5,3,68,213,196,0,68,213,196,0,135,0,85,165,135,0,202,139,3,128,210,11,12,129,7,1,129,20,8,129,193,12,4,129,193,12,1,129,146,36,210,11,210,11,132,0,212,11,212,11,132,0,133,17,0,21,3,21,55,17,168,28,248,9,64,4,196,29,160,28,55,10,156,28,92,0,131,19,14,10,38,10,38,10,230,16,38,16,102,16,166,16,230,16,38,17,102,17,230,21,238,255,230,21,65,0,133,29,26,0,118,97,24,0,0,10,1,10,2,10,3,10,118,33,24,0,111,4,68,149,23,161,43,0,35,3,23,161,45,0,4,2,182,10,22,0,29,1,68,149,196,229,48,0,81,5,10,2,151,45,2,0,238,255,6,2,246,139,19,0,17,3,246,10,20,0,14,1,23,161,9,0,85,6,182,10,2,0,8,6,247,9,2,5,247,9,36,5,3,97,66,11,66,11,64,11,118,33,24,0,224,5,9,1,246,139,23,0,1,3,3,11,246,96,20,0,131,29,26,0,197,10,118,17,8,0,192,11,6,2,193,11,4,2,194,11,2,2,195,11,49,3,246,139,19,0,2,3,54,11,2,0,246,11,2,0,2,4,54,10,2,0,182,109,20,0,2,0,3,6,85,5,119,0,192,0,23,32,50,51,8,130,247,9,156,4,142,10,246,10,2,0,247,6,119,0,170,0,247,9,102,4,206,101,3,0,246,1,23,161,254,255,209,2,246,139,19,0,206,2,118,138,19,0,182,29,2,0,20,0,188,1,0,10,1,10,2,10,3,10,119,0,188,0,196,197,32,0,196,229,20,0,2,3,196,10,187,2,87,163,64,0,184,6,229,197,32,0,118,149,18,0,68,149,118,33,24,0,176,130,246,16,26,0,3,10,23,161,43,0,5,3,23,161,45,0,6,2,182,138,23,0,68,149,118,33,24,0,153,130,196,229,48,0,150,5,23,161,9,0,147,6,215,32,64,1,243,134,195,12,196,96,195,12,195,12,3,97,237,1,6,137,192,11,4,5,206,10,247,9,28,4,252,128,247,9,120,2,206,229,3,0,182,10,2,0,243,5,206,10,247,9,6,4,252,134,206,101,128,0,181,7,151,35,255,0,232,6,3,138,131,208,195,0,2,138,66,208,194,0,1,138,1,208,193,0,0,138,128,211,192,0,54,12,22,0,247,9,130,3,67,11,66,11,65,11,64,11,211,133,210,135,54,16,20,0,118,16,22,0,182,16,24,0,246,16,26,0,150,37,133,21,132,21,131,21,130,21,129,21,128,21,135,0,133,21,128,21,129,19,2,10,3,10,206,21,6,0,230,21,3,69,9,1,133,21,128,21,129,21,130,21,131,19,206,21,16,0,230,21,3,68,230,21,1,0,230,21,18,6,230,21,24,0,102,17,38,17,55,17,110,26,166,41,38,10,38,10,182,109,14,0,12,0,64,12,118,12,6,0,192,0,54,144,2,0,2,2,4,10,61,1,177,0,0,12,0,138,193,0,64,208,1,138,194,0,129,208,2,138,195,0,194,208,3,138,246,229,128,0,2,0,17,5,35,3,192,11,6,5,247,9,42,3,246,10,2,0,249,6,27,1,247,9,128,1,142,10,246,229,3,0,2,0,241,6,19,3,23,32,204,204,11,134,151,45,2,0,253,255,7,6,247,9,44,1,206,10,246,101,2,0,2,0,2,1,247,9,156,2,182,10,2,0,237,2,4,10,247,9,18,1,247,9,136,1,196,11,2,2,206,10,248,1,133,29,20,0,133,109,16,0,246,139,18,0,22,3,118,17,2,0,247,9,146,1,54,140,18,0,57,134,151,35,255,255,54,5,133,29,2,0,133,35,50,6,133,227,54,138,18,0,118,17,20,0,54,10,16,0,1,1,133,99,246,10,12,0,133,29,12,0,133,237,20,0,197,10,118,17,4,0,197,10,246,139,18,0,8,2,182,99,16,0,5,7,133,237,16,0,247,9,166,1,6,1,247,9,160,1,213,149,46,0,213,149,48,0,133,29,4,0,246,11,16,0,1,6,133,10,133,237,16,0,247,9,176,1,246,139,18,0,44,3,20,1,246,229,5,0,12,0,246,11,16,0,211,7,133,29,12,0,133,237,20,0,197,10,118,17,4,0,133,237,16,0,197,10,247,9,88,1,247,9,128,1,142,237,16,0,149,157,19,0,132,19,4,4,4,11,213,149,45,0,2,1,213,149,43,0,205,149,48,0,196,229,10,0,2,5,141,138,251,1,196,101,58,0,133,10,21,145,213,149,32,0,133,237,20,0,198,101,8,0,132,21,55,10,224,24,182,21,4,0,150,37,118,12,2,0,118,17,2,0,135,0,38,16,102,16,166,16,230,16,247,9,112,1,247,9,108,1,67,11,66,11,65,11,64,11,131,101,66,11,65,11,64,11,68,11,130,101,65,11,64,11,68,11,129,101,64,11,68,11,128,101,68,11,135,0,196,21,16,0,247,9,62,1,230,16,166,16,102,16,38,16,247,9,50,1,247,9,46,1,247,9,42,1,131,109,6,0,66,11,65,11,64,11,130,109,4,0,65,11,64,11,129,109,2,0,64,11,128,99,4,11,239,5,196,10,233,6,198,101,8,0,135,0,102,17,197,21,3,0,247,9,80,1,68,12,197,10,251,6,133,21,135,0,214,11,133,29,14,0,118,17,20,0,213,149,37,0,118,10,18,0,158,1,87,33,20,0,42,6,197,11,41,3,39,5,38,17,38,16,102,16,166,16,230,16,192,21,0,128,1,10,2,10,3,10,197,10,9,3,247,9,108,255,247,9,174,0,247,9,170,0,247,9,166,0,245,1,4,10,131,101,66,11,65,11,64,11,130,101,65,11,64,11,129,101,64,11,128,101,68,11,132,101,196,37,10,0,2,6,182,10,2,0,135,0,196,101,5,0,247,1,118,17,22,0,118,33,16,0,9,135,54,12,8,0,3,134,213,149,45,0,135,0,213,149,32,0,135,0,54,12,8,0,180,135,133,10,118,33,16,0,176,135,135,0,196,37,10,0,4,6,213,149,49,0,196,229,10,0,133,45,6,0,2,2,213,149,46,0,133,45,14,0,9,131,196,101,48,0,21,145,4,10,247,9,166,254,247,9,28,255,239,1,87,169,48,0,253,3,87,163,46,0,6,2,87,173,255,255,48,0,3,134,205,149,48,0,133,10,135,0,161,0,0,12,1,12,2,12,3,12,135,0,23,32,204,204,5,135,161,0,247,9,234,255,182,10,2,0,38,16,102,16,166,16,230,16,161,0,247,9,216,255,161,0,247,9,210,255,8,1,38,16,102,16,166,16,230,16,247,9,26,0,247,9,22,0,131,101,66,11,65,11,64,11,130,101,65,11,64,11,129,101,64,11,128,101,135,0,195,12,66,12,65,12,64,12,135,0,214,11,92,0,206,11,1,128,14,11,92,0,206,69,0,128,92,0,192,21,1,0,206,11,3,3,1,128,0,11,14,16,92,0,54,10,4,0,54,10,6,0,206,11,6,3,206,12,206,21,0,129,14,12,54,10,2,0,92,0,128,19,14,10,38,10,38,16,38,10,129,29,2,0,2,6,20,3,1,11,102,12,194,21,144,0,54,138,4,0,65,12,2,135,194,10,252,1,118,144,5,0,1,138,129,208,193,0,22,12,1,12,54,140,3,0,78,16,92,0,129,21,130,21,38,10,38,10,166,16,102,16,92,0,182,21,2,0,182,21,2,0,2,10,130,10,129,21,78,12,65,12,102,12,64,144,1,138,193,0,193,229,129,0,23,5,11,3,193,37,15,0,18,5,192,0,0,138,128,221,3,0,64,12,66,12,193,10,252,6,2,11,6,133,7,6,22,12,1,135,2,11,142,16,92,0,22,12,252,135,6,137,2,10,246,1,230,21,194,104,230,21,33,162,230,21,218,15,230,21,73,65,92,0,230,11,246,11,2,0,5,3,246,101,0,128,2,0,1,1,230,11,102,17,38,17,247,11,238,21,3,2,55,17,232,21,14,10,230,16,166,16,102,16,38,16,38,10,132,17,196,101,24,0,0,19,36,3,192,12,14,12,0,138,192,0,204,213,128,0,52,138,1,0,38,10,133,17,197,101,18,0,65,19,121,3,193,12,14,12,1,138,193,0,205,213,128,0,53,138,1,0,2,16,64,224,12,128,0,11,192,37,56,0,118,5,166,19,102,16,197,101,6,0,102,17,5,17,10,1,117,1,192,37,56,0,94,5,166,29,2,0,166,16,196,101,6,0,38,17,192,11,15,3,193,21,3,0,64,32,1,7,1,16,132,19,204,12,100,12,100,12,100,12,246,10,2,0,192,10,193,10,246,6,65,21,66,21,67,21,68,21,192,37,8,0,14,6,4,138,196,208,196,0,3,138,131,208,195,0,2,138,66,208,194,0,1,138,193,0,192,229,8,0,239,1,192,11,7,3,161,0,1,12,2,12,3,12,4,12,192,10,249,6,133,21,182,45,4,0,6,0,11,2,68,99,67,11,66,11,65,11,67,105,66,11,65,11,66,105,65,11,65,105,24,1,118,10,2,0,68,227,131,11,130,11,129,11,67,233,130,11,129,11,66,233,129,11,65,233,11,128,65,10,66,10,67,10,68,10,196,101,1,0,67,11,66,11,65,11,118,10,2,0,43,1,128,16,3,19,214,11,192,0,195,140,3,80,214,12,3,12,204,16,182,29,12,0,20,0,16,1,67,19,193,0,195,140,67,80,214,12,3,12,205,16,214,11,5,17,197,101,8,0,37,25,37,25,37,25,37,25,37,25,128,21,129,21,130,21,131,21,132,21,4,2,196,29,124,20,55,10,120,20,133,21,198,101,10,0,92,0,128,21,161,0,193,53,0,255,7,3,161,0,1,12,2,12,3,12,4,12,128,10,246,1,5,134,68,11,67,11,66,11,65,11,240,1,193,139,27,129,20,2,102,16,142,80,206,80,22,81,3,2,0,10,14,10,18,1,194,0,129,208,2,138,195,0,194,208,3,138,196,0,3,209,4,138,192,229,8,0,216,1,192,10,196,12,67,12,66,12,65,140,250,128,192,0,192,139,17,2,193,140,1,80,214,12,1,12,133,17,197,101,26,0,85,16,149,16,213,16,21,17,198,101,4,0,182,29,12,0,20,0,175,1,6,137,0,10,1,10,2,10,3,10,4,10,14,10,231,1,38,10,119,0,236,255,230,11,102,17,38,17,247,11,202,19,3,2,55,17,196,19,14,10,230,16,166,16,102,16,38,16,198,229,4,0,195,21,128,0,2,10,132,17,196,101,26,0,0,19,230,3,192,12,66,11,0,138,192,0,204,208,52,138,1,0,133,17,197,101,18,0,65,19,218,3,193,12,66,11,2,12,2,12,166,16,1,138,193,0,205,208,53,138,1,0,64,96,192,224,38,16,0,10,2,17,194,101,8,0,128,10,226,11,253,3,1,10,67,17,195,101,8,0,129,10,227,11,253,3,1,32,3,4,64,17,5,17,1,1,0,17,193,21,3,0,197,101,6,0,161,0,77,12,101,12,101,12,101,12,206,10,193,10,246,6,1,10,2,10,3,10,4,10,240,139,6,0,73,2,240,139,7,0,43,2,240,11,4,0,26,2,240,11,2,0,10,2,200,11,87,3,48,18,6,0,8,10,68,16,1,10,2,10,3,10,234,1,48,28,2,0,6,0,48,18,4,0,48,10,2,0,8,10,132,16,67,16,1,10,2,10,221,1,48,28,4,0,6,0,48,28,2,0,4,0,48,18,2,0,8,10,196,16,131,16,66,16,1,10,207,1,48,156,4,0,6,0,240,0,6,0,48,156,2,0,4,0,240,0,4,0,48,146,2,0,240,0,2,0,8,138,200,0,4,138,196,208,196,0,3,138,131,208,195,0,2,138,66,208,194,0,1,138,193,0,16,12,16,12,16,12,8,12,12,134,197,101,6,0,68,99,67,11,66,11,65,11,67,105,66,11,65,11,66,105,65,11,65,105,192,229,6,0,161,0,1,12,2,12,3,12,4,12,155,1,119,0,238,253,230,11,102,17,38,17,247,11,84,18,3,2,55,17,78,18,14,10,230,16,166,16,102,16,38,16,38,10,230,21,58,0,195,21,128,0,2,10,133,17,197,101,18,0,68,19,90,3,196,12,66,11,4,138,196,0,4,11,196,96,196,10,205,208,53,138,1,0,128,17,192,101,26,0,1,18,76,3,193,12,66,11,2,12,2,12,166,16,1,138,193,0,68,96,38,17,200,208,48,138,1,0,1,18,16,10,2,18,16,10,3,18,16,10,4,18,8,10,13,1,197,101,6,0,68,99,67,11,66,11,65,11,67,105,66,11,65,11,66,105,65,11,65,105,12,1,197,101,6,0,68,227,131,11,130,11,129,11,67,233,130,11,129,11,66,233,129,11,65,233,193,101,0,128,196,12,67,12,66,12,65,12,72,12,96,12,96,12,96,12,192,101,6,0,246,10,4,0,8,3,193,11,3,129,193,139,225,129,238,1,193,139,209,128,235,1,4,18,3,24,2,24,1,24,119,0,10,253,11,137,119,0,154,253,38,17,38,16,128,29,4,0,127,129,109,3,55,17,100,17,192,12,0,138,192,0,192,229,128,0,38,16,166,29,12,0,166,29,12,0,166,29,12,0,166,29,12,0,206,69,128,255,206,85,0,64,230,29,190,0,230,29,184,0,230,29,178,0,230,29,172,0,166,29,14,0,166,29,14,0,166,29,14,0,166,29,14,0,230,29,166,0,230,29,160,0,230,29,154,0,230,29,148,0,55,9,26,250,136,240,100,238,86,243,192,21,3,0,166,29,14,0,166,29,14,0,166,29,14,0,166,29,14,0,166,29,14,0,166,29,14,0,166,29,14,0,166,29,14,0,55,9,236,249,254,241,100,238,132,243,206,229,128,0,192,10,231,6,128,29,16,0,128,12,12,134,230,29,86,0,230,29,80,0,230,29,74,0,230,29,68,0,55,9,194,249,136,240,172,243,192,0,0,138,0,12,14,96,2,128,206,101,0,128,182,21,20,0,182,21,20,0,182,21,20,0,182,21,20,0,198,101,10,0,128,21,132,21,55,10,134,16,92,0,213,63,87,169,216,38,247,91,23,64,220,20,10,91,197,60,181,64,243,4,249,51,100,222,5,137,206,11,11,129,151,35,176,67,19,135,4,130,151,45,2,0,51,15,14,135,55,10,82,16,6,137,151,35,176,195,8,131,14,10,54,10,2,0,54,10,4,0,54,10,6,0,92,0,230,11,102,17,38,17,247,11,48,16,3,2,55,17,42,16,14,10,230,16,166,16,102,16,38,16,38,10,38,10,38,10,166,29,26,0,166,29,26,0,166,29,26,0,166,29,26,0,230,29,184,1,230,29,178,1,230,29,172,1,230,29,166,1,55,9,4,249,136,240,106,244,129,19,118,16,12,0,193,69,0,128,193,37,255,61,20,4,193,37,127,64,9,4,55,9,230,248,224,251,136,244,118,17,10,0,206,69,0,128,129,19,193,37,255,61,5,4,193,229,128,0,182,10,8,0,248,1,78,16,129,17,193,101,8,0,102,24,102,24,102,24,102,24,102,24,102,24,102,24,102,24,55,9,172,248,136,240,222,244,136,240,252,244,100,238,6,245,136,240,24,245,100,238,50,245,100,238,84,245,84,238,118,245,254,241,142,245,193,21,40,246,166,29,6,0,166,29,6,0,166,29,6,0,166,29,6,0,102,24,102,24,102,24,102,24,92,0,102,24,102,24,102,24,102,24,92,0,166,29,22,0,166,29,22,0,166,29,22,0,166,29,22,0,92,0,166,29,14,0,166,29,14,0,166,29,14,0,166,29,14,0,102,24,102,24,102,24,102,24,92,0,166,29,6,0,166,29,6,0,166,29,6,0,166,29,6,0,166,29,22,0,166,29,22,0,166,29,22,0,166,29,22,0,92,0,166,29,14,0,166,29,14,0,166,29,14,0,166,29,14,0,166,29,30,0,166,29,30,0,166,29,30,0,166,29,30,0,92,0,246,11,52,0,18,128,166,29,14,0,166,29,14,0,166,29,14,0,166,29,14,0,92,0,182,21,6,0,182,21,6,0,182,21,6,0,182,21,6,0,4,1,55,9,198,247,254,241,168,245,128,29,40,0,14,3,166,29,6,0,166,29,6,0,166,29,6,0,166,29,6,0,55,9,168,247,136,240,198,245,192,10,242,6,128,29,42,0,192,0,192,139,1,3,0,138,128,12,14,96,182,21,58,0,182,21,58,0,182,21,58,0,182,21,58,0,198,101,38,0,128,21,129,21,130,21,131,21,132,21,4,2,196,29,94,14,55,10,90,14,133,21,214,11,92,0,184,64,59,170,92,41,118,23,166,66,114,130,69,120,228,190,230,65,205,212,20,166,122,201,108,62,13,152,19,3,194,34,5,137,38,17,247,11,44,14,3,2,55,17,38,14,14,10,38,16,102,16,166,16,129,29,8,0,242,3,193,12,240,135,193,0,0,10,64,208,1,138,193,213,128,0,193,0,161,0,1,12,192,229,128,0,38,16,193,37,53,64,3,5,193,101,128,0,206,10,128,17,166,29,16,0,166,29,16,0,166,29,16,0,166,29,16,0,78,16,38,24,38,24,38,24,38,24,38,10,38,10,38,10,230,21,128,64,55,9,212,246,84,238,164,246,100,238,254,241,192,246,48,253,198,246,166,29,14,0,166,29,14,0,166,29,14,0,166,29,14,0,38,10,38,10,38,10,230,21,128,64,92,0,192,21,116,247,92,0,128,29,16,0,32,3,38,16,1,128,0,11,193,21,8,0,192,140,2,135,193,10,252,1,193,101,128,0,193,0,64,80,214,12,0,12,38,10,38,10,38,10,38,16,230,29,68,0,230,29,62,0,230,29,56,0,230,29,50,0,55,9,100,246,136,240,100,238,12,247,182,21,24,0,182,21,24,0,182,21,24,0,182,21,24,0,198,101,10,0,130,21,129,21,128,21,132,21,4,2,196,29,46,13,55,10,42,13,92,0,49,64,23,114,209,247,122,207,64,194,129,28,108,4,142,16,155,66,4,217,44,189,107,36,14,194,231,147,97,15,88,85,192,194,129,28,108,4,142,16,247,66,137,168,137,35,34,153,26,194,251,51,146,104,177,64,215,63,195,152,71,144,101,152,3,3,230,11,38,10,246,12,4,0,2,3,177,0,10,1,246,21,128,64,4,0,114,1,230,11,38,10,246,12,4,0,109,3,78,12,78,12,54,12,4,0,102,17,38,17,247,11,182,12,3,2,55,17,176,12,14,10,230,16,166,16,102,16,38,16,166,29,22,0,166,29,22,0,166,29,22,0,166,29,22,0,230,29,250,0,230,29,244,0,230,29,238,0,230,29,232,0,55,9,144,245,136,240,224,251,228,247,84,238,250,247,118,97,20,0,182,12,20,0,6,134,38,10,38,10,38,10,230,21,128,64,92,0,206,69,0,128,30,3,206,37,225,42,12,135,230,29,112,0,230,29,106,0,230,29,100,0,230,29,94,0,55,9,80,245,136,240,60,248,166,29,6,0,166,29,6,0,166,29,6,0,166,29,6,0,192,21,188,248,55,9,52,245,48,253,136,240,60,248,206,12,5,3,118,11,20,0,182,12,20,0,14,12,182,21,22,0,182,21,22,0,182,21,22,0,182,21,22,0,128,21,129,21,130,21,131,21,132,21,4,2,196,29,242,11,55,10,238,11,133,21,150,37,92,0,201,64,218,15,33,162,194,104,37,192,231,93,45,49,145,242,163,62,227,53,173,59,111,83,153,188,102,105,19,115,20,170,40,58,26,60,140,66,89,134,113,183,166,131,142,238,14,184,116,52,175,121,172,78,226,217,55,177,187,188,44,134,107,166,206,45,195,141,191,74,242,204,8,0,34,64,131,249,78,110,21,68,38,17,55,17,144,11,166,29,8,0,166,29,8,0,166,29,8,0,166,29,8,0,55,9,138,244,140,247,236,248,118,247,254,248,254,241,4,249,166,29,16,0,166,29,16,0,166,29,16,0,166,29,16,0,92,0,206,11,253,2,5,137,182,21,8,0,182,21,8,0,182,21,8,0,182,21,8,0,132,21,55,10,66,11,92,0,38,17,247,11,58,11,3,2,55,17,52,11,14,10,230,16,166,16,102,16,38,16,38,10,1,10,166,29,18,0,166,29,18,0,166,29,18,0,166,29,18,0,128,19,7,128,118,10,8,0,192,69,0,128,14,16,54,16,20,0,192,37,212,63,53,6,192,37,26,65,29,7,38,10,38,10,38,10,230,21,128,64,55,9,248,243,84,238,124,249,100,238,254,241,152,249,166,29,26,0,166,29,26,0,166,29,26,0,166,29,26,0,38,10,38,10,38,10,230,21,128,64,92,0,193,21,36,250,21,1,198,101,8,0,38,10,38,10,38,10,230,21,128,192,166,29,26,0,166,29,26,0,166,29,26,0,166,29,26,0,55,9,170,243,254,241,196,249,193,21,44,250,192,21,124,250,55,9,154,243,48,253,212,249,193,11,12,3,102,28,6,0,102,28,4,0,102,28,2,0,102,28,0,0,55,9,126,243,100,238,240,249,246,11,8,0,2,128,206,101,0,128,182,21,18,0,182,21,18,0,182,21,18,0,182,21,18,0,198,101,2,0,128,21,129,21,130,21,131,21,132,21,4,2,196,29,62,10,55,10,58,10,92,0,73,64,218,15,33,162,194,104,201,64,218,15,33,162,194,104,50,67,85,42,106,12,54,172,184,67,76,166,126,83,18,122,123,67,254,87,250,42,84,115,120,66,74,16,212,195,214,104,50,67,85,42,106,12,53,172,154,67,147,244,23,124,166,93,35,67,134,224,204,245,34,43,213,65,118,35,79,155,200,80,34,63,22,202,68,123,146,27,4,4,55,17,218,9,206,11,83,3,10,128,55,10,172,9,192,21,44,250,197,21,48,4,21,20,21,20,21,20,21,20,197,21,48,4,64,21,65,21,66,21,67,21,30,3,195,12,66,12,65,12,64,12,197,229,8,0,64,101,65,101,64,11,66,101,65,11,67,99,66,11,64,101,2,128,192,101,0,128,229,16,165,16,101,16,37,16,197,21,129,0,195,12,66,12,65,12,64,12,6,135,197,10,249,1,195,21,3,0,128,10,239,1,3,138,131,208,195,0,2,138,66,208,194,0,1,138,1,208,193,0,0,138,64,209,192,0,0,12,1,12,2,12,3,12,247,11,38,9,26,3,133,17,21,16,85,16,149,16,213,16,128,17,197,21,56,4,21,20,21,20,21,20,21,20,206,29,8,9,246,29,6,9,2,0,246,29,2,9,4,0,246,29,254,8,6,0,55,10,22,9,92,0,230,16,166,16,102,16,38,16,0,17,1,10,166,29,14,0,166,29,14,0,166,29,14,0,166,29,14,0,206,69,0,128,206,37,128,64,1,5,7,6,193,10,27,4,55,9,242,241,158,251,254,241,104,251,130,17,178,20,14,0,178,20,14,0,178,20,14,0,178,20,14,0,129,10,11,7,55,9,210,241,158,251,136,240,104,251,38,10,38,10,38,10,230,21,32,66,92,0,198,101,8,0,55,9,184,241,158,251,254,241,190,251,100,238,84,238,202,251,38,10,38,10,38,10,230,21,128,64,92,0,206,69,0,128,129,17,194,21,48,4,82,20,82,20,82,20,82,20,4,16,159,1,38,17,129,29,2,0,130,29,4,0,131,29,6,0,132,29,8,0,5,10,64,16,38,16,192,12,0,138,192,0,193,69,0,255,193,85,128,0,192,229,128,0,58,7,192,37,56,0,11,6,197,21,248,127,54,10,4,0,54,10,6,0,54,10,8,0,54,10,10,0,44,1,196,12,67,12,66,12,65,12,69,12,69,11,192,10,248,6,197,0,193,0,69,208,206,11,1,128,5,11,1,138,193,0,193,139,12,129,102,16,142,80,206,80,22,81,224,3,196,12,67,12,66,12,65,12,192,10,193,139,249,128,192,101,128,0,192,0,193,140,1,80,1,12,118,16,4,0,182,16,6,0,246,16,8,0,54,17,10,0,214,11,132,21,206,69,0,128,92,0,55,17,206,7,38,17,166,29,8,0,166,29,8,0,166,29,8,0,166,29,8,0,166,29,6,0,166,29,6,0,166,29,6,0,166,29,6,0,55,9,182,240,224,251,188,252,100,238,200,252,246,11,8,0,2,7,206,85,0,128,92,0,182,21,8,0,182,21,8,0,182,21,8,0,182,21,8,0,132,21,55,10,126,7,243,1,206,11,211,128,55,17,116,7,38,17,166,29,8,0,166,29,8,0,166,29,8,0,166,29,8,0,166,29,6,0,166,29,6,0,166,29,6,0,166,29,6,0,55,9,92,240,224,251,22,253,100,238,160,252,206,11,8,3,198,101,8,0,38,10,38,10,38,10,230,21,128,192,92,0,198,101,8,0,184,1,230,11,102,16,166,16,230,16,38,17,102,17,131,17,166,29,18,0,166,29,18,0,166,29,18,0,166,29,18,0,133,17,230,24,230,24,230,24,230,24,230,24,230,24,230,24,230,24,55,9,6,240,136,240,104,253,2,146,3,156,1,0,4,1,0,0,0,0,0,0,240,0,38,24,38,24,38,24,38,24,65,17,102,24,102,24,102,24,102,24,55,9,220,239,136,240,146,253,38,24,38,24,38,24,38,24,55,9,204,239,100,238,162,253,194,10,237,6,195,11,40,3,102,29,6,0,102,29,4,0,102,29,2,0,102,29,0,0,55,9,172,239,136,240,194,253,65,17,102,24,102,24,102,24,102,24,38,24,38,24,38,24,38,24,55,9,146,239,100,238,220,253,195,10,9,7,65,17,102,24,102,24,102,24,102,24,55,9,124,239,136,240,204,253,55,9,116,239,254,241,250,253,182,21,34,0,182,21,34,0,182,21,34,0,182,21,34,0,198,101,16,0,133,21,132,21,131,21,130,21,129,21,214,11,92,0,142,45,8,0,19,135,21,130,182,45,10,0,2,0,14,135,16,130,182,45,12,0,4,0,9,135,11,130,182,45,14,0,6,0,4,135,6,130,54,10,8,0,3,1,14,11,182,19,8,0,182,29,8,0,14,0,198,101,14,0,128,21,92,0,166,19,5,4,14,11,246,11,4,0,1,2,11,137,38,17,55,17,236,5,182,12,2,0,12,134,166,29,12,0,166,29,12,0,166,29,12,0,166,29,12,0,246,11,10,0,65,3,8,1,38,10,38,10,38,10,230,21,128,64,246,11,10,0,56,3,166,29,20,0,166,29,20,0,166,29,20,0,166,29,20,0,166,29,6,0,166,29,6,0,166,29,6,0,166,29,6,0,55,9,168,238,136,240,198,254,182,12,18,0,241,134,166,29,14,0,166,29,14,0,166,29,14,0,166,29,14,0,166,29,14,0,166,29,14,0,166,29,14,0,166,29,14,0,55,9,122,238,136,240,244,254,182,21,14,0,182,21,14,0,182,21,14,0,182,21,14,0,246,11,18,0,210,2,198,101,8,0,246,11,12,0,21,4,128,17,166,29,6,0,166,29,6,0,166,29,6,0,166,29,6,0,208,21,128,64,16,10,16,10,16,10,206,11,1,2,6,137,55,9,48,238,254,241,62,255,182,21,12,0,182,21,12,0,182,21,12,0,182,21,12,0,132,21,150,37,55,10,6,5,92,0,4,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21]);Module["FS_createDataFile"]("/","basic10_3.rom",fileData3,true,true,false)}if(Module["calledRun"]){runWithFS()}else{if(!Module["preRun"])Module["preRun"]=[];Module["preRun"].push(runWithFS)}});loadPackage({"files":[]})}))();var Module;if(!Module)Module=(typeof Module!=="undefined"?Module:null)||{};var moduleOverrides={};for(var key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;if(Module["ENVIRONMENT"]){if(Module["ENVIRONMENT"]==="WEB"){ENVIRONMENT_IS_WEB=true}else if(Module["ENVIRONMENT"]==="WORKER"){ENVIRONMENT_IS_WORKER=true}else if(Module["ENVIRONMENT"]==="NODE"){ENVIRONMENT_IS_NODE=true}else if(Module["ENVIRONMENT"]==="SHELL"){ENVIRONMENT_IS_SHELL=true}else{throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.")}}else{ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof require==="function"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER}if(ENVIRONMENT_IS_NODE){if(!Module["print"])Module["print"]=console.log;if(!Module["printErr"])Module["printErr"]=console.warn;var nodeFS;var nodePath;Module["read"]=function read(filename,binary){if(!nodeFS)nodeFS=require("fs");if(!nodePath)nodePath=require("path");filename=nodePath["normalize"](filename);var ret=nodeFS["readFileSync"](filename);return binary?ret:ret.toString()};Module["readBinary"]=function readBinary(filename){var ret=Module["read"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};Module["load"]=function load(f){globalEval(read(f))};if(!Module["thisProgram"]){if(process["argv"].length>1){Module["thisProgram"]=process["argv"][1].replace(/\\/g,"/")}else{Module["thisProgram"]="unknown-program"}}Module["arguments"]=process["argv"].slice(2);if(typeof module!=="undefined"){module["exports"]=Module}process["on"]("uncaughtException",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));Module["inspect"]=(function(){return"[Emscripten Module object]"})}else if(ENVIRONMENT_IS_SHELL){if(!Module["print"])Module["print"]=print;if(typeof printErr!="undefined")Module["printErr"]=printErr;if(typeof read!="undefined"){Module["read"]=read}else{Module["read"]=function read(){throw"no read() available"}}Module["readBinary"]=function readBinary(f){if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}var data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){Module["arguments"]=scriptArgs}else if(typeof arguments!="undefined"){Module["arguments"]=arguments}if(typeof quit==="function"){Module["quit"]=(function(status,toThrow){quit(status)})}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module["read"]=function read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module["readBinary"]=function read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return xhr.response}}Module["readAsync"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response)}else{onerror()}};xhr.onerror=onerror;xhr.send(null)};if(typeof arguments!="undefined"){Module["arguments"]=arguments}if(typeof console!=="undefined"){if(!Module["print"])Module["print"]=function print(x){console.log(x)};if(!Module["printErr"])Module["printErr"]=function printErr(x){console.warn(x)}}else{var TRY_USE_DUMP=false;if(!Module["print"])Module["print"]=TRY_USE_DUMP&&typeof dump!=="undefined"?(function(x){dump(x)}):(function(x){})}if(ENVIRONMENT_IS_WORKER){Module["load"]=importScripts}if(typeof Module["setWindowTitle"]==="undefined"){Module["setWindowTitle"]=(function(title){document.title=title})}}else{throw"Unknown runtime environment. Where are we?"}function globalEval(x){eval.call(null,x)}if(!Module["load"]&&Module["read"]){Module["load"]=function load(f){globalEval(Module["read"](f))}}if(!Module["print"]){Module["print"]=(function(){})}if(!Module["printErr"]){Module["printErr"]=Module["print"]}if(!Module["arguments"]){Module["arguments"]=[]}if(!Module["thisProgram"]){Module["thisProgram"]="./this.program"}if(!Module["quit"]){Module["quit"]=(function(status,toThrow){throw toThrow})}Module.print=Module["print"];Module.printErr=Module["printErr"];Module["preRun"]=[];Module["postRun"]=[];for(var key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var Runtime={setTempRet0:(function(value){tempRet0=value;return value}),getTempRet0:(function(){return tempRet0}),stackSave:(function(){return STACKTOP}),stackRestore:(function(stackTop){STACKTOP=stackTop}),getNativeTypeSize:(function(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return Runtime.QUANTUM_SIZE}else if(type[0]==="i"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}),getNativeFieldSize:(function(type){return Math.max(Runtime.getNativeTypeSize(type),Runtime.QUANTUM_SIZE)}),STACK_ALIGN:16,prepVararg:(function(ptr,type){if(type==="double"||type==="i64"){if(ptr&7){assert((ptr&7)===4);ptr+=4}}else{assert((ptr&3)===0)}return ptr}),getAlignSize:(function(type,size,vararg){if(!vararg&&(type=="i64"||type=="double"))return 8;if(!type)return Math.min(size,8);return Math.min(size||(type?Runtime.getNativeFieldSize(type):0),Runtime.QUANTUM_SIZE)}),dynCall:(function(sig,ptr,args){if(args&&args.length){return Module["dynCall_"+sig].apply(null,[ptr].concat(args))}else{return Module["dynCall_"+sig].call(null,ptr)}}),functionPointers:[],addFunction:(function(func){for(var i=0;i<Runtime.functionPointers.length;i++){if(!Runtime.functionPointers[i]){Runtime.functionPointers[i]=func;return 2*(1+i)}}throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS."}),removeFunction:(function(index){Runtime.functionPointers[(index-2)/2]=null}),warnOnce:(function(text){if(!Runtime.warnOnce.shown)Runtime.warnOnce.shown={};if(!Runtime.warnOnce.shown[text]){Runtime.warnOnce.shown[text]=1;Module.printErr(text)}}),funcWrappers:{},getFuncWrapper:(function(func,sig){assert(sig);if(!Runtime.funcWrappers[sig]){Runtime.funcWrappers[sig]={}}var sigCache=Runtime.funcWrappers[sig];if(!sigCache[func]){if(sig.length===1){sigCache[func]=function dynCall_wrapper(){return Runtime.dynCall(sig,func)}}else if(sig.length===2){sigCache[func]=function dynCall_wrapper(arg){return Runtime.dynCall(sig,func,[arg])}}else{sigCache[func]=function dynCall_wrapper(){return Runtime.dynCall(sig,func,Array.prototype.slice.call(arguments))}}}return sigCache[func]}),getCompilerSetting:(function(name){throw"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work"}),stackAlloc:(function(size){var ret=STACKTOP;STACKTOP=STACKTOP+size|0;STACKTOP=STACKTOP+15&-16;return ret}),staticAlloc:(function(size){var ret=STATICTOP;STATICTOP=STATICTOP+size|0;STATICTOP=STATICTOP+15&-16;return ret}),dynamicAlloc:(function(size){var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=(ret+size+15|0)&-16;HEAP32[DYNAMICTOP_PTR>>2]=end;if(end>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){HEAP32[DYNAMICTOP_PTR>>2]=ret;return 0}}return ret}),alignMemory:(function(size,quantum){var ret=size=Math.ceil(size/(quantum?quantum:16))*(quantum?quantum:16);return ret}),makeBigInt:(function(low,high,unsigned){var ret=unsigned?+(low>>>0)+ +(high>>>0)*4294967296:+(low>>>0)+ +(high|0)*4294967296;return ret}),GLOBAL_BASE:1024,QUANTUM_SIZE:4,__dummy__:0};Module["Runtime"]=Runtime;var ABORT=0;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}function getCFunc(ident){var func=Module["_"+ident];if(!func){try{func=eval("_"+ident)}catch(e){}}assert(func,"Cannot call unknown function "+ident+" (perhaps LLVM optimizations or closure removed it?)");return func}var cwrap,ccall;((function(){var JSfuncs={"stackSave":(function(){Runtime.stackSave()}),"stackRestore":(function(){Runtime.stackRestore()}),"arrayToC":(function(arr){var ret=Runtime.stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),"stringToC":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=Runtime.stackAlloc(len);stringToUTF8(str,ret,len)}return ret})};var toC={"string":JSfuncs["stringToC"],"array":JSfuncs["arrayToC"]};ccall=function ccallFunc(ident,returnType,argTypes,args,opts){var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=Runtime.stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);if(returnType==="string")ret=Pointer_stringify(ret);if(stack!==0){if(opts&&opts.async){EmterpreterAsync.asyncFinalizers.push((function(){Runtime.stackRestore(stack)}));return}Runtime.stackRestore(stack)}return ret};var sourceRegex=/^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;function parseJSFunc(jsfunc){var parsed=jsfunc.toString().match(sourceRegex).slice(1);return{arguments:parsed[0],body:parsed[1],returnValue:parsed[2]}}var JSsource=null;function ensureJSsource(){if(!JSsource){JSsource={};for(var fun in JSfuncs){if(JSfuncs.hasOwnProperty(fun)){JSsource[fun]=parseJSFunc(JSfuncs[fun])}}}}cwrap=function cwrap(ident,returnType,argTypes){argTypes=argTypes||[];var cfunc=getCFunc(ident);var numericArgs=argTypes.every((function(type){return type==="number"}));var numericRet=returnType!=="string";if(numericRet&&numericArgs){return cfunc}var argNames=argTypes.map((function(x,i){return"$"+i}));var funcstr="(function("+argNames.join(",")+") {";var nargs=argTypes.length;if(!numericArgs){ensureJSsource();funcstr+="var stack = "+JSsource["stackSave"].body+";";for(var i=0;i<nargs;i++){var arg=argNames[i],type=argTypes[i];if(type==="number")continue;var convertCode=JSsource[type+"ToC"];funcstr+="var "+convertCode.arguments+" = "+arg+";";funcstr+=convertCode.body+";";funcstr+=arg+"=("+convertCode.returnValue+");"}}var cfuncname=parseJSFunc((function(){return cfunc})).returnValue;funcstr+="var ret = "+cfuncname+"("+argNames.join(",")+");";if(!numericRet){var strgfy=parseJSFunc((function(){return Pointer_stringify})).returnValue;funcstr+="ret = "+strgfy+"(ret);"}if(!numericArgs){ensureJSsource();funcstr+=JSsource["stackRestore"].body.replace("()","(stack)")+";"}funcstr+="return ret})";return eval(funcstr)}}))();Module["ccall"]=ccall;Module["cwrap"]=cwrap;function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}Module["setValue"]=setValue;function getValue(ptr,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":return HEAP8[ptr>>0];case"i8":return HEAP8[ptr>>0];case"i16":return HEAP16[ptr>>1];case"i32":return HEAP32[ptr>>2];case"i64":return HEAP32[ptr>>2];case"float":return HEAPF32[ptr>>2];case"double":return HEAPF64[ptr>>3];default:abort("invalid type for setValue: "+type)}return null}Module["getValue"]=getValue;var ALLOC_NORMAL=0;var ALLOC_STACK=1;var ALLOC_STATIC=2;var ALLOC_DYNAMIC=3;var ALLOC_NONE=4;Module["ALLOC_NORMAL"]=ALLOC_NORMAL;Module["ALLOC_STACK"]=ALLOC_STACK;Module["ALLOC_STATIC"]=ALLOC_STATIC;Module["ALLOC_DYNAMIC"]=ALLOC_DYNAMIC;Module["ALLOC_NONE"]=ALLOC_NONE;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab==="number"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types==="string"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[typeof _malloc==="function"?_malloc:Runtime.staticAlloc,Runtime.stackAlloc,Runtime.staticAlloc,Runtime.dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var ptr=ret,stop;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType==="i8"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];if(typeof curr==="function"){curr=Runtime.getFunctionIndex(curr)}type=singleType||types[i];if(type===0){i++;continue}if(type=="i64")type="i32";setValue(ret+i,curr,type);if(previousType!==type){typeSize=Runtime.getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}Module["allocate"]=allocate;function getMemory(size){if(!staticSealed)return Runtime.staticAlloc(size);if(!runtimeInitialized)return Runtime.dynamicAlloc(size);return _malloc(size)}Module["getMemory"]=getMemory;function Pointer_stringify(ptr,length){if(length===0||!ptr)return"";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret="";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return Module["UTF8ToString"](ptr)}Module["Pointer_stringify"]=Pointer_stringify;function AsciiToString(ptr){var str="";while(1){var ch=HEAP8[ptr++>>0];if(!ch)return str;str+=String.fromCharCode(ch)}}Module["AsciiToString"]=AsciiToString;function stringToAscii(str,outPtr){return writeAsciiToMemory(str,outPtr,false)}Module["stringToAscii"]=stringToAscii;var UTF8Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str="";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}Module["UTF8ArrayToString"]=UTF8ArrayToString;function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}Module["UTF8ToString"]=UTF8ToString;function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}Module["stringToUTF8Array"]=stringToUTF8Array;function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}Module["stringToUTF8"]=stringToUTF8;function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}Module["lengthBytesUTF8"]=lengthBytesUTF8;var UTF16Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf-16le"):undefined;function demangle(func){var __cxa_demangle_func=Module["___cxa_demangle"]||Module["__cxa_demangle"];if(__cxa_demangle_func){try{var s=func.substr(1);var len=lengthBytesUTF8(s)+1;var buf=_malloc(len);stringToUTF8(s,buf,len);var status=_malloc(4);var ret=__cxa_demangle_func(buf,0,0,status);if(getValue(status,"i32")===0&&ret){return Pointer_stringify(ret)}}catch(e){}finally{if(buf)_free(buf);if(status)_free(status);if(ret)_free(ret)}return func}Runtime.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");return func}function demangleAll(text){var regex=/__Z[\w\d_]+/g;return text.replace(regex,(function(x){var y=demangle(x);return x===y?x:x+" ["+y+"]"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return"(no stack trace available)"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module["extraStackTrace"])js+="\n"+Module["extraStackTrace"]();return demangleAll(js)}Module["stackTrace"]=stackTrace;var WASM_PAGE_SIZE=65536;var ASMJS_PAGE_SIZE=16777216;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var HEAP;var buffer;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBuffer(buf){Module["buffer"]=buffer=buf}function updateGlobalBufferViews(){Module["HEAP8"]=HEAP8=new Int8Array(buffer);Module["HEAP16"]=HEAP16=new Int16Array(buffer);Module["HEAP32"]=HEAP32=new Int32Array(buffer);Module["HEAPU8"]=HEAPU8=new Uint8Array(buffer);Module["HEAPU16"]=HEAPU16=new Uint16Array(buffer);Module["HEAPU32"]=HEAPU32=new Uint32Array(buffer);Module["HEAPF32"]=HEAPF32=new Float32Array(buffer);Module["HEAPF64"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function abortOnCannotGrowMemory(){abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+TOTAL_MEMORY+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")}function enlargeMemory(){abortOnCannotGrowMemory()}var TOTAL_STACK=Module["TOTAL_STACK"]||5242880;var TOTAL_MEMORY=Module["TOTAL_MEMORY"]||16777216;if(TOTAL_MEMORY<TOTAL_STACK)Module.printErr("TOTAL_MEMORY should be larger than TOTAL_STACK, was "+TOTAL_MEMORY+"! (TOTAL_STACK="+TOTAL_STACK+")");if(Module["buffer"]){buffer=Module["buffer"]}else{if(typeof WebAssembly==="object"&&typeof WebAssembly.Memory==="function"){Module["wasmMemory"]=new WebAssembly.Memory({"initial":TOTAL_MEMORY/WASM_PAGE_SIZE,"maximum":TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=Module["wasmMemory"].buffer}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}HEAP32[0]=1668509029;HEAP16[1]=25459;if(HEAPU8[2]!==115||HEAPU8[3]!==99)throw"Runtime error: expected the system to be little-endian!";Module["HEAP"]=HEAP;Module["buffer"]=buffer;Module["HEAP8"]=HEAP8;Module["HEAP16"]=HEAP16;Module["HEAP32"]=HEAP32;Module["HEAPU8"]=HEAPU8;Module["HEAPU16"]=HEAPU16;Module["HEAPU32"]=HEAPU32;Module["HEAPF32"]=HEAPF32;Module["HEAPF64"]=HEAPF64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Module["dynCall_v"](func)}else{Module["dynCall_vi"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}Module["addOnPreRun"]=addOnPreRun;function addOnInit(cb){__ATINIT__.unshift(cb)}Module["addOnInit"]=addOnInit;function addOnPreMain(cb){__ATMAIN__.unshift(cb)}Module["addOnPreMain"]=addOnPreMain;function addOnExit(cb){__ATEXIT__.unshift(cb)}Module["addOnExit"]=addOnExit;function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}Module["addOnPostRun"]=addOnPostRun;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}Module["intArrayFromString"]=intArrayFromString;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){chr&=255}ret.push(String.fromCharCode(chr))}return ret.join("")}Module["intArrayToString"]=intArrayToString;function writeStringToMemory(string,buffer,dontAddNull){Runtime.warnOnce("writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!");var lastChar,end;if(dontAddNull){end=buffer+lengthBytesUTF8(string);lastChar=HEAP8[end]}stringToUTF8(string,buffer,Infinity);if(dontAddNull)HEAP8[end]=lastChar}Module["writeStringToMemory"]=writeStringToMemory;function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}Module["writeArrayToMemory"]=writeArrayToMemory;function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}Module["writeAsciiToMemory"]=writeAsciiToMemory;if(!Math["imul"]||Math["imul"](4294967295,5)!==-5)Math["imul"]=function imul(a,b){var ah=a>>>16;var al=a&65535;var bh=b>>>16;var bl=b&65535;return al*bl+(ah*bl+al*bh<<16)|0};Math.imul=Math["imul"];if(!Math["fround"]){var froundBuffer=new Float32Array(1);Math["fround"]=(function(x){froundBuffer[0]=x;return froundBuffer[0]})}Math.fround=Math["fround"];if(!Math["clz32"])Math["clz32"]=(function(x){x=x>>>0;for(var i=0;i<32;i++){if(x&1<<31-i)return i}return 32});Math.clz32=Math["clz32"];if(!Math["trunc"])Math["trunc"]=(function(x){return x<0?Math.ceil(x):Math.floor(x)});Math.trunc=Math["trunc"];var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_round=Math.round;var Math_min=Math.min;var Math_clz32=Math.clz32;var Math_trunc=Math.trunc;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}Module["addRunDependency"]=addRunDependency;function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["removeRunDependency"]=removeRunDependency;Module["preloadedImages"]={};Module["preloadedAudios"]={};var memoryInitializer=null;function integrateWasmJS(Module){var method=Module["wasmJSMethod"]||"native-wasm";Module["wasmJSMethod"]=method;var wasmTextFile=Module["wasmTextFile"]||"emul.wast";var wasmBinaryFile=Module["wasmBinaryFile"]||"emul.wasm";var asmjsCodeFile=Module["asmjsCodeFile"]||"emul.temp.asm.js";var wasmPageSize=64*1024;var asm2wasmImports={"f64-rem":(function(x,y){return x%y}),"f64-to-int":(function(x){return x|0}),"i32s-div":(function(x,y){return(x|0)/(y|0)|0}),"i32u-div":(function(x,y){return(x>>>0)/(y>>>0)>>>0}),"i32s-rem":(function(x,y){return(x|0)%(y|0)|0}),"i32u-rem":(function(x,y){return(x>>>0)%(y>>>0)>>>0}),"debugger":(function(){debugger})};var info={"global":null,"env":null,"asm2wasm":asm2wasmImports,"parent":Module};var exports=null;function lookupImport(mod,base){var lookup=info;if(mod.indexOf(".")<0){lookup=(lookup||{})[mod]}else{var parts=mod.split(".");lookup=(lookup||{})[parts[0]];lookup=(lookup||{})[parts[1]]}if(base){lookup=(lookup||{})[base]}if(lookup===undefined){abort("bad lookupImport to ("+mod+")."+base)}return lookup}function mergeMemory(newBuffer){var oldBuffer=Module["buffer"];if(newBuffer.byteLength<oldBuffer.byteLength){Module["printErr"]("the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here")}var oldView=new Int8Array(oldBuffer);var newView=new Int8Array(newBuffer);if(!memoryInitializer){oldView.set(newView.subarray(Module["STATIC_BASE"],Module["STATIC_BASE"]+Module["STATIC_BUMP"]),Module["STATIC_BASE"])}newView.set(oldView);updateGlobalBuffer(newBuffer);updateGlobalBufferViews()}var WasmTypes={none:0,i32:1,i64:2,f32:3,f64:4};function fixImports(imports){if(!0)return imports;var ret={};for(var i in imports){var fixed=i;if(fixed[0]=="_")fixed=fixed.substr(1);ret[fixed]=imports[i]}return ret}function getBinary(){var binary;if(Module["wasmBinary"]){binary=Module["wasmBinary"];binary=new Uint8Array(binary)}else if(Module["readBinary"]){binary=Module["readBinary"](wasmBinaryFile)}else{throw"on the web, we need the wasm binary to be preloaded and set on Module['wasmBinary']. emcc.py will do that for you when generating HTML (but not JS)"}return binary}function getBinaryPromise(){if(!Module["wasmBinary"]&&typeof fetch==="function"){return fetch(wasmBinaryFile).then((function(response){return response.arrayBuffer()}))}return new Promise((function(resolve,reject){resolve(getBinary())}))}function doJustAsm(global,env,providedBuffer){if(typeof Module["asm"]!=="function"||Module["asm"]===methodHandler){if(!Module["asmPreload"]){eval(Module["read"](asmjsCodeFile))}else{Module["asm"]=Module["asmPreload"]}}if(typeof Module["asm"]!=="function"){Module["printErr"]("asm evalling did not set the module properly");return false}return Module["asm"](global,env,providedBuffer)}function doNativeWasm(global,env,providedBuffer){if(typeof WebAssembly!=="object"){Module["printErr"]("no native wasm support detected");return false}if(!(Module["wasmMemory"]instanceof WebAssembly.Memory)){Module["printErr"]("no native wasm Memory in use");return false}env["memory"]=Module["wasmMemory"];info["global"]={"NaN":NaN,"Infinity":Infinity};info["global.Math"]=global.Math;info["env"]=env;function receiveInstance(instance){exports=instance.exports;if(exports.memory)mergeMemory(exports.memory);Module["asm"]=exports;Module["usingWasm"]=true;removeRunDependency("wasm-instantiate")}addRunDependency("wasm-instantiate");if(Module["instantiateWasm"]){try{return Module["instantiateWasm"](info,receiveInstance)}catch(e){Module["printErr"]("Module.instantiateWasm callback failed with error: "+e);return false}}Module["printErr"]("asynchronously preparing wasm");getBinaryPromise().then((function(binary){return WebAssembly.instantiate(binary,info)})).then((function(output){receiveInstance(output.instance)})).catch((function(reason){Module["printErr"]("failed to asynchronously prepare wasm: "+reason);Module["quit"](1,reason)}));return{}}function doWasmPolyfill(global,env,providedBuffer,method){if(typeof WasmJS!=="function"){Module["printErr"]("WasmJS not detected - polyfill not bundled?");return false}var wasmJS=WasmJS({});wasmJS["outside"]=Module;wasmJS["info"]=info;wasmJS["lookupImport"]=lookupImport;assert(providedBuffer===Module["buffer"]);info.global=global;info.env=env;assert(providedBuffer===Module["buffer"]);env["memory"]=providedBuffer;assert(env["memory"]instanceof ArrayBuffer);wasmJS["providedTotalMemory"]=Module["buffer"].byteLength;var code;if(method==="interpret-binary"){code=getBinary()}else{code=Module["read"](method=="interpret-asm2wasm"?asmjsCodeFile:wasmTextFile)}var temp;if(method=="interpret-asm2wasm"){temp=wasmJS["_malloc"](code.length+1);wasmJS["writeAsciiToMemory"](code,temp);wasmJS["_load_asm2wasm"](temp)}else if(method==="interpret-s-expr"){temp=wasmJS["_malloc"](code.length+1);wasmJS["writeAsciiToMemory"](code,temp);wasmJS["_load_s_expr2wasm"](temp)}else if(method==="interpret-binary"){temp=wasmJS["_malloc"](code.length);wasmJS["HEAPU8"].set(code,temp);wasmJS["_load_binary2wasm"](temp,code.length)}else{throw"what? "+method}wasmJS["_free"](temp);wasmJS["_instantiate"](temp);if(Module["newBuffer"]){mergeMemory(Module["newBuffer"]);Module["newBuffer"]=null}exports=wasmJS["asmExports"];return exports}Module["asmPreload"]=Module["asm"];Module["reallocBuffer"]=(function(size){var PAGE_MULTIPLE=Module["usingWasm"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;size=alignUp(size,PAGE_MULTIPLE);var old=Module["buffer"];var oldSize=old.byteLength;if(Module["usingWasm"]){try{var result=Module["wasmMemory"].grow((size-oldSize)/wasmPageSize);if(result!==(-1|0)){return Module["buffer"]=Module["wasmMemory"].buffer}else{return null}}catch(e){return null}}else{exports["__growWasmMemory"]((size-oldSize)/wasmPageSize);return Module["buffer"]!==old?Module["buffer"]:null}});Module["asm"]=(function(global,env,providedBuffer){global=fixImports(global);env=fixImports(env);if(!env["table"]){var TABLE_SIZE=Module["wasmTableSize"];if(TABLE_SIZE===undefined)TABLE_SIZE=1024;var MAX_TABLE_SIZE=Module["wasmMaxTableSize"];if(typeof WebAssembly==="object"&&typeof WebAssembly.Table==="function"){if(MAX_TABLE_SIZE!==undefined){env["table"]=new WebAssembly.Table({"initial":TABLE_SIZE,"maximum":MAX_TABLE_SIZE,"element":"anyfunc"})}else{env["table"]=new WebAssembly.Table({"initial":TABLE_SIZE,element:"anyfunc"})}}else{env["table"]=new Array(TABLE_SIZE)}Module["wasmTable"]=env["table"]}if(!env["memoryBase"]){env["memoryBase"]=Module["STATIC_BASE"]}if(!env["tableBase"]){env["tableBase"]=0}var exports;var methods=method.split(",");for(var i=0;i<methods.length;i++){var curr=methods[i];Module["printErr"]("trying binaryen method: "+curr);if(curr==="native-wasm"){if(exports=doNativeWasm(global,env,providedBuffer))break}else if(curr==="asmjs"){if(exports=doJustAsm(global,env,providedBuffer))break}else if(curr==="interpret-asm2wasm"||curr==="interpret-s-expr"||curr==="interpret-binary"){if(exports=doWasmPolyfill(global,env,providedBuffer,curr))break}else{throw"bad method: "+curr}}if(!exports)throw"no binaryen method succeeded. consider enabling more options, like interpreting, if you want that: https://github.com/kripken/emscripten/wiki/WebAssembly#binaryen-methods";Module["printErr"]("binaryen method succeeded.");return exports});var methodHandler=Module["asm"]}integrateWasmJS(Module);var ASM_CONSTS=[];STATIC_BASE=1024;STATICTOP=STATIC_BASE+6464;__ATINIT__.push();memoryInitializer=Module["wasmJSMethod"].indexOf("asmjs")>=0||Module["wasmJSMethod"].indexOf("interpret-asm2wasm")>=0?"emul.html.mem":null;var STATIC_BUMP=6464;Module["STATIC_BASE"]=STATIC_BASE;Module["STATIC_BUMP"]=STATIC_BUMP;var tempDoublePtr=STATICTOP;STATICTOP+=16;Module["_memset"]=_memset;function _abort(){Module["abort"]()}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};function ___setErrNo(value){if(Module["___errno_location"])HEAP32[Module["___errno_location"]()>>2]=value;return value}var PATH={splitPath:(function(filename){var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1)}),normalizeArray:(function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1)}else if(last===".."){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up--;up){parts.unshift("..")}}return parts}),normalize:(function(path){var isAbsolute=path.charAt(0)==="/",trailingSlash=path.substr(-1)==="/";path=PATH.normalizeArray(path.split("/").filter((function(p){return!!p})),!isAbsolute).join("/");if(!path&&!isAbsolute){path="."}if(path&&trailingSlash){path+="/"}return(isAbsolute?"/":"")+path}),dirname:(function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return"."}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir}),basename:(function(path){if(path==="/")return"/";var lastSlash=path.lastIndexOf("/");if(lastSlash===-1)return path;return path.substr(lastSlash+1)}),extname:(function(path){return PATH.splitPath(path)[3]}),join:(function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join("/"))}),join2:(function(l,r){return PATH.normalize(l+"/"+r)}),resolve:(function(){var resolvedPath="",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=="string"){throw new TypeError("Arguments to path.resolve must be strings")}else if(!path){return""}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=path.charAt(0)==="/"}resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter((function(p){return!!p})),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||"."}),relative:(function(from,to){from=PATH.resolve(from).substr(1);to=PATH.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/")})};var TTY={ttys:[],init:(function(){}),shutdown:(function(){}),register:(function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)}),stream_ops:{open:(function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}stream.tty=tty;stream.seekable=false}),close:(function(stream){stream.tty.ops.flush(stream.tty)}),flush:(function(stream){stream.tty.ops.flush(stream.tty)}),read:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}for(var i=0;i<length;i++){try{stream.tty.ops.put_char(stream.tty,buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})},default_tty_ops:{get_char:(function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=new Buffer(BUFSIZE);var bytesRead=0;var isPosixPlatform=process.platform!="win32";var fd=process.stdin.fd;if(isPosixPlatform){var usingDevice=false;try{fd=fs.openSync("/dev/stdin","r");usingDevice=true}catch(e){}}try{bytesRead=fs.readSync(fd,buf,0,BUFSIZE,null)}catch(e){if(e.toString().indexOf("EOF")!=-1)bytesRead=0;else throw e}if(usingDevice){fs.closeSync(fd)}if(bytesRead>0){result=buf.slice(0,bytesRead).toString("utf-8")}else{result=null}}else if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ");if(result!==null){result+="\n"}}else if(typeof readline=="function"){result=readline();if(result!==null){result+="\n"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()}),put_char:(function(tty,val){if(val===null||val===10){Module["print"](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module["print"](UTF8ArrayToString(tty.output,0));tty.output=[]}})},default_tty1_ops:{put_char:(function(tty,val){if(val===null||val===10){Module["printErr"](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module["printErr"](UTF8ArrayToString(tty.output,0));tty.output=[]}})}};var MEMFS={ops_table:null,mount:(function(mount){return MEMFS.createNode(null,"/",16384|511,0)}),createNode:(function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node}),getFileDataAsRegularArray:(function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents}),getFileDataAsTypedArray:(function(node){if(!node.contents)return new Uint8Array;if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)}),expandFileStorage:(function(node,newCapacity){if(node.contents&&node.contents.subarray&&newCapacity>node.contents.length){node.contents=MEMFS.getFileDataAsRegularArray(node);node.usedBytes=node.contents.length}if(!node.contents||node.contents.subarray){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return}if(!node.contents&&newCapacity>0)node.contents=[];while(node.contents.length<newCapacity)node.contents.push(0)}),resizeFileStorage:(function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize}),node_ops:{getattr:(function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}}),lookup:(function(parent,name){throw FS.genericErrors[ERRNO_CODES.ENOENT]}),mknod:(function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)}),rename:(function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir}),unlink:(function(parent,name){delete parent.contents[name]}),rmdir:(function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}delete parent.contents[name]}),readdir:(function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node}),readlink:(function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return node.link})},stream_ops:{read:(function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size}),write:(function(stream,buffer,offset,length,position,canOwn){if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position}),allocate:(function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(ERRNO_CODES.ENOMEM)}buffer.set(contents,ptr)}return{ptr:ptr,allocated:allocated}}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0})}};var IDBFS={dbs:{},indexedDB:(function(){if(typeof indexedDB!=="undefined")return indexedDB;var ret=null;if(typeof window==="object")ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,"IDBFS used, but indexedDB not supported");return ret}),DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:(function(mount){return MEMFS.mount.apply(null,arguments)}),syncfs:(function(mount,populate,callback){IDBFS.getLocalSet(mount,(function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,(function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback)}))}))}),getDB:(function(name,callback){var db=IDBFS.dbs[name];if(db){return callback(null,db)}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION)}catch(e){return callback(e)}if(!req){return callback("Unable to connect to IndexedDB")}req.onupgradeneeded=(function(e){var db=e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME)}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME)}if(!fileStore.indexNames.contains("timestamp")){fileStore.createIndex("timestamp","timestamp",{unique:false})}});req.onsuccess=(function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),getLocalSet:(function(mount,callback){var entries={};function isRealDir(p){return p!=="."&&p!==".."}function toAbsolute(root){return(function(p){return PATH.join2(root,p)})}var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))}entries[path]={timestamp:stat.mtime}}return callback(null,{type:"local",entries:entries})}),getRemoteSet:(function(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,(function(err,db){if(err)return callback(err);var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readonly");transaction.onerror=(function(e){callback(this.error);e.preventDefault()});var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index("timestamp");index.openKeyCursor().onsuccess=(function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:"remote",db:db,entries:entries})}entries[cursor.primaryKey]={timestamp:cursor.key};cursor.continue()})}))}),loadLocalEntry:(function(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){return callback(null,{timestamp:stat.mtime,mode:stat.mode})}else if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents})}else{return callback(new Error("node type not supported"))}}),storeLocalEntry:(function(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode)}else if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{encoding:"binary",canOwn:true})}else{return callback(new Error("node type not supported"))}FS.chmod(path,entry.mode);FS.utime(path,entry.timestamp,entry.timestamp)}catch(e){return callback(e)}callback(null)}),removeLocalEntry:(function(path,callback){try{var lookup=FS.lookupPath(path);var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path)}else if(FS.isFile(stat.mode)){FS.unlink(path)}}catch(e){return callback(e)}callback(null)}),loadRemoteEntry:(function(store,path,callback){var req=store.get(path);req.onsuccess=(function(event){callback(null,event.target.result)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),storeRemoteEntry:(function(store,path,entry,callback){var req=store.put(entry,path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),removeRemoteEntry:(function(store,path,callback){var req=store.delete(path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),reconcile:(function(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach((function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++}}));var remove=[];Object.keys(dst.entries).forEach((function(key){var e=dst.entries[key];var e2=src.entries[key];if(!e2){remove.push(key);total++}}));if(!total){return callback(null)}var completed=0;var db=src.type==="remote"?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readwrite");var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err){if(!done.errored){done.errored=true;return callback(err)}return}if(++completed>=total){return callback(null)}}transaction.onerror=(function(e){done(this.error);e.preventDefault()});create.sort().forEach((function(path){if(dst.type==="local"){IDBFS.loadRemoteEntry(store,path,(function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done)}))}else{IDBFS.loadLocalEntry(path,(function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done)}))}}));remove.sort().reverse().forEach((function(path){if(dst.type==="local"){IDBFS.removeLocalEntry(path,done)}else{IDBFS.removeRemoteEntry(store,path,done)}}))})};var NODEFS={isWindows:false,staticInit:(function(){NODEFS.isWindows=!!process.platform.match(/^win/)}),mount:(function(mount){assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null,"/",NODEFS.getMode(mount.opts.root),0)}),createNode:(function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node}),getMode:(function(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&146)>>1}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return stat.mode}),realPath:(function(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts)}),flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:(function(flags){flags&=~2097152;flags&=~2048;flags&=~32768;flags&=~524288;if(flags in NODEFS.flagsToPermissionStringMap){return NODEFS.flagsToPermissionStringMap[flags]}else{throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}}),node_ops:{getattr:(function(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}}),setattr:(function(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),lookup:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode)}),mknod:(function(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,"",{mode:node.mode})}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return node}),rename:(function(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),unlink:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),rmdir:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readdir:(function(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),symlink:(function(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readlink:(function(node){var path=NODEFS.realPath(node);try{path=fs.readlinkSync(path);path=NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root),path);return path}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}})},stream_ops:{open:(function(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsToPermissionString(stream.flags))}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),close:(function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),read:(function(stream,buffer,offset,length,position){if(length===0)return 0;var nbuffer=new Buffer(length);var res;try{res=fs.readSync(stream.nfd,nbuffer,0,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(res>0){for(var i=0;i<res;i++){buffer[offset+i]=nbuffer[i]}}return res}),write:(function(stream,buffer,offset,length,position){var nbuffer=new Buffer(buffer.subarray(offset,offset+length));var res;try{res=fs.writeSync(stream.nfd,nbuffer,0,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}return res}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:(function(mount){assert(ENVIRONMENT_IS_WORKER);if(!WORKERFS.reader)WORKERFS.reader=new FileReaderSync;var root=WORKERFS.createNode(null,"/",WORKERFS.DIR_MODE,0);var createdParents={};function ensureParent(path){var parts=path.split("/");var parent=root;for(var i=0;i<parts.length-1;i++){var curr=parts.slice(0,i+1).join("/");if(!createdParents[curr]){createdParents[curr]=WORKERFS.createNode(parent,parts[i],WORKERFS.DIR_MODE,0)}parent=createdParents[curr]}return parent}function base(path){var parts=path.split("/");return parts[parts.length-1]}Array.prototype.forEach.call(mount.opts["files"]||[],(function(file){WORKERFS.createNode(ensureParent(file.name),base(file.name),WORKERFS.FILE_MODE,0,file,file.lastModifiedDate)}));(mount.opts["blobs"]||[]).forEach((function(obj){WORKERFS.createNode(ensureParent(obj["name"]),base(obj["name"]),WORKERFS.FILE_MODE,0,obj["data"])}));(mount.opts["packages"]||[]).forEach((function(pack){pack["metadata"].files.forEach((function(file){var name=file.filename.substr(1);WORKERFS.createNode(ensureParent(name),base(name),WORKERFS.FILE_MODE,0,pack["blob"].slice(file.start,file.end))}))}));return root}),createNode:(function(parent,name,mode,dev,contents,mtime){var node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=WORKERFS.node_ops;node.stream_ops=WORKERFS.stream_ops;node.timestamp=(mtime||new Date).getTime();assert(WORKERFS.FILE_MODE!==WORKERFS.DIR_MODE);if(mode===WORKERFS.FILE_MODE){node.size=contents.size;node.contents=contents}else{node.size=4096;node.contents={}}if(parent){parent.contents[name]=node}return node}),node_ops:{getattr:(function(node){return{dev:1,ino:undefined,mode:node.mode,nlink:1,uid:0,gid:0,rdev:undefined,size:node.size,atime:new Date(node.timestamp),mtime:new Date(node.timestamp),ctime:new Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)}}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}}),lookup:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}),mknod:(function(parent,name,mode,dev){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rename:(function(oldNode,newDir,newName){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),unlink:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rmdir:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readdir:(function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newName,oldPath){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readlink:(function(node){throw new FS.ErrnoError(ERRNO_CODES.EPERM)})},stream_ops:{read:(function(stream,buffer,offset,length,position){if(position>=stream.node.size)return 0;var chunk=stream.node.contents.slice(position,position+length);var ab=WORKERFS.reader.readAsArrayBuffer(chunk);buffer.set(new Uint8Array(ab),offset);return chunk.size}),write:(function(stream,buffer,offset,length,position){throw new FS.ErrnoError(ERRNO_CODES.EIO)}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};STATICTOP+=16;STATICTOP+=16;STATICTOP+=16;var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:(function(e){if(!(e instanceof FS.ErrnoError))throw e+" : "+stackTrace();return ___setErrNo(e.errno)}),lookupPath:(function(path,opts){path=PATH.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:"",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}var parts=PATH.normalizeArray(path.split("/").filter((function(p){return!!p})),false);var current=FS.root;var current_path="/";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}}}}return{path:current_path,node:current}}),getPath:(function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=="/"?mount+"/"+path:mount+path}path=path?node.name+"/"+path:node.name;node=node.parent}}),hashName:(function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length}),hashAddNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node}),hashRemoveNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}}),lookupNode:(function(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)}),createNode:(function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=(function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev});FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:(function(){return(this.mode&readMode)===readMode}),set:(function(val){val?this.mode|=readMode:this.mode&=~readMode})},write:{get:(function(){return(this.mode&writeMode)===writeMode}),set:(function(val){val?this.mode|=writeMode:this.mode&=~writeMode})},isFolder:{get:(function(){return FS.isDir(this.mode)})},isDevice:{get:(function(){return FS.isChrdev(this.mode)})}})}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node}),destroyNode:(function(node){FS.hashRemoveNode(node)}),isRoot:(function(node){return node===node.parent}),isMountpoint:(function(node){return!!node.mounted}),isFile:(function(mode){return(mode&61440)===32768}),isDir:(function(mode){return(mode&61440)===16384}),isLink:(function(mode){return(mode&61440)===40960}),isChrdev:(function(mode){return(mode&61440)===8192}),isBlkdev:(function(mode){return(mode&61440)===24576}),isFIFO:(function(mode){return(mode&61440)===4096}),isSocket:(function(mode){return(mode&49152)===49152}),flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:(function(str){var flags=FS.flagModes[str];if(typeof flags==="undefined"){throw new Error("Unknown file open mode: "+str)}return flags}),flagsToPermissionString:(function(flag){var perms=["r","w","rw"][flag&3];if(flag&512){perms+="w"}return perms}),nodePermissions:(function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf("r")!==-1&&!(node.mode&292)){return ERRNO_CODES.EACCES}else if(perms.indexOf("w")!==-1&&!(node.mode&146)){return ERRNO_CODES.EACCES}else if(perms.indexOf("x")!==-1&&!(node.mode&73)){return ERRNO_CODES.EACCES}return 0}),mayLookup:(function(dir){var err=FS.nodePermissions(dir,"x");if(err)return err;if(!dir.node_ops.lookup)return ERRNO_CODES.EACCES;return 0}),mayCreate:(function(dir,name){try{var node=FS.lookupNode(dir,name);return ERRNO_CODES.EEXIST}catch(e){}return FS.nodePermissions(dir,"wx")}),mayDelete:(function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var err=FS.nodePermissions(dir,"wx");if(err){return err}if(isdir){if(!FS.isDir(node.mode)){return ERRNO_CODES.ENOTDIR}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return ERRNO_CODES.EBUSY}}else{if(FS.isDir(node.mode)){return ERRNO_CODES.EISDIR}}return 0}),mayOpen:(function(node,flags){if(!node){return ERRNO_CODES.ENOENT}if(FS.isLink(node.mode)){return ERRNO_CODES.ELOOP}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!=="r"||flags&512){return ERRNO_CODES.EISDIR}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))}),MAX_OPEN_FDS:4096,nextfd:(function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(ERRNO_CODES.EMFILE)}),getStream:(function(fd){return FS.streams[fd]}),createStream:(function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=(function(){});FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:(function(){return this.node}),set:(function(val){this.node=val})},isRead:{get:(function(){return(this.flags&2097155)!==1})},isWrite:{get:(function(){return(this.flags&2097155)!==0})},isAppend:{get:(function(){return this.flags&1024})}})}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream}),closeStream:(function(fd){FS.streams[fd]=null}),chrdev_stream_ops:{open:(function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}}),llseek:(function(){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)})},major:(function(dev){return dev>>8}),minor:(function(dev){return dev&255}),makedev:(function(ma,mi){return ma<<8|mi}),registerDevice:(function(dev,ops){FS.devices[dev]={stream_ops:ops}}),getDevice:(function(dev){return FS.devices[dev]}),getMounts:(function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts}),syncfs:(function(populate,callback){if(typeof populate==="function"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){console.log("warning: "+FS.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(err){assert(FS.syncFSRequests>0);FS.syncFSRequests--;return callback(err)}function done(err){if(err){if(!done.errored){done.errored=true;return doCallback(err)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach((function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)}))}),mount:(function(type,opts,mountpoint){var root=mountpoint==="/";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot}),unmount:(function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach((function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}}));node.mounted=null;var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)}),lookup:(function(parent,name){return parent.node_ops.lookup(parent,name)}),mknod:(function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==="."||name===".."){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.mknod(parent,name,mode,dev)}),create:(function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)}),mkdir:(function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)}),mkdirTree:(function(path,mode){var dirs=path.split("/");var d="";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+="/"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=ERRNO_CODES.EEXIST)throw e}}}),mkdev:(function(path,mode,dev){if(typeof dev==="undefined"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)}),symlink:(function(oldpath,newpath){if(!PATH.resolve(oldpath)){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.symlink(parent,newname,oldpath)}),rename:(function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!old_dir||!new_dir)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(ERRNO_CODES.EXDEV)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH.relative(old_path,new_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}relative=PATH.relative(new_path,old_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,"w");if(err){throw new FS.ErrnoError(err)}}try{if(FS.trackingDelegate["willMovePath"]){FS.trackingDelegate["willMovePath"](old_path,new_path)}}catch(e){console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate["onMovePath"])FS.trackingDelegate["onMovePath"](old_path,new_path)}catch(e){console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}}),rmdir:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}}),readdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}return node.node_ops.readdir(node)}),unlink:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}}),readlink:(function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!link.node_ops.readlink){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return PATH.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))}),stat:(function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!node.node_ops.getattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return node.node_ops.getattr(node)}),lstat:(function(path){return FS.stat(path,true)}),chmod:(function(path,mode,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})}),lchmod:(function(path,mode){FS.chmod(path,mode,true)}),fchmod:(function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chmod(stream.node,mode)}),chown:(function(path,uid,gid,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{timestamp:Date.now()})}),lchown:(function(path,uid,gid){FS.chown(path,uid,gid,true)}),fchown:(function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chown(stream.node,uid,gid)}),truncate:(function(path,len){if(len<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.nodePermissions(node,"w");if(err){throw new FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})}),ftruncate:(function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}FS.truncate(stream.node,len)}),utime:(function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})}),open:(function(path,flags,mode,fd_start,fd_end){if(path===""){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}flags=typeof flags==="string"?FS.modeStringToFlags(flags):flags;mode=typeof mode==="undefined"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==="object"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(ERRNO_CODES.EEXIST)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}if(!created){var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module["logReadFiles"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;Module["printErr"]("read file: "+path)}}try{if(FS.trackingDelegate["onOpenFile"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate["onOpenFile"](path,trackingFlags)}}catch(e){console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: "+e.message)}return stream}),close:(function(stream){if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}}),llseek:(function(stream,offset,whence){if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position}),read:(function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.read){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var seeking=true;if(typeof position==="undefined"){position=stream.position;seeking=false}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead}),write:(function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.write){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(stream.flags&1024){FS.llseek(stream,0,2)}var seeking=true;if(typeof position==="undefined"){position=stream.position;seeking=false}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate["onWriteToFile"])FS.trackingDelegate["onWriteToFile"](stream.path)}catch(e){console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: "+e.message)}return bytesWritten}),allocate:(function(stream,offset,length){if(offset<0||length<=0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}stream.stream_ops.allocate(stream,offset,length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EACCES)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)}),munmap:(function(stream){return 0}),ioctl:(function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(ERRNO_CODES.ENOTTY)}return stream.stream_ops.ioctl(stream,cmd,arg)}),readFile:(function(path,opts){opts=opts||{};opts.flags=opts.flags||"r";opts.encoding=opts.encoding||"binary";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==="utf8"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding==="binary"){ret=buf}FS.close(stream);return ret}),writeFile:(function(path,data,opts){opts=opts||{};opts.flags=opts.flags||"w";opts.encoding=opts.encoding||"utf8";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var stream=FS.open(path,opts.flags,opts.mode);if(opts.encoding==="utf8"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,0,opts.canOwn)}else if(opts.encoding==="binary"){FS.write(stream,data,0,data.length,0,opts.canOwn)}FS.close(stream)}),cwd:(function(){return FS.currentPath}),chdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}var err=FS.nodePermissions(lookup.node,"x");if(err){throw new FS.ErrnoError(err)}FS.currentPath=lookup.path}),createDefaultDirectories:(function(){FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user")}),createDefaultDevices:(function(){FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:(function(){return 0}),write:(function(stream,buffer,offset,length,pos){return length})});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));var random_device;if(typeof crypto!=="undefined"){var randomBuffer=new Uint8Array(1);random_device=(function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]})}else if(ENVIRONMENT_IS_NODE){random_device=(function(){return require("crypto").randomBytes(1)[0]})}else{random_device=(function(){return Math.random()*256|0})}FS.createDevice("/dev","random",random_device);FS.createDevice("/dev","urandom",random_device);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp")}),createSpecialDirectories:(function(){FS.mkdir("/proc");FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd");FS.mount({mount:(function(){var node=FS.createNode("/proc/self","fd",16384|511,73);node.node_ops={lookup:(function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);var ret={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:(function(){return stream.path})}};ret.parent=ret;return ret})};return node})},{},"/proc/self/fd")}),createStandardStreams:(function(){if(Module["stdin"]){FS.createDevice("/dev","stdin",Module["stdin"])}else{FS.symlink("/dev/tty","/dev/stdin")}if(Module["stdout"]){FS.createDevice("/dev","stdout",null,Module["stdout"])}else{FS.symlink("/dev/tty","/dev/stdout")}if(Module["stderr"]){FS.createDevice("/dev","stderr",null,Module["stderr"])}else{FS.symlink("/dev/tty1","/dev/stderr")}var stdin=FS.open("/dev/stdin","r");assert(stdin.fd===0,"invalid handle for stdin ("+stdin.fd+")");var stdout=FS.open("/dev/stdout","w");assert(stdout.fd===1,"invalid handle for stdout ("+stdout.fd+")");var stderr=FS.open("/dev/stderr","w");assert(stderr.fd===2,"invalid handle for stderr ("+stderr.fd+")")}),ensureErrnoError:(function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=(function(errno){this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}});this.setErrno(errno);this.message=ERRNO_MESSAGES[errno]};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[ERRNO_CODES.ENOENT].forEach((function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack="<generic error, no stack>"}))}),staticInit:(function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={"MEMFS":MEMFS,"IDBFS":IDBFS,"NODEFS":NODEFS,"WORKERFS":WORKERFS}}),init:(function(input,output,error){assert(!FS.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");FS.init.initialized=true;FS.ensureErrnoError();Module["stdin"]=input||Module["stdin"];Module["stdout"]=output||Module["stdout"];Module["stderr"]=error||Module["stderr"];FS.createStandardStreams()}),quit:(function(){FS.init.initialized=false;var fflush=Module["_fflush"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}}),getMode:(function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode}),joinPath:(function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]=="/")path=path.substr(1);return path}),absolutePath:(function(relative,base){return PATH.resolve(base,relative)}),standardizePath:(function(path){return PATH.normalize(path)}),findObject:(function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}}),analyzePath:(function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==="/"}catch(e){ret.error=e.errno}return ret}),createFolder:(function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)}),createPath:(function(parent,path,canRead,canWrite){parent=typeof parent==="string"?parent:FS.getPath(parent);var parts=path.split("/").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current}),createFile:(function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)}),createDataFile:(function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==="string"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,"w");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node}),createDevice:(function(parent,name,input,output){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:(function(stream){stream.seekable=false}),close:(function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}}),read:(function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})});return FS.mkdev(path,mode,dev)}),createLink:(function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);return FS.symlink(target,path)}),forceLoadFile:(function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!=="undefined"){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.")}else if(Module["read"]){try{obj.contents=intArrayFromString(Module["read"](obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error("Cannot load without read() or XMLHttpRequest.")}if(!success)___setErrNo(ERRNO_CODES.EIO);return success}),createLazyFile:(function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open("HEAD",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var usesGzip=(header=xhr.getResponseHeader("Content-Encoding"))&&header==="gzip";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(function(from,to){if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;xhr.open("GET",url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);if(typeof Uint8Array!="undefined")xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||"",true)}});var lazyArray=this;lazyArray.setDataGetter((function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==="undefined"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==="undefined")throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]}));if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;console.log("LazyFiles on gzip forces download of the whole file when length is accessed")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=="undefined"){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._length})},chunkSize:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize})}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:(function(){return this.contents.length})}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach((function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}return fn.apply(null,arguments)}}));stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node}),createPreloadedFile:(function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency("cp "+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module["preloadPlugins"].forEach((function(plugin){if(handled)return;if(plugin["canHandle"](fullname)){plugin["handle"](byteArray,fullname,finish,(function(){if(onerror)onerror();removeRunDependency(dep)}));handled=true}}));if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url=="string"){Browser.asyncLoad(url,(function(byteArray){processData(byteArray)}),onerror)}else{processData(url)}}),indexedDB:(function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB}),DB_NAME:(function(){return"EM_FS_"+window.location.pathname}),DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log("creating db");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],"readwrite");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror}),loadFilesFromDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],"readonly")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror})};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:(function(dirfd,path){if(path[0]!=="/"){var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);dir=dirstream.path}path=PATH.join2(dir,path)}return path}),doStat:(function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-ERRNO_CODES.ENOTDIR}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;HEAP32[buf+36>>2]=stat.size;HEAP32[buf+40>>2]=4096;HEAP32[buf+44>>2]=stat.blocks;HEAP32[buf+48>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+52>>2]=0;HEAP32[buf+56>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ino;return 0}),doMsync:(function(addr,stream,len,flags){var buffer=new Uint8Array(HEAPU8.subarray(addr,addr+len));FS.msync(stream,buffer,0,len,flags)}),doMkdir:(function(path,mode){path=PATH.normalize(path);if(path[path.length-1]==="/")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0}),doMknod:(function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-ERRNO_CODES.EINVAL}FS.mknod(path,mode,dev);return 0}),doReadlink:(function(path,buf,bufsize){if(bufsize<=0)return-ERRNO_CODES.EINVAL;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len}),doAccess:(function(path,amode){if(amode&~7){return-ERRNO_CODES.EINVAL}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;var perms="";if(amode&4)perms+="r";if(amode&2)perms+="w";if(amode&1)perms+="x";if(perms&&FS.nodePermissions(node,perms)){return-ERRNO_CODES.EACCES}return 0}),doDup:(function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd}),doReadv:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret}),doWritev:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret}),varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),getStreamFromFD:(function(){var stream=FS.getStream(SYSCALLS.get());if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return stream}),getSocketFromFD:(function(){var socket=SOCKFS.getSocket(SYSCALLS.get());if(!socket)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return socket}),getSocketAddress:(function(allowNull){var addrp=SYSCALLS.get(),addrlen=SYSCALLS.get();if(allowNull&&addrp===0)return null;var info=__read_sockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall5(which,varargs){SYSCALLS.varargs=varargs;try{var pathname=SYSCALLS.getStr(),flags=SYSCALLS.get(),mode=SYSCALLS.get();var stream=FS.open(pathname,flags,mode);return stream.fd}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___lock(){}function ___unlock(){}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}Module["_sbrk"]=_sbrk;function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}Module["_memcpy"]=_memcpy;Module["_llvm_bswap_i32"]=_llvm_bswap_i32;Module["_llvm_bswap_i16"]=_llvm_bswap_i16;function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;assert(offset_high===0);FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doWritev(stream,iov,iovcnt)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),op=SYSCALLS.get();switch(op){case 21505:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21506:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21519:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0};case 21520:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return-ERRNO_CODES.EINVAL};case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)};case 21523:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};default:abort("bad ioctl syscall "+op)}}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall221(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),cmd=SYSCALLS.get();switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-ERRNO_CODES.EINVAL}var newStream;newStream=FS.open(stream.path,stream.flags,0,arg);return newStream.fd};case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0};case 12:case 12:{var arg=SYSCALLS.get();var offset=0;HEAP16[arg+offset>>1]=2;return 0};case 13:case 14:case 13:case 14:return 0;case 16:case 8:return-ERRNO_CODES.EINVAL;case 9:___setErrNo(ERRNO_CODES.EINVAL);return-1;default:{return-ERRNO_CODES.EINVAL}}}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall145(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doReadv(stream,iov,iovcnt)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}FS.staticInit();__ATINIT__.unshift((function(){if(!Module["noFSInit"]&&!FS.init.initialized)FS.init()}));__ATMAIN__.push((function(){FS.ignorePermissions=false}));__ATEXIT__.push((function(){FS.quit()}));Module["FS_createFolder"]=FS.createFolder;Module["FS_createPath"]=FS.createPath;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createLink"]=FS.createLink;Module["FS_createDevice"]=FS.createDevice;Module["FS_unlink"]=FS.unlink;__ATINIT__.unshift((function(){TTY.init()}));__ATEXIT__.push((function(){TTY.shutdown()}));if(ENVIRONMENT_IS_NODE){var fs=require("fs");var NODEJS_PATH=require("path");NODEFS.staticInit()}DYNAMICTOP_PTR=allocate(1,"i32",ALLOC_STATIC);STACK_BASE=STACKTOP=Runtime.alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=Runtime.alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;Module["wasmTableSize"]=140;Module["wasmMaxTableSize"]=140;function invoke_ii(index,a1){try{return Module["dynCall_ii"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiii(index,a1,a2,a3){try{return Module["dynCall_iiii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_vi(index,a1){try{Module["dynCall_vi"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_vii(index,a1,a2){try{Module["dynCall_vii"](index,a1,a2)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_v(index){try{Module["dynCall_v"](index)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}Module.asmGlobalArg={"Math":Math,"Int8Array":Int8Array,"Int16Array":Int16Array,"Int32Array":Int32Array,"Uint8Array":Uint8Array,"Uint16Array":Uint16Array,"Uint32Array":Uint32Array,"Float32Array":Float32Array,"Float64Array":Float64Array,"NaN":NaN,"Infinity":Infinity};Module.asmLibraryArg={"abort":abort,"assert":assert,"enlargeMemory":enlargeMemory,"getTotalMemory":getTotalMemory,"abortOnCannotGrowMemory":abortOnCannotGrowMemory,"invoke_ii":invoke_ii,"invoke_iiii":invoke_iiii,"invoke_vi":invoke_vi,"invoke_vii":invoke_vii,"invoke_v":invoke_v,"___syscall221":___syscall221,"___lock":___lock,"_abort":_abort,"___setErrNo":___setErrNo,"___syscall6":___syscall6,"___unlock":___unlock,"___syscall5":___syscall5,"_emscripten_memcpy_big":_emscripten_memcpy_big,"___syscall54":___syscall54,"___syscall140":___syscall140,"___syscall145":___syscall145,"___syscall146":___syscall146,"DYNAMICTOP_PTR":DYNAMICTOP_PTR,"tempDoublePtr":tempDoublePtr,"ABORT":ABORT,"STACKTOP":STACKTOP,"STACK_MAX":STACK_MAX};var asm=Module["asm"](Module.asmGlobalArg,Module.asmLibraryArg,buffer);Module["asm"]=asm;var _llvm_bswap_i32=Module["_llvm_bswap_i32"]=(function(){return Module["asm"]["_llvm_bswap_i32"].apply(null,arguments)});var _Emulator_GetReg=Module["_Emulator_GetReg"]=(function(){return Module["asm"]["_Emulator_GetReg"].apply(null,arguments)});var _main=Module["_main"]=(function(){return Module["asm"]["_main"].apply(null,arguments)});var stackSave=Module["stackSave"]=(function(){return Module["asm"]["stackSave"].apply(null,arguments)});var setThrew=Module["setThrew"]=(function(){return Module["asm"]["setThrew"].apply(null,arguments)});var _Emulator_KeyEvent=Module["_Emulator_KeyEvent"]=(function(){return Module["asm"]["_Emulator_KeyEvent"].apply(null,arguments)});var _Emulator_PrepareScreen=Module["_Emulator_PrepareScreen"]=(function(){return Module["asm"]["_Emulator_PrepareScreen"].apply(null,arguments)});var _Emulator_InitConfiguration=Module["_Emulator_InitConfiguration"]=(function(){return Module["asm"]["_Emulator_InitConfiguration"].apply(null,arguments)});var _Emulator_Stop=Module["_Emulator_Stop"]=(function(){return Module["asm"]["_Emulator_Stop"].apply(null,arguments)});var _memset=Module["_memset"]=(function(){return Module["asm"]["_memset"].apply(null,arguments)});var _sbrk=Module["_sbrk"]=(function(){return Module["asm"]["_sbrk"].apply(null,arguments)});var _memcpy=Module["_memcpy"]=(function(){return Module["asm"]["_memcpy"].apply(null,arguments)});var stackAlloc=Module["stackAlloc"]=(function(){return Module["asm"]["stackAlloc"].apply(null,arguments)});var _Emulator_Start=Module["_Emulator_Start"]=(function(){return Module["asm"]["_Emulator_Start"].apply(null,arguments)});var getTempRet0=Module["getTempRet0"]=(function(){return Module["asm"]["getTempRet0"].apply(null,arguments)});var setTempRet0=Module["setTempRet0"]=(function(){return Module["asm"]["setTempRet0"].apply(null,arguments)});var _llvm_bswap_i16=Module["_llvm_bswap_i16"]=(function(){return Module["asm"]["_llvm_bswap_i16"].apply(null,arguments)});var _emscripten_get_global_libc=Module["_emscripten_get_global_libc"]=(function(){return Module["asm"]["_emscripten_get_global_libc"].apply(null,arguments)});var _free=Module["_free"]=(function(){return Module["asm"]["_free"].apply(null,arguments)});var ___errno_location=Module["___errno_location"]=(function(){return Module["asm"]["___errno_location"].apply(null,arguments)});var runPostSets=Module["runPostSets"]=(function(){return Module["asm"]["runPostSets"].apply(null,arguments)});var _Emulator_GetUptime=Module["_Emulator_GetUptime"]=(function(){return Module["asm"]["_Emulator_GetUptime"].apply(null,arguments)});var _Emulator_Init=Module["_Emulator_Init"]=(function(){return Module["asm"]["_Emulator_Init"].apply(null,arguments)});var establishStackSpace=Module["establishStackSpace"]=(function(){return Module["asm"]["establishStackSpace"].apply(null,arguments)});var stackRestore=Module["stackRestore"]=(function(){return Module["asm"]["stackRestore"].apply(null,arguments)});var _malloc=Module["_malloc"]=(function(){return Module["asm"]["_malloc"].apply(null,arguments)});var _Emulator_SystemFrame=Module["_Emulator_SystemFrame"]=(function(){return Module["asm"]["_Emulator_SystemFrame"].apply(null,arguments)});var _Emulator_Reset=Module["_Emulator_Reset"]=(function(){return Module["asm"]["_Emulator_Reset"].apply(null,arguments)});var dynCall_ii=Module["dynCall_ii"]=(function(){return Module["asm"]["dynCall_ii"].apply(null,arguments)});var dynCall_iiii=Module["dynCall_iiii"]=(function(){return Module["asm"]["dynCall_iiii"].apply(null,arguments)});var dynCall_vi=Module["dynCall_vi"]=(function(){return Module["asm"]["dynCall_vi"].apply(null,arguments)});var dynCall_vii=Module["dynCall_vii"]=(function(){return Module["asm"]["dynCall_vii"].apply(null,arguments)});var dynCall_v=Module["dynCall_v"]=(function(){return Module["asm"]["dynCall_v"].apply(null,arguments)});Runtime.stackAlloc=Module["stackAlloc"];Runtime.stackSave=Module["stackSave"];Runtime.stackRestore=Module["stackRestore"];Runtime.establishStackSpace=Module["establishStackSpace"];Runtime.setTempRet0=Module["setTempRet0"];Runtime.getTempRet0=Module["getTempRet0"];Module["asm"]=asm;if(memoryInitializer){if(typeof Module["locateFile"]==="function"){memoryInitializer=Module["locateFile"](memoryInitializer)}else if(Module["memoryInitializerPrefixURL"]){memoryInitializer=Module["memoryInitializerPrefixURL"]+memoryInitializer}if(ENVIRONMENT_IS_NODE||ENVIRONMENT_IS_SHELL){var data=Module["readBinary"](memoryInitializer);HEAPU8.set(data,Runtime.GLOBAL_BASE)}else{addRunDependency("memory initializer");var applyMemoryInitializer=(function(data){if(data.byteLength)data=new Uint8Array(data);HEAPU8.set(data,Runtime.GLOBAL_BASE);if(Module["memoryInitializerRequest"])delete Module["memoryInitializerRequest"].response;removeRunDependency("memory initializer")});function doBrowserLoad(){Module["readAsync"](memoryInitializer,applyMemoryInitializer,(function(){throw"could not load memory initializer "+memoryInitializer}))}if(Module["memoryInitializerRequest"]){function useRequest(){var request=Module["memoryInitializerRequest"];if(request.status!==200&&request.status!==0){console.warn("a problem seems to have happened with Module.memoryInitializerRequest, status: "+request.status+", retrying "+memoryInitializer);doBrowserLoad();return}applyMemoryInitializer(request.response)}if(Module["memoryInitializerRequest"].response){setTimeout(useRequest,0)}else{Module["memoryInitializerRequest"].addEventListener("load",useRequest)}}else{doBrowserLoad()}}}function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;var preloadStartTime=null;var calledMain=false;dependenciesFulfilled=function runCaller(){if(!Module["calledRun"])run();if(!Module["calledRun"])dependenciesFulfilled=runCaller};Module["callMain"]=Module.callMain=function callMain(args){args=args||[];ensureInitRuntime();var argc=args.length+1;function pad(){for(var i=0;i<4-1;i++){argv.push(0)}}var argv=[allocate(intArrayFromString(Module["thisProgram"]),"i8",ALLOC_NORMAL)];pad();for(var i=0;i<argc-1;i=i+1){argv.push(allocate(intArrayFromString(args[i]),"i8",ALLOC_NORMAL));pad()}argv.push(0);argv=allocate(argv,"i32",ALLOC_NORMAL);try{var ret=Module["_main"](argc,argv,0);exit(ret,true)}catch(e){if(e instanceof ExitStatus){return}else if(e=="SimulateInfiniteLoop"){Module["noExitRuntime"]=true;return}else{var toLog=e;if(e&&typeof e==="object"&&e.stack){toLog=[e,e.stack]}Module.printErr("exception thrown: "+toLog);Module["quit"](1,e)}}finally{calledMain=true}};function run(args){args=args||Module["arguments"];if(preloadStartTime===null)preloadStartTime=Date.now();if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module["calledRun"])return;function doRun(){if(Module["calledRun"])return;Module["calledRun"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();if(Module["_main"]&&shouldRunNow)Module["callMain"](args);postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout((function(){setTimeout((function(){Module["setStatus"]("")}),1);doRun()}),1)}else{doRun()}}Module["run"]=Module.run=run;function exit(status,implicit){if(implicit&&Module["noExitRuntime"]){return}if(Module["noExitRuntime"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module["onExit"])Module["onExit"](status)}if(ENVIRONMENT_IS_NODE){process["exit"](status)}Module["quit"](status,new ExitStatus(status))}Module["exit"]=Module.exit=exit;var abortDecorators=[];function abort(what){if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what)}else{what=""}ABORT=true;EXITSTATUS=1;var extra="\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";var output="abort("+what+") at "+stackTrace()+extra;if(abortDecorators){abortDecorators.forEach((function(decorator){output=decorator(output,what)}))}throw output}Module["abort"]=Module.abort=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}var shouldRunNow=true;if(Module["noInitialRun"]){shouldRunNow=false}Module["noExitRuntime"]=true;run()



